{"version":3,"file":"core-DlvYU3OZ.js","sources":["../node_modules/sticky-module/esm/index.js","../node_modules/@ungap/with-resolvers/index.js","../node_modules/polyscript/esm/interpreter/_io.js","../node_modules/basic-devtools/esm/index.js","../node_modules/@webreflection/fetch/esm/index.js","../node_modules/@webreflection/idb-map/index.js","../node_modules/@webreflection/idb-map/sync.js","../node_modules/polyscript/esm/workers.js","../node_modules/@ungap/structured-clone/esm/deserialize.js","../node_modules/@ungap/structured-clone/esm/types.js","../node_modules/@ungap/structured-clone/esm/serialize.js","../node_modules/@ungap/structured-clone/esm/json.js","../node_modules/proxy-target/esm/traps.js","../node_modules/js-proxy/esm/traps.js","../node_modules/coincident/src/proxy/traps.js","../node_modules/coincident/src/window/constants.js","../node_modules/coincident/node_modules/sabayon/src/shared.js","../node_modules/coincident/node_modules/sabayon/src/main.js","../node_modules/coincident/src/shared.js","../node_modules/coincident/src/main.js","../node_modules/proxy-target/esm/types.js","../node_modules/coincident/src/window/types.js","../node_modules/coincident/src/window/symbol.js","../node_modules/gc-hook/esm/index.js","../node_modules/coincident/src/window/events.js","../node_modules/coincident/src/proxy/main.js","../node_modules/js-proxy/esm/heap.js","../node_modules/polyscript/esm/worker/xworker.js","../node_modules/coincident/src/window/main.js","../node_modules/polyscript/esm/interpreter/dummy.js","../node_modules/codedent/esm/index.js","../node_modules/plain-tag/esm/index.js","../node_modules/html-escaper/esm/index.js","../node_modules/polyscript/esm/utils.js","../node_modules/polyscript/esm/interpreter/_utils.js","../node_modules/polyscript/esm/interpreter/_python.js","../node_modules/polyscript/esm/python/mip.js","../node_modules/polyscript/esm/3rd-party.js","../node_modules/polyscript/esm/interpreter/_nativefs.js","../node_modules/polyscript/esm/interpreter/micropython.js","../node_modules/polyscript/esm/interpreter/pyodide.js","../node_modules/polyscript/esm/interpreter/ruby-wasm-wasi.js","../node_modules/polyscript/esm/interpreter/wasmoon.js","../node_modules/polyscript/esm/interpreter/webr.js","../node_modules/polyscript/esm/interpreters.js","../node_modules/polyscript/esm/loader.js","../node_modules/to-json-callback/esm/index.js","../node_modules/polyscript/esm/hooks.js","../node_modules/polyscript/esm/worker/hook.js","../node_modules/polyscript/esm/worker/class.js","../node_modules/polyscript/esm/errors.js","../node_modules/polyscript/esm/worker/url.js","../node_modules/polyscript/esm/script-handler.js","../node_modules/polyscript/esm/listeners.js","../node_modules/polyscript/esm/xworker.js","../node_modules/polyscript/esm/custom.js","../node_modules/polyscript/esm/index.js","../src/types.js","../src/all-done.js","../src/plugins.js","../src/exceptions.js","../src/fetch.js","../src/config.js","../src/fs.js","../src/sync.js","../src/plugins-helper.js","../node_modules/type-checked-collections/esm/index.js","../src/stdlib.js","../src/stdlib/pyscript.js","../src/hooks.js","../src/plugins/codemirror.js","../src/core.js"],"sourcesContent":["/**\n * Allow leaking a module globally to help avoid conflicting exports\n * if the module might have been re-bundled in other projects.\n * @template T\n * @param {string} name the module name to save or retrieve\n * @param {T} value the module as value to save if not known\n * @param {globalThis} [global=globalThis] the reference where modules are saved where `globalThis` is the default\n * @returns {[T, boolean]} the passed `value` or the previous one as first entry, a boolean indicating if it was known or not\n */\nconst stickyModule = (name, value, global = globalThis) => {\n  const symbol = Symbol.for(name);\n  const known = symbol in global;\n  return [\n    known ?\n      global[symbol] :\n      Object.defineProperty(global, symbol, { value })[symbol],\n    known\n  ];\n};\n\nexport default stickyModule;\n","Promise.withResolvers || (Promise.withResolvers = function withResolvers() {\n  var a, b, c = new this(function (resolve, reject) {\n    a = resolve;\n    b = reject;\n  });\n  return {resolve: a, reject: b, promise: c};\n});\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const io = new WeakMap();\nexport const stdio = (init) => {\n    const context = init || console;\n    const localIO = {\n        // allow plugins or other io manipulating logic to reuse\n        // the buffered utility exposed in here (see py-editor)\n        buffered,\n        stderr: (context.stderr || console.error).bind(context),\n        stdout: (context.stdout || console.log).bind(context),\n    };\n    return {\n        stderr: (...args) => localIO.stderr(...args),\n        stdout: (...args) => localIO.stdout(...args),\n        async get(engine) {\n            const interpreter = await engine;\n            io.set(interpreter, localIO);\n            return interpreter;\n        },\n    };\n};\n\nconst decoder = new TextDecoder();\nexport const buffered = (callback, EOL = 10) => {\n    const buffer = [];\n    return (maybeUI8) => {\n        if (maybeUI8 instanceof Uint8Array) {\n            for (const c of maybeUI8) {\n                if (c === EOL)\n                    callback(decoder.decode(new Uint8Array(buffer.splice(0))));\n                else\n                    buffer.push(c);\n            }\n        }\n        // if io.stderr(error) is passed instead\n        // or any io.stdout(\"thing\") this should\n        // still work as expected\n        else {\n            callback(maybeUI8);\n        }\n    };\n};\n/* c8 ignore stop */\n","/**\n * Given a CSS selector, returns the first matching node, if any.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element?} the found element, if any\n */\nconst $ = (css, root = document) => root.querySelector(css);\n\n/**\n * Given a CSS selector, returns a list of all matching nodes.\n * @param {string} css the CSS selector to query\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Element[]} a list of found nodes\n */\nconst $$ = (css, root = document) => [...root.querySelectorAll(css)];\n\n/**\n * Given a XPath selector, returns a list of all matching nodes.\n * @param {string} path the XPath selector to evaluate\n * @param {Document | DocumentFragment | Element} [root] the optional parent node to query\n * @returns {Node[]} a list of found nodes (elements, attributes, text, comments)\n */\nconst $x = (path, root = document) => {\n  const expression = (new XPathEvaluator).createExpression(path);\n  const xpath = expression.evaluate(root, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE);\n  const result = [];\n  for (let i = 0, {snapshotLength} = xpath; i < snapshotLength; i++)\n    result.push(xpath.snapshotItem(i));\n  return result;\n};\n\nexport {$, $$, $x};\n","// a bit terser code than I usually write but it's 10 LOC within 80 cols\n// if you are struggling to follow the code you can replace 1-char\n// references around with the following one, hoping that helps :-)\n\n// d => descriptors\n// k => key\n// p => promise\n// r => response\n\nconst d = Object.getOwnPropertyDescriptors(Response.prototype);\n\nconst isFunction = value => typeof value === 'function';\n\nconst bypass = (p, k, { get, value }) => get || !isFunction(value) ?\n                p.then(r => r[k]) :\n                (...args) => p.then(r => r[k](...args));\n\nconst direct = (p, value) => isFunction(value) ? value.bind(p) : value;\n\nconst handler = {\n    get: (p, k) => d.hasOwnProperty(k) ? bypass(p, k, d[k]) : direct(p, p[k])\n};\n\n/**\n * @param {RequestInfo | URL} input\n * @param  {...RequestInit} init\n * @returns {Promise<Response> & Response}\n */\nexport default (input, ...init) => new Proxy(fetch(input, ...init), handler);\n","const { assign } = Object;\n\nconst STORAGE = 'entries';\nconst READONLY = 'readonly';\nconst READWRITE = 'readwrite';\n\n/**\n * @typedef {Object} IDBMapOptions\n * @prop {'strict' | 'relaxed' | 'default'} [durability]\n * @prop {string} [prefix]\n */\n\n/** @typedef {[IDBValidKey, unknown]} IDBMapEntry */\n\n/** @type {IDBMapOptions} */\nconst defaultOptions = { durability: 'default', prefix: 'IDBMap' };\n\n/**\n * @template T\n * @param {{ target: IDBRequest<T> }} event\n * @returns {T}\n */\nconst result = ({ target: { result } }) => result;\n\nexport default class IDBMap extends EventTarget {\n  // Privates\n  /** @type {Promise<IDBDatabase>} */ #db;\n  /** @type {IDBMapOptions} */ #options;\n  /** @type {string} */ #prefix;\n\n  /**\n   * @template T\n   * @param {(store: IDBObjectStore) => IDBRequest<T>} what\n   * @param {'readonly' | 'readwrite'} how\n   * @returns {Promise<T>}\n   */\n  async #transaction(what, how) {\n    const db = await this.#db;\n    const t = db.transaction(STORAGE, how, this.#options);\n    return new Promise((onsuccess, onerror) => assign(\n      what(t.objectStore(STORAGE)),\n      {\n        onsuccess,\n        onerror,\n      }\n    ));\n  }\n\n  /**\n   * @param {string} name\n   * @param {IDBMapOptions} options\n   */\n  constructor(\n    name,\n    {\n      durability = defaultOptions.durability,\n      prefix = defaultOptions.prefix,\n    } = defaultOptions\n  ) {\n    super();\n    this.#prefix = prefix;\n    this.#options = { durability };\n    this.#db = new Promise((resolve, reject) => {\n      assign(\n        indexedDB.open(`${this.#prefix}/${name}`),\n        {\n          onupgradeneeded({ target: { result, transaction } }) {\n            if (!result.objectStoreNames.length)\n              result.createObjectStore(STORAGE);\n            transaction.oncomplete = () => resolve(result);\n          },\n          onsuccess(event) {\n            resolve(result(event));\n          },\n          onerror(event) {\n            reject(event);\n            this.dispatchEvent(event);\n          },\n        },\n      );\n    }).then(result => {\n      const boundDispatch = this.dispatchEvent.bind(this);\n      for (const key in result) {\n        if (key.startsWith('on'))\n          result[key] = boundDispatch;\n      }\n      return result;\n    });\n  }\n\n  // EventTarget Forwards\n  /**\n   * @param {Event} event\n   * @returns \n   */\n  dispatchEvent(event) {\n    const { type, message, isTrusted } = event;\n    return super.dispatchEvent(\n      // avoid re-dispatching of the same event\n      isTrusted ?\n        assign(new Event(type), { message }) :\n        event\n    );\n  }\n\n  // IDBDatabase Forwards\n  async close() {\n    (await this.#db).close();\n  }\n\n  // Map async API\n  get size() {\n    return this.#transaction(\n      store => store.count(),\n      READONLY,\n    ).then(result);\n  }\n\n  async clear() {\n    await this.#transaction(\n      store => store.clear(),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async delete(key) {\n    await this.#transaction(\n      store => store.delete(key),\n      READWRITE,\n    );\n  }\n\n  /**\n   * @returns {Promise<IDBMapEntry[]>}\n   */\n  async entries() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key).then(value => [key, value])));\n  }\n\n  /**\n   * @param {(unknown, IDBValidKey, IDBMap) => void} callback\n   * @param {unknown} [context]\n   */\n  async forEach(callback, context = this) {\n    for (const [key, value] of await this.entries())\n      await callback.call(context, value, key, this);\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @returns {Promise<unknown | undefined>}\n   */\n  async get(key) {\n    const value = await this.#transaction(\n      store => store.get(key),\n      READONLY,\n    ).then(result);\n    return value;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   */\n  async has(key) {\n    const k = await this.#transaction(\n      store => store.getKey(key),\n      READONLY,\n    ).then(result);\n    return k !== void 0;\n  }\n\n  async keys() {\n    const keys = await this.#transaction(\n      store => store.getAllKeys(),\n      READONLY,\n    ).then(result);\n    return keys;\n  }\n\n  /**\n   * @param {IDBValidKey} key\n   * @param {unknown} value\n   */\n  async set(key, value) {\n    await this.#transaction(\n      store => store.put(value, key),\n      READWRITE,\n    );\n    return this;\n  }\n\n  async values() {\n    const keys = await this.keys();\n    return Promise.all(keys.map(key => this.get(key)));\n  }\n\n  get [Symbol.toStringTag]() {\n    return this.#prefix;\n  }\n}\n","import IDBMap from './index.js';\n\nexport default class IDBMapSync extends Map {\n  #map;\n  #queue;\n  constructor(...args) {\n    super();\n    this.#map = new IDBMap(...args);\n    this.#queue = this.#map.entries().then(entries => {\n      for (const [key, value] of entries)\n        super.set(key, value);\n    });\n  }\n  async close() {\n    await this.#queue;\n    await this.#map.close();\n  }\n  async sync() {\n    await this.#queue;\n  }\n  clear() {\n    this.#queue = this.#queue.then(() => this.#map.clear());\n    return super.clear();\n  }\n  delete(key) {\n    this.#queue = this.#queue.then(() => this.#map.delete(key));\n    return super.delete(key);\n  }\n  set(key, value) {\n    this.#queue = this.#queue.then(() => this.#map.set(key, value));\n    return super.set(key, value);\n  }\n}\n","// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const workers = new Proxy(new Map, {\n  get(map, name) {\n    if (!map.has(name))\n      map.set(name, Promise.withResolvers());\n    return map.get(name);\n  },\n});\n\n// filter out forever pending Promises in Pyodide\n// @issue https://github.com/pyscript/pyscript/issues/2106\nconst ignore = new Set(['__dict__', 'constructor', 'get', 'has', 'includes', 'next', 'set', 'then']);\n\nexport const workersHandler = new Proxy(Object.freeze({}), {\n  // guard against forever pending Promises in Pyodide\n  // @issue https://github.com/pyscript/pyscript/issues/2106\n  get: (_, name) => (typeof name === 'string' && !ignore.has(name)) ?\n    workers[name].promise.then(w => w.sync) :\n    void 0,\n});\n/* c8 ignore stop */\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst env = typeof self === 'object' ? self : globalThis;\n\nconst deserializer = ($, _) => {\n  const as = (out, index) => {\n    $.set(index, out);\n    return out;\n  };\n\n  const unpair = index => {\n    if ($.has(index))\n      return $.get(index);\n\n    const [type, value] = _[index];\n    switch (type) {\n      case PRIMITIVE:\n      case VOID:\n        return as(value, index);\n      case ARRAY: {\n        const arr = as([], index);\n        for (const index of value)\n          arr.push(unpair(index));\n        return arr;\n      }\n      case OBJECT: {\n        const object = as({}, index);\n        for (const [key, index] of value)\n          object[unpair(key)] = unpair(index);\n        return object;\n      }\n      case DATE:\n        return as(new Date(value), index);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as(new RegExp(source, flags), index);\n      }\n      case MAP: {\n        const map = as(new Map, index);\n        for (const [key, index] of value)\n          map.set(unpair(key), unpair(index));\n        return map;\n      }\n      case SET: {\n        const set = as(new Set, index);\n        for (const index of value)\n          set.add(unpair(index));\n        return set;\n      }\n      case ERROR: {\n        const {name, message} = value;\n        return as(new env[name](message), index);\n      }\n      case BIGINT:\n        return as(BigInt(value), index);\n      case 'BigInt':\n        return as(Object(BigInt(value)), index);\n      case 'ArrayBuffer':\n        return as(new Uint8Array(value).buffer, value);\n      case 'DataView': {\n        const { buffer } = new Uint8Array(value);\n        return as(new DataView(buffer), value);\n      }\n    }\n    return as(new env[type](value), index);\n  };\n\n  return unpair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns a deserialized value from a serialized array of Records.\n * @param {Record[]} serialized a previously serialized value.\n * @returns {any}\n */\nexport const deserialize = serialized => deserializer(new Map, serialized)(0);\n","export const VOID       = -1;\nexport const PRIMITIVE  = 0;\nexport const ARRAY      = 1;\nexport const OBJECT     = 2;\nexport const DATE       = 3;\nexport const REGEXP     = 4;\nexport const MAP        = 5;\nexport const SET        = 6;\nexport const ERROR      = 7;\nexport const BIGINT     = 8;\n// export const SYMBOL = 9;\n","import {\n  VOID, PRIMITIVE,\n  ARRAY, OBJECT,\n  DATE, REGEXP, MAP, SET,\n  ERROR, BIGINT\n} from './types.js';\n\nconst EMPTY = '';\n\nconst {toString} = {};\nconst {keys} = Object;\n\nconst typeOf = value => {\n  const type = typeof value;\n  if (type !== 'object' || !value)\n    return [PRIMITIVE, type];\n\n  const asString = toString.call(value).slice(8, -1);\n  switch (asString) {\n    case 'Array':\n      return [ARRAY, EMPTY];\n    case 'Object':\n      return [OBJECT, EMPTY];\n    case 'Date':\n      return [DATE, EMPTY];\n    case 'RegExp':\n      return [REGEXP, EMPTY];\n    case 'Map':\n      return [MAP, EMPTY];\n    case 'Set':\n      return [SET, EMPTY];\n    case 'DataView':\n      return [ARRAY, asString];\n  }\n\n  if (asString.includes('Array'))\n    return [ARRAY, asString];\n\n  if (asString.includes('Error'))\n    return [ERROR, asString];\n\n  return [OBJECT, asString];\n};\n\nconst shouldSkip = ([TYPE, type]) => (\n  TYPE === PRIMITIVE &&\n  (type === 'function' || type === 'symbol')\n);\n\nconst serializer = (strict, json, $, _) => {\n\n  const as = (out, value) => {\n    const index = _.push(out) - 1;\n    $.set(value, index);\n    return index;\n  };\n\n  const pair = value => {\n    if ($.has(value))\n      return $.get(value);\n\n    let [TYPE, type] = typeOf(value);\n    switch (TYPE) {\n      case PRIMITIVE: {\n        let entry = value;\n        switch (type) {\n          case 'bigint':\n            TYPE = BIGINT;\n            entry = value.toString();\n            break;\n          case 'function':\n          case 'symbol':\n            if (strict)\n              throw new TypeError('unable to serialize ' + type);\n            entry = null;\n            break;\n          case 'undefined':\n            return as([VOID], value);\n        }\n        return as([TYPE, entry], value);\n      }\n      case ARRAY: {\n        if (type) {\n          let spread = value;\n          if (type === 'DataView') {\n            spread = new Uint8Array(value.buffer);\n          }\n          else if (type === 'ArrayBuffer') {\n            spread = new Uint8Array(value);\n          }\n          return as([type, [...spread]], value);\n        }\n\n        const arr = [];\n        const index = as([TYPE, arr], value);\n        for (const entry of value)\n          arr.push(pair(entry));\n        return index;\n      }\n      case OBJECT: {\n        if (type) {\n          switch (type) {\n            case 'BigInt':\n              return as([type, value.toString()], value);\n            case 'Boolean':\n            case 'Number':\n            case 'String':\n              return as([type, value.valueOf()], value);\n          }\n        }\n\n        if (json && ('toJSON' in value))\n          return pair(value.toJSON());\n\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const key of keys(value)) {\n          if (strict || !shouldSkip(typeOf(value[key])))\n            entries.push([pair(key), pair(value[key])]);\n        }\n        return index;\n      }\n      case DATE:\n        return as([TYPE, value.toISOString()], value);\n      case REGEXP: {\n        const {source, flags} = value;\n        return as([TYPE, {source, flags}], value);\n      }\n      case MAP: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const [key, entry] of value) {\n          if (strict || !(shouldSkip(typeOf(key)) || shouldSkip(typeOf(entry))))\n            entries.push([pair(key), pair(entry)]);\n        }\n        return index;\n      }\n      case SET: {\n        const entries = [];\n        const index = as([TYPE, entries], value);\n        for (const entry of value) {\n          if (strict || !shouldSkip(typeOf(entry)))\n            entries.push(pair(entry));\n        }\n        return index;\n      }\n    }\n\n    const {message} = value;\n    return as([TYPE, {name: type, message}], value);\n  };\n\n  return pair;\n};\n\n/**\n * @typedef {Array<string,any>} Record a type representation\n */\n\n/**\n * Returns an array of serialized Records.\n * @param {any} value a serializable value.\n * @param {{json?: boolean, lossy?: boolean}?} options an object with a `lossy` or `json` property that,\n *  if `true`, will not throw errors on incompatible types, and behave more\n *  like JSON stringify would behave. Symbol and Function will be discarded.\n * @returns {Record[]}\n */\n export const serialize = (value, {json, lossy} = {}) => {\n  const _ = [];\n  return serializer(!(json || lossy), !!json, new Map, _)(value), _;\n};\n","/*! (c) Andrea Giammarchi - ISC */\n\nimport {deserialize} from './deserialize.js';\nimport {serialize} from './serialize.js';\n\nconst {parse: $parse, stringify: $stringify} = JSON;\nconst options = {json: true, lossy: true};\n\n/**\n * Revive a previously stringified structured clone.\n * @param {string} str previously stringified data as string.\n * @returns {any} whatever was previously stringified as clone.\n */\nexport const parse = str => deserialize($parse(str));\n\n/**\n * Represent a structured clone value as string.\n * @param {any} any some clone-able value to stringify.\n * @returns {string} the value stringified.\n */\nexport const stringify = any => $stringify(serialize(any, options));\n","export const APPLY                        = 'apply';\nexport const CONSTRUCT                    = 'construct';\nexport const DEFINE_PROPERTY              = 'defineProperty';\nexport const DELETE_PROPERTY              = 'deleteProperty';\nexport const GET                          = 'get';\nexport const GET_OWN_PROPERTY_DESCRIPTOR  = 'getOwnPropertyDescriptor';\nexport const GET_PROTOTYPE_OF             = 'getPrototypeOf';\nexport const HAS                          = 'has';\nexport const IS_EXTENSIBLE                = 'isExtensible';\nexport const OWN_KEYS                     = 'ownKeys';\nexport const PREVENT_EXTENSION            = 'preventExtensions';\nexport const SET                          = 'set';\nexport const SET_PROTOTYPE_OF             = 'setPrototypeOf';\n","export * from 'proxy-target/traps';\nexport const DESTRUCT = 'destruct';\nexport const VALUE_OF = 'valueOf';\n","export const DESTROY = 'destroy';\n","// ⚠️ AUTOMATICALLY GENERATED - DO NOT CHANGE\nconst CHANNEL = 'c70de905-a212-4eca-80aa-dad8bd4e677b';\nexport const MAIN = '=' + CHANNEL;\nexport const WORKER = '-' + CHANNEL;\n","// (c) Andrea Giammarchi - MIT\n\nconst ACTION_INIT = 0;\nconst ACTION_NOTIFY = 1;\nconst ACTION_WAIT = 2;\nconst ACTION_SW = 3;\n\nconst { ArrayBuffer, Atomics: $Atomics, Promise } = globalThis;\nconst { isArray } = Array;\nconst { create, getPrototypeOf, values } = Object;\n\nconst TypedArray = getPrototypeOf(Int32Array);\nconst Atomics = create($Atomics);\n\nconst dispatch = ({ currentTarget, type, origin, lastEventId, source, ports }, data) =>\n  currentTarget.dispatchEvent(new MessageEvent(type, { data, origin, lastEventId, source, ports }));\n\nconst withResolvers = () => Promise.withResolvers();\n\nlet id = 0;\nconst views = new Map;\nconst extend = (Class, SharedArrayBuffer) => class extends Class {\n  constructor(value, ...rest) {\n    super(value, ...rest);\n    if (value instanceof SharedArrayBuffer)\n      views.set(this, [id++, 0, withResolvers()]);\n  }\n};\n\nconst ignoreList = new WeakSet;\n\n/**\n * @template {T}\n * @callback PassThrough\n * @param {T} value\n * @returns {T}\n */\n\n/** @type {PassThrough} */\nconst ignoreDirect = value => value;\n\n/** @type {PassThrough} */\nconst ignorePatch = value => {\n  ignoreList.add(value);\n  return value;\n};\n\nconst isChannel = (event, channel) => {\n  const { data } = event;\n  const yes = isArray(data) && (\n    data.at(0) === channel ||\n    (data.at(1) === ACTION_INIT && !channel)\n  );\n  if (yes) {\n    event.stopImmediatePropagation();\n    event.preventDefault();\n  }\n  return yes;\n};\n\nconst isObject = value => (\n  value !== null &&\n  typeof value === 'object' &&\n  !ignoreList.has(value)\n);\n\nconst transferred = new WeakMap;\nconst transferViews = (data, transfer, visited) => {\n  if (views.has(data))\n    transfer.set(data, views.get(data)[0]);\n  else if (!(data instanceof TypedArray || data instanceof ArrayBuffer)) {\n    for (const value of values(data)) {\n      if (isObject(value) && !visited.has(value)) {\n        visited.add(value);\n        transferViews(value, transfer, visited);\n      }\n    }\n  }\n};\n\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Atomics/waitAsync#browser_compatibility\nconst waitAsyncPatch = (...args) => ({\n  value: new Promise(resolve => {\n    // encodeURIComponent('onmessage=e=>postMessage(!Atomics.wait(...e.data))')\n    let w = new Worker('data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))');\n    w.onmessage = () => resolve('ok');\n    w.postMessage(args);\n  })\n});\n\nconst waitAsyncPoly = (view, index) => {\n  const value = views.get(view), [id, _, { promise }] = value;\n  value[1] = index;\n  return [id, promise];\n};\n\nconst actionNotify = (_view, _id, _index) => {\n  for (const [view, [id, index, { resolve }]] of views) {\n    if (_id === id && _index === index) {\n      for (let i = 0; i < _view.length; i++) view[i] = _view[i];\n      views.delete(view);\n      resolve('ok');\n      break;\n    }\n  }\n};\n\nconst actionWait = (event, transfer, data) => {\n  for (const [view, id] of transfer)\n    transferred.set(view, [id, event.currentTarget]);\n  dispatch(event, data);\n};\n\nconst postData = (CHANNEL, data) => {\n  const transfer = new Map;\n  if (isObject(data)) transferViews(data, transfer, new Set);\n  return transfer.size ? [CHANNEL, ACTION_WAIT, transfer, data] : data;\n};\n\nconst getData = view => transferred.get(view);\n\nexport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics, TypedArray,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  dispatch,\n  extend,\n  isChannel,\n  views,\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT, ACTION_NOTIFY, ACTION_WAIT, ACTION_SW,\n\n  ArrayBuffer, Atomics,\n\n  actionNotify, actionWait,\n  getData, postData,\n  ignoreDirect, ignorePatch,\n  waitAsyncPatch, waitAsyncPoly,\n\n  extend,\n  isChannel,\n  withResolvers,\n} from './shared.js';\n\nlet {\n  BigInt64Array,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker,\n} = globalThis;\n\nlet ignore = ignoreDirect;\nlet polyfill = false;\n\nconst asModule = options => ({ ...options, type: 'module' });\n\ntry {\n  new SharedArrayBuffer(4);\n\n  Worker = class extends Worker {\n    constructor(url, options) {\n      super(url, asModule(options));\n    }\n  }\n\n  if (!Atomics.waitAsync)\n    Atomics.waitAsync = waitAsyncPatch;\n}\ncatch (_) {\n  const CHANNEL = crypto.randomUUID();\n\n  const sync = new Map;\n\n  const addListener = (self, type, handler, ...rest) => {\n    self.addEventListener(type, handler, ...rest);\n  };\n\n  const register = ({ serviceWorker: s }, sw, done) => {\n    let w, c = true;\n    addListener(s, 'message', event => {\n      if (isChannel(event, CHANNEL)) {\n        const [_, id, index] = event.data;\n        const uid = [id, index].join(',');\n        const done = view => {\n          sync.delete(uid);\n          w.postMessage([ CHANNEL, id, index, view ]);\n        };\n        const view = sync.get(uid);\n        if (view) done(view);\n        else {\n          const { promise, resolve } = withResolvers();\n          sync.set(uid, resolve);\n          promise.then(done);\n        }\n      }\n    });\n    // use previous registration, if any, before registering it\n    s.getRegistration(sw)\n      .then(r => (r ?? s.register(sw)))\n      .then(function ready(r) {\n        c = c && !!s.controller;\n        w = (r.installing || r.waiting || r.active);\n        if (w.state === 'activated') {\n          if (c) done();\n          else location.reload();\n        }\n        else\n          addListener(w, 'statechange', () => ready(r), { once: true });\n      });\n  };\n\n  ignore = ignorePatch;\n  polyfill = true;\n\n  Atomics.notify = (view, index) => {\n    const [id, worker] = getData(view);\n    const uid = [id, index].join(',');\n    const known = sync.get(uid);\n    if (known) known(view);\n    else sync.set(uid, view);\n    worker.postMessage([CHANNEL, ACTION_NOTIFY, view, id, index]);\n    return 0;\n  };\n\n  Atomics.waitAsync = (view, ...rest) => {\n    const [_, value] = waitAsyncPoly(view, ...rest);\n    return { value };\n  };\n\n  SharedArrayBuffer = class extends ArrayBuffer {}\n  BigInt64Array = extend(BigInt64Array, SharedArrayBuffer);\n  Int32Array = extend(Int32Array, SharedArrayBuffer);\n\n  let serviceWorker = null;\n  Worker = class extends Worker {\n    constructor(url, options) {\n      let sw = options?.serviceWorker || '';\n      if (sw) {\n        sw = new URL(sw, location.href).href;\n        options = { ...options, serviceWorker: sw };\n        if (!serviceWorker) {\n          const { promise, resolve } = withResolvers();\n          register(navigator, sw, resolve);\n          serviceWorker = promise;\n        }\n        serviceWorker.then(\n          () => super.postMessage([CHANNEL, ACTION_SW])\n        );\n      }\n      super(url, asModule(options));\n      super.postMessage([CHANNEL, ACTION_INIT, options]);\n      addListener(this, 'message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_NOTIFY: {\n              actionNotify(...rest);\n              break;\n            }\n            case ACTION_WAIT: {\n              actionWait(event, ...rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n    postMessage(data, ...rest) {\n      return super.postMessage(postData(CHANNEL, data), ...rest);\n    }\n  }\n}\n\nexport {\n  /** @type {globalThis.Atomics} */ Atomics,\n  /** @type {globalThis.BigInt64Array} */ BigInt64Array,\n  /** @type {globalThis.Int32Array} */ Int32Array,\n  /** @type {globalThis.SharedArrayBuffer} */ SharedArrayBuffer,\n  /** @type {globalThis.Worker} */ Worker,\n  ignore,\n  polyfill,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  ACTION_INIT,\n  ACTION_NOTIFY,\n  ACTION_WAIT,\n  Atomics,\n  isChannel,\n  withResolvers,\n} from 'sabayon/shared';\n\nconst { BYTES_PER_ELEMENT: I32_BYTES } = Int32Array;\nconst { BYTES_PER_ELEMENT: UI16_BYTES } = Uint16Array;\n\nconst { notify } = Atomics;\n\nconst decoder = new TextDecoder('utf-16');\n\nconst buffers = new WeakSet;\n\nconst transfer = (...args) => (buffers.add(args), args);\n\nlet seppuku = '';\nconst actionLength = (stringify, transform) => async (callback, results, [name, id, sb, args, isSync]) => {\n  if (isSync) seppuku = name;\n  try {\n    const result = await callback(...args);\n    if (result !== void 0) {\n      const serialized = stringify(transform ? transform(result) : result);\n      results.set(id, serialized);\n      sb[1] = serialized.length;\n    }\n  }\n  finally {\n    if (isSync) seppuku = '';\n    sb[0] = 1;\n    notify(sb, 0);\n  }\n};\nconst actionFill = (results, [id, sb]) => {\n  const result = results.get(id);\n  results.delete(id);\n  for (let ui16a = new Uint16Array(sb.buffer), i = 0, { length } = result; i < length; i++)\n    ui16a[i] = result.charCodeAt(i);\n  notify(sb, 0);\n};\nconst actionWait = (waitLength, results, map, rest) => {\n  const [name] = rest;\n  const callback = map.get(name);\n  if (!callback) throw new Error(`Unknown proxy.${name}()`);\n  waitLength(callback, results, rest);\n};\n\nconst warn = (name, seppuku) => setTimeout(\n  console.warn,\n  3e3,\n  `💀🔒 - proxy.${name}() in proxy.${seppuku}()`\n);\n\nlet uid = 0;\nconst invoke = (\n  [\n    CHANNEL,\n    i32View,\n    ignore,\n    isSync,\n    parse,\n    polyfill,\n    postMessage,\n    transform,\n    waitAsync,\n  ],\n  name,\n) => (...args) => {\n  let deadlock = seppuku !== '', timer = 0;\n  // slow operations between main and worker should likely not\n  // be tracked as the dance there would never deadlock, it just\n  // eventually slow down and that's it\n  if (deadlock && seppuku[0] !== '=' && seppuku[0] !== '-')\n    timer = warn(name, seppuku);\n  const id = uid++;\n  let transfer = [];\n  if (buffers.has(args.at(-1) || transfer))\n    buffers.delete(transfer = args.pop());\n  const data = ignore(transform ? args.map(transform) : args);\n  let sb = i32View(I32_BYTES * 2);\n  postMessage([CHANNEL, ACTION_WAIT, name, id, sb, data, isSync], { transfer });\n  return waitAsync(sb, 0).value.then(() => {\n    if (deadlock) clearTimeout(timer);\n    const length = sb[1];\n    if (!length) return;\n    const bytes = UI16_BYTES * length;\n    sb = i32View(bytes + (bytes % I32_BYTES));\n    postMessage([CHANNEL, ACTION_NOTIFY, id, sb]);\n    return waitAsync(sb, 0).value.then(() =>{\n      const ui16a = new Uint16Array(sb.buffer);\n      const sub = polyfill ? ui16a.subarray(0, length) : ui16a.slice(0, length);\n      return parse(decoder.decode(sub));\n    });\n  });\n};\n\nconst createProxy = (details, map) => new Proxy(map, {\n  get: (map, name) => {\n    let cb;\n    // the curse of potentially awaiting proxies in the wild\n    // requires this ugly guard around `then`\n    if (name !== 'then') {\n      cb = map.get(name);\n      if (!cb) {\n        cb = invoke(details, name);\n        map.set(name, cb);\n      }\n    }\n    return cb;\n  },\n  set: (map, name, callback) => (\n    name !== 'then' &&\n    !!map.set(name, callback)\n  ),\n});\n\nexport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n\n  withResolvers,\n};\n","// (c) Andrea Giammarchi - MIT\n\nimport {\n  Atomics,\n  Int32Array,\n  SharedArrayBuffer,\n  Worker as $Worker,\n  ignore,\n  polyfill,\n} from 'sabayon/main';\n\nimport {\n  ACTION_INIT,\n  ACTION_WAIT,\n  ACTION_NOTIFY,\n\n  actionLength,\n  actionFill,\n  actionWait,\n\n  createProxy,\n\n  isChannel,\n  transfer,\n} from './shared.js';\n\n/**\n * @typedef {Object} MainOptions\n * @prop {(text: string, ...args:any) => any} [parse=JSON.parse]\n * @prop {(value: any, ...args:any) => string} [stringify=JSON.stringify]\n * @prop {(value: any) => any} [transform]\n */\n\n/**\n * @callback Coincident\n * @param {MainOptions} [options]\n * @returns {{Worker: import('./ts.js').CoincidentWorker, polyfill: boolean, transfer: (...args: Transferable[]) => Transferable[]}}\n */\n\nexport default /** @type {Coincident} */ ({\n  parse,\n  stringify,\n  transform,\n} = JSON) => {\n  const waitLength = actionLength(stringify, transform);\n\n  class Worker extends $Worker {\n    constructor(url, options) {\n      const CHANNEL = crypto.randomUUID();\n      const map = new Map;\n      const results = new Map;\n      super(url, options);\n      this.proxy = createProxy(\n        [\n          CHANNEL,\n          bytes => new Int32Array(new SharedArrayBuffer(bytes)),\n          ignore,\n          false,\n          parse,\n          polyfill,\n          (...args) => this.postMessage(...args),\n          transform,\n          Atomics.waitAsync,\n        ],\n        map,\n      );\n      this.postMessage(ignore([CHANNEL, ACTION_INIT, options]));\n      this.addEventListener('message', event => {\n        if (isChannel(event, CHANNEL)) {\n          const [_, ACTION, ...rest] = event.data;\n          switch (ACTION) {\n            case ACTION_WAIT: {\n              actionWait(waitLength, results, map, rest);\n              break;\n            }\n            case ACTION_NOTIFY: {\n              actionFill(results, rest);\n              break;\n            }\n          }\n        }\n      });\n    }\n  }\n\n  return {\n    Worker,\n    polyfill,\n    transfer,\n  };\n};\n","export const ARRAY     = 'array';\nexport const BIGINT    = 'bigint';\nexport const BOOLEAN   = 'boolean';\nexport const FUNCTION  = 'function';\nexport const NULL      = 'null';\nexport const NUMBER    = 'number';\nexport const OBJECT    = 'object';\nexport const STRING    = 'string';\nexport const SYMBOL    = 'symbol';\nexport const UNDEFINED = 'undefined';\n","import {\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\n// this literal allows mapping right away\n// string types into numeric values so that\n// the transported and transformed arrays\n// would use less bytes to satisfy te same\n// contract while exchanging information.\n// basically this is an home-made ENUM like\n// object literal ... that's it.\n// TBD: should this be part of js-proxy? it feels\n//      to me like it would rather belong in there.\nexport default Object.fromEntries([\n  ARRAY,\n  BIGINT,\n  BOOLEAN,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n].map((k, i) => [k, i]));\n","import { OWN_KEYS } from 'js-proxy/traps';\nimport { SYMBOL } from 'js-proxy/types';\n\nconst { [OWN_KEYS]: ownKeys } = Reflect;\n\nconst known = new Map(\n  ownKeys(Symbol)\n    .filter(s => typeof Symbol[s] === SYMBOL)\n    .map(s => [Symbol[s], s])\n);\n\nexport const fromSymbol = value => {\n  if (value.startsWith('.'))\n    return Symbol.for(value.slice(1));\n  for (const [symbol, name] of known) {\n    if (name === value)\n      return symbol;\n  }\n};\n\nexport const toSymbol = value => (\n  known.get(value) ||\n  `.${Symbol.keyFor(value) || ''}`\n);\n","// (c) Andrea Giammarchi - ISC\n\nconst registry = new FinalizationRegistry(\n  ([onGarbageCollected, held, debug]) => {\n    // \"%cThis is a green text\", \"color:green\"\n    if (debug) console.debug(`%c${String(held)}`, 'font-weight:bold', 'collected');\n    onGarbageCollected(held);\n  }\n);\n\nconst nullHandler = Object.create(null);\n\n/**\n * @template {unknown} H\n * @typedef {Object} GCHookOptions\n * @prop {boolean} [debug=false] if `true`, logs values once these can get collected.\n * @prop {ProxyHandler<object>} [handler] optional proxy handler to use instead of the default one.\n * @prop {H} [return=H] if specified, overrides the returned proxy with its value.\n * @prop {unknown} [token=H] it's the held value by default, but it can be any other token except the returned value itself.\n */\n\n/**\n * @template {unknown} H\n * @param {H} hold the reference to hold behind the scene and passed along the callback once it triggers.\n * @param {(held:H) => void} onGarbageCollected the callback that will receive the held value once its wrapper or indirect reference is no longer needed.\n * @param {GCHookOptions<H>} [options] an optional configuration object to change some default behavior.\n */\nexport const create = (\n  hold,\n  onGarbageCollected,\n  { debug, handler, return: r, token = hold } = nullHandler\n) => {\n  // if no reference to return is defined,\n  // create a proxy for the held one and register that instead.\n  /** @type {H} */\n  const target = r || new Proxy(hold, handler || nullHandler);\n  const args = [target, [onGarbageCollected, hold, !!debug]];\n  if (token !== false) args.push(token);\n  // register the target reference in a way that\n  // the `onGarbageCollected(held)` callback will eventually notify.\n  registry.register(...args);\n  return target;\n};\n\n/**\n * If previously registered as either `token` or `hold` value, allow explicit removal of the entry in the registry.\n * @param {unknown} token the token used during registration. If no `token` was passed, this can be the same `hold` reference.\n * @returns {boolean} `true` if successfully unregistered.\n */\nexport const drop = token => registry.unregister(token);\n","const { addEventListener } = EventTarget.prototype;\nconst eventsHandler = new WeakMap;\nReflect.defineProperty(EventTarget.prototype, 'addEventListener', {\n  value(type, listener, ...options) {\n    const invoke = options.at(0)?.invoke;\n    if (invoke) {\n      let map = eventsHandler.get(this);\n      if (!map) {\n        map = new Map;\n        eventsHandler.set(this, map);\n      }\n      map.set(type, [].concat(invoke));\n      delete options[0].invoke;\n    }\n    return addEventListener.call(this, type, listener, ...options);\n  },\n});\n\nexport default event => {\n  const { currentTarget, target, type } = event;\n  const methods = eventsHandler.get(currentTarget || target)?.get(type);\n  if (methods) for (const method of methods) event[method]();\n};\n","import {\n  APPLY,\n  DEFINE_PROPERTY,\n  GET,\n  GET_OWN_PROPERTY_DESCRIPTOR,\n  OWN_KEYS,\n  DESTRUCT,\n} from 'js-proxy/traps';\n\nimport {\n  ARRAY,\n  FUNCTION,\n  NULL,\n  NUMBER,\n  OBJECT,\n  STRING,\n  SYMBOL,\n  UNDEFINED,\n} from 'js-proxy/types';\n\nimport DEBUG from '../debug.js';\nimport { DESTROY } from './traps.js';\n\nimport { create as heap } from 'js-proxy/heap';\nimport { TypedArray } from 'sabayon/shared';\n\nimport numeric from '../window/types.js';\nimport { fromSymbol, toSymbol } from '../window/symbol.js';\n\nimport { create } from 'gc-hook';\n\nimport handleEvent from '../window/events.js';\n\nconst { isArray } = Array;\n\nexport default (resolve, __worker__) => {\n  const { clear, drop, get, hold } = heap();\n  const proxies = new Map;\n\n  const onGC = ref => {\n    if (DEBUG) console.info('main collecting', ref);\n    proxies.delete(ref);\n    __worker__(DESTRUCT, ref);\n  }\n\n  const toEntry = value => {\n    const TYPE = typeof value;\n    if (DEBUG) console.log('toEntry', TYPE, TYPE === 'function' ? value.name : '');\n    switch (TYPE) {\n      case OBJECT: {\n        if (value === null) return [numeric[NULL], value];\n        if (value === globalThis) return [numeric[OBJECT], null];\n        if (isArray(value)) return [numeric[ARRAY], hold(value)];\n        return [numeric[OBJECT], value instanceof TypedArray ? value : hold(value)];\n      }\n      case FUNCTION: return [numeric[FUNCTION], hold(value)];\n      case SYMBOL: return [numeric[SYMBOL], toSymbol(value)];\n      default: return [numeric[TYPE], value];\n    }\n  };\n\n  const fromEntry = ([numericTYPE, value]) => {\n    switch (numericTYPE) {\n      case numeric[OBJECT]: {\n        if (value === null) return globalThis;\n        if (typeof value === NUMBER) return get(value);\n        if (!(value instanceof TypedArray)) {\n          for (const key in value)\n            value[key] = fromEntry(value[key]);\n        }\n        return value;\n      };\n      case numeric[ARRAY]: {\n        if (typeof value === NUMBER) return get(value);\n        return value.map(fromEntry);\n      };\n      case numeric[FUNCTION]: {\n        switch (typeof value) {\n          case NUMBER: return get(value);\n          case STRING: {\n            let fn = proxies.get(value)?.deref();\n            if (!fn) {\n              fn = create(value, onGC, {\n                token: false,\n                return: function (...args) {\n                  if (args.length && args[0] instanceof Event) handleEvent(args[0]);\n                  return __worker__(APPLY, value, toEntry(this), args.map(toEntry)).then(fromEntry);\n                }\n              });\n              proxies.set(value, new WeakRef(fn));\n            }\n            return fn;\n          }\n        }\n      };\n      case numeric[SYMBOL]: return fromSymbol(value);\n      default: return value;\n    }\n  };\n\n  const asEntry = (method, target, args) => toEntry(method(target, ...args.map(fromEntry)));\n  const asImport = name => import(resolve(name));\n  const globals = new Set;\n\n  return (TRAP, ref, ...args) => {\n    if (TRAP === DESTROY) {\n      if (DEBUG) console.warn('HEAP erased');\n      clear();\n    }\n    else if (TRAP === DESTRUCT) {\n      if (DEBUG) console.info(`Main ${globals.has(ref) ? 'ignoring' : 'dropping'}`, ref);\n      if (!globals.has(ref)) drop(ref);\n    }\n    else {\n      const method = Reflect[TRAP];\n      const target = ref == null ? globalThis : get(ref);\n      switch (TRAP) {\n        case DEFINE_PROPERTY: {\n          const [name, descriptor] = args.map(fromEntry);\n          return toEntry(method(target, name, descriptor));\n        }\n        case GET_OWN_PROPERTY_DESCRIPTOR: {\n          const descriptor = method(target, ...args.map(fromEntry));\n          if (descriptor) {\n            const { get, set, value } = descriptor;\n            if (get) descriptor.get = toEntry(get);\n            if (set) descriptor.set = toEntry(set);\n            if (value) descriptor.value = toEntry(value);\n          }\n          return [numeric[descriptor ? OBJECT : UNDEFINED], descriptor];\n        }\n        case OWN_KEYS: return [numeric[ARRAY], method(target).map(toEntry)];\n        case GET: {\n          // global references should not be proxied more than once\n          // and should not ever be dropped from the main cache\n          // @see https://github.com/pyscript/pyscript/issues/2185\n          if (ref == null) {\n            const result = args[0][1] === 'import' ?\n              toEntry(asImport) :\n              asEntry(method, target, args)\n            ;\n            globals.add(result[1]);\n            if (DEBUG) console.info('Global', args[0][1], result[1]);\n            return result;\n          }\n        }\n        default: return asEntry(method, target, args);\n      }\n    }\n  };\n};\n","import { NUMBER } from 'proxy-target/types';\n\nexport const create = () => {\n  const ids = new Map;\n  const values = new Map;\n  let uid = 0;\n  return {\n    /**\n     * Clear all references retained in the current heap.\n     */\n    clear: () => {\n      ids.clear();\n      values.clear();\n    },\n\n    /**\n     * Remove by id or value any previously stored reference.\n     * @param {number | unknown} id the held value by id or the value itself.\n     * @returns {boolean} `true` if the operation was successful, `false` otherwise.\n     */\n    drop: id => {\n      const [a, b] = typeof id === NUMBER ? [values, ids] : [ids, values];\n      const had = a.has(id);\n      if (had) {\n        b.delete(a.get(id));\n        a.delete(id);\n      }\n      return had;\n    },\n\n    /**\n     * Return the held value reference by its unique identifier.\n     * @param {number} id the unique identifier for the value reference.\n     * @returns {unknown} the related value / reference or undefined.\n     */\n    get: id => values.get(id),\n\n    /**\n     * Create once a unique number id for a generic value reference.\n     * @param {unknown} value a reference used to create a unique identifier.\n     * @returns {number} a unique identifier for that reference.\n     */\n    hold: value => {\n      if (!ids.has(value)) {\n        let id;\n        // a bit apocalyptic scenario but if this thread runs forever\n        // and the id does a whole int32 roundtrip we might have still\n        // some reference dangling around\n        while (/* c8 ignore next */ values.has(id = uid++));\n        ids.set(value, id);\n        values.set(id, value);\n      }\n      return ids.get(value);\n    },\n  };\n};\n\n// globally shared heap\nconst { clear, drop, get, hold } = create();\nexport { clear, drop, get, hold };\n","/* c8 ignore start */\nconst {url} = import.meta;\nconst re = /import\\((['\"])([^)]+?\\.js)\\1\\)/g;\nconst place = (_,q,f) => `import(${q}${new URL(f,url).href}${q})`;\nimport * as JSON from '@ungap/structured-clone/json';\nimport coincident from 'coincident/window/main';\nconst { Worker } = coincident(JSON);\nexport default (...args) => new Worker(URL.createObjectURL(new Blob([\"const{assign:e}=Object,t=\\\"entries\\\",n=\\\"readonly\\\",r=\\\"readwrite\\\",s={durability:\\\"default\\\",prefix:\\\"IDBMap\\\"},o=({target:{result:e}})=>e;class a extends EventTarget{#e;#t;#n;async#r(n,r){const s=(await this.#e).transaction(t,r,this.#t);return new Promise(((r,o)=>e(n(s.objectStore(t)),{onsuccess:r,onerror:o})))}constructor(n,{durability:r=s.durability,prefix:a=s.prefix}=s){super(),this.#n=a,this.#t={durability:r},this.#e=new Promise(((r,s)=>{e(indexedDB.open(`${this.#n}/${n}`),{onupgradeneeded({target:{result:e,transaction:n}}){e.objectStoreNames.length||e.createObjectStore(t),n.oncomplete=()=>r(e)},onsuccess(e){r(o(e))},onerror(e){s(e),this.dispatchEvent(e)}})})).then((e=>{const t=this.dispatchEvent.bind(this);for(const n in e)n.startsWith(\\\"on\\\")&&(e[n]=t);return e}))}dispatchEvent(t){const{type:n,message:r,isTrusted:s}=t;return super.dispatchEvent(s?e(new Event(n),{message:r}):t)}async close(){(await this.#e).close()}get size(){return this.#r((e=>e.count()),n).then(o)}async clear(){await this.#r((e=>e.clear()),r)}async delete(e){await this.#r((t=>t.delete(e)),r)}async entries(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e).then((t=>[e,t])))))}async forEach(e,t=this){for(const[n,r]of await this.entries())await e.call(t,r,n,this)}async get(e){return await this.#r((t=>t.get(e)),n).then(o)}async has(e){return void 0!==await this.#r((t=>t.getKey(e)),n).then(o)}async keys(){return await this.#r((e=>e.getAllKeys()),n).then(o)}async set(e,t){return await this.#r((n=>n.put(t,e)),r),this}async values(){const e=await this.keys();return Promise.all(e.map((e=>this.get(e))))}get[Symbol.toStringTag](){return this.#n}}class i extends Map{#s;#o;constructor(...e){super(),this.#s=new a(...e),this.#o=this.#s.entries().then((e=>{for(const[t,n]of e)super.set(t,n)}))}async close(){await this.#o,await this.#s.close()}async sync(){await this.#o}clear(){return this.#o=this.#o.then((()=>this.#s.clear())),super.clear()}delete(e){return this.#o=this.#o.then((()=>this.#s.delete(e))),super.delete(e)}set(e,t){return this.#o=this.#o.then((()=>this.#s.set(e,t))),super.set(e,t)}}const c=\\\"object\\\"==typeof self?self:globalThis,l=e=>((e,t)=>{const n=(t,n)=>(e.set(n,t),t),r=s=>{if(e.has(s))return e.get(s);const[o,a]=t[s];switch(o){case 0:case-1:return n(a,s);case 1:{const e=n([],s);for(const t of a)e.push(r(t));return e}case 2:{const e=n({},s);for(const[t,n]of a)e[r(t)]=r(n);return e}case 3:return n(new Date(a),s);case 4:{const{source:e,flags:t}=a;return n(new RegExp(e,t),s)}case 5:{const e=n(new Map,s);for(const[t,n]of a)e.set(r(t),r(n));return e}case 6:{const e=n(new Set,s);for(const t of a)e.add(r(t));return e}case 7:{const{name:e,message:t}=a;return n(new c[e](t),s)}case 8:return n(BigInt(a),s);case\\\"BigInt\\\":return n(Object(BigInt(a)),s);case\\\"ArrayBuffer\\\":return n(new Uint8Array(a).buffer,a);case\\\"DataView\\\":{const{buffer:e}=new Uint8Array(a);return n(new DataView(e),a)}}return n(new c[o](a),s)};return r})(new Map,e)(0),u=\\\"\\\",{toString:p}={},{keys:d}=Object,f=e=>{const t=typeof e;if(\\\"object\\\"!==t||!e)return[0,t];const n=p.call(e).slice(8,-1);switch(n){case\\\"Array\\\":return[1,u];case\\\"Object\\\":return[2,u];case\\\"Date\\\":return[3,u];case\\\"RegExp\\\":return[4,u];case\\\"Map\\\":return[5,u];case\\\"Set\\\":return[6,u];case\\\"DataView\\\":return[1,n]}return n.includes(\\\"Array\\\")?[1,n]:n.includes(\\\"Error\\\")?[7,n]:[2,n]},y=([e,t])=>0===e&&(\\\"function\\\"===t||\\\"symbol\\\"===t),h=(e,{json:t,lossy:n}={})=>{const r=[];return((e,t,n,r)=>{const s=(e,t)=>{const s=r.push(e)-1;return n.set(t,s),s},o=r=>{if(n.has(r))return n.get(r);let[a,i]=f(r);switch(a){case 0:{let t=r;switch(i){case\\\"bigint\\\":a=8,t=r.toString();break;case\\\"function\\\":case\\\"symbol\\\":if(e)throw new TypeError(\\\"unable to serialize \\\"+i);t=null;break;case\\\"undefined\\\":return s([-1],r)}return s([a,t],r)}case 1:{if(i){let e=r;return\\\"DataView\\\"===i?e=new Uint8Array(r.buffer):\\\"ArrayBuffer\\\"===i&&(e=new Uint8Array(r)),s([i,[...e]],r)}const e=[],t=s([a,e],r);for(const t of r)e.push(o(t));return t}case 2:{if(i)switch(i){case\\\"BigInt\\\":return s([i,r.toString()],r);case\\\"Boolean\\\":case\\\"Number\\\":case\\\"String\\\":return s([i,r.valueOf()],r)}if(t&&\\\"toJSON\\\"in r)return o(r.toJSON());const n=[],c=s([a,n],r);for(const t of d(r))!e&&y(f(r[t]))||n.push([o(t),o(r[t])]);return c}case 3:return s([a,r.toISOString()],r);case 4:{const{source:e,flags:t}=r;return s([a,{source:e,flags:t}],r)}case 5:{const t=[],n=s([a,t],r);for(const[n,s]of r)(e||!y(f(n))&&!y(f(s)))&&t.push([o(n),o(s)]);return n}case 6:{const t=[],n=s([a,t],r);for(const n of r)!e&&y(f(n))||t.push(o(n));return n}}const{message:c}=r;return s([a,{name:i,message:c}],r)};return o})(!(t||n),!!t,new Map,r)(e),r},{parse:m,stringify:w}=JSON,g={json:!0,lossy:!0};var _=Object.freeze({__proto__:null,parse:e=>l(m(e)),stringify:e=>w(h(e,g))});const A=\\\"apply\\\",b=\\\"construct\\\",E=\\\"defineProperty\\\",v=\\\"deleteProperty\\\",k=\\\"get\\\",S=\\\"getOwnPropertyDescriptor\\\",j=\\\"getPrototypeOf\\\",x=\\\"has\\\",$=\\\"isExtensible\\\",P=\\\"ownKeys\\\",T=\\\"preventExtensions\\\",B=\\\"set\\\",R=\\\"setPrototypeOf\\\";var F=Object.freeze({__proto__:null,APPLY:A,CONSTRUCT:b,DEFINE_PROPERTY:E,DELETE_PROPERTY:v,GET:k,GET_OWN_PROPERTY_DESCRIPTOR:S,GET_PROTOTYPE_OF:j,HAS:x,IS_EXTENSIBLE:$,OWN_KEYS:P,PREVENT_EXTENSION:T,SET:B,SET_PROTOTYPE_OF:R});const O=\\\"destruct\\\",D=\\\"c70de905-a212-4eca-80aa-dad8bd4e677b\\\",M=\\\"=\\\"+D,C=\\\"-\\\"+D,{ArrayBuffer:I,Atomics:L,Promise:H}=globalThis,{isArray:W}=Array,{create:N,getPrototypeOf:U,values:J}=Object,q=U(Int32Array),z=N(L),K=({currentTarget:e,type:t,origin:n,lastEventId:r,source:s,ports:o},a)=>e.dispatchEvent(new MessageEvent(t,{data:a,origin:n,lastEventId:r,source:s,ports:o})),G=()=>H.withResolvers();let Y=0;const V=new Map,X=(e,t)=>class extends e{constructor(e,...n){super(e,...n),e instanceof t&&V.set(this,[Y++,0,G()])}},Z=new WeakSet,Q=e=>(Z.add(e),e),ee=(e,t)=>{const{data:n}=e,r=W(n)&&(n.at(0)===t||0===n.at(1)&&!t);return r&&(e.stopImmediatePropagation(),e.preventDefault()),r},te=e=>null!==e&&\\\"object\\\"==typeof e&&!Z.has(e),ne=new WeakMap,re=(e,t,n)=>{if(V.has(e))t.set(e,V.get(e)[0]);else if(!(e instanceof q||e instanceof I))for(const r of J(e))te(r)&&!n.has(r)&&(n.add(r),re(r,t,n))},se=(...e)=>({value:new H((t=>{let n=new Worker(\\\"data:application/javascript,onmessage%3De%3D%3EpostMessage(!Atomics.wait(...e.data))\\\");n.onmessage=()=>t(\\\"ok\\\"),n.postMessage(e)}))}),oe=(e,t)=>{const n=V.get(e),[r,s,{promise:o}]=n;return n[1]=t,[r,o]};let{Int32Array:ae,SharedArrayBuffer:ie,addEventListener:ce,postMessage:le}=globalThis,ue=!0,pe=e=>e,de=!1;const fe=G();try{new ie(4),z.waitAsync||(z.waitAsync=se),fe.resolve()}catch(e){const t=le,n=ce,r=[];let s=\\\"\\\",o=\\\"\\\";ie=class extends I{},ae=X(ae,ie),pe=Q,de=!0,z.notify=(e,n)=>{const[r]=(e=>ne.get(e))(e);return t([s,1,e,r,n]),0},z.waitAsync=(...e)=>{const[t,n]=oe(...e);return{value:n}},z.wait=(e,t,...n)=>{const[r]=oe(e,t,...n),a=new XMLHttpRequest;a.responseType=\\\"json\\\",a.open(\\\"POST\\\",`${o}?sabayon`,!1),a.setRequestHeader(\\\"Content-Type\\\",\\\"application/json\\\"),a.send(`[\\\"${s}\\\",${r},${t}]`);const{response:i}=a;V.delete(e);for(let t=0;t<i.length;t++)e[t]=i[t];return\\\"ok\\\"},n(\\\"message\\\",(e=>{if(ee(e,s)){const[t,n,...r]=e.data;switch(n){case 0:s=t,o=r.at(0)?.serviceWorker||\\\"\\\",o||(z.wait=null,fe.resolve());break;case 1:((e,t,n)=>{for(const[r,[s,o,{resolve:a}]]of V)if(t===s&&n===o){for(let t=0;t<e.length;t++)r[t]=e[t];V.delete(r),a(\\\"ok\\\");break}})(...r);break;case 2:((e,t,n)=>{for(const[n,r]of t)ne.set(n,[r,e.currentTarget]);K(e,n)})(e,...r);break;case 3:fe.resolve()}}else if(ue){const{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i}=e;r.push([{currentTarget:t,type:n,origin:s,lastEventId:o,source:a,ports:i},e.data])}})),ce=(e,...t)=>{if(n(e,...t),r.length)for(const e of r.splice(0))K(...e)},le=(e,...n)=>t(((e,t)=>{const n=new Map;return te(t)&&re(t,n,new Set),n.size?[e,2,n,t]:t})(s,e),...n)}await fe.promise,ue=!1;const{BYTES_PER_ELEMENT:ye}=Int32Array,{BYTES_PER_ELEMENT:he}=Uint16Array,{notify:me}=z,we=new TextDecoder(\\\"utf-16\\\"),ge=new WeakSet,_e=(...e)=>(ge.add(e),e);let Ae=\\\"\\\";const be=(e,t,n,r)=>{const[s]=r,o=n.get(s);if(!o)throw new Error(`Unknown proxy.${s}()`);e(o,t,r)};let Ee=0;const ve=([e,t,n,r,s,o,a,i,c],l)=>(...u)=>{let p=\\\"\\\"!==Ae,d=0;p&&\\\"=\\\"!==Ae[0]&&\\\"-\\\"!==Ae[0]&&(d=((e,t)=>setTimeout(console.warn,3e3,`💀🔒 - proxy.${e}() in proxy.${t}()`))(l,Ae));const f=Ee++;let y=[];ge.has(u.at(-1)||y)&&ge.delete(y=u.pop());const h=n(i?u.map(i):u);let m=t(2*ye);return a([e,2,l,f,m,h,r],{transfer:y}),c(m,0).value.then((()=>{p&&clearTimeout(d);const n=m[1];if(!n)return;const r=he*n;return m=t(r+r%ye),a([e,1,f,m]),c(m,0).value.then((()=>{const e=new Uint16Array(m.buffer),t=o?e.subarray(0,n):e.slice(0,n);return s(we.decode(t))}))}))},ke=(e,t)=>new Proxy(t,{get:(t,n)=>{let r;return\\\"then\\\"!==n&&(r=t.get(n),r||(r=ve(e,n),t.set(n,r))),r},set:(e,t,n)=>\\\"then\\\"!==t&&!!e.set(t,n)}),{wait:Se,waitAsync:je}=z;var xe=({parse:e,stringify:t,transform:n,interrupt:r}=JSON)=>{const s=((e,t)=>async(n,r,[s,o,a,i,c])=>{c&&(Ae=s);try{const s=await n(...i);if(void 0!==s){const n=e(t?t(s):s);r.set(o,n),a[1]=n.length}}finally{c&&(Ae=\\\"\\\"),a[0]=1,me(a,0)}})(t,n),o=G(),a=new Map,i=new Map;let c=\\\"\\\",l=Se;if(Se&&r){const{handler:e,timeout:t=42}=r;l=(n,r,s)=>{for(;\\\"timed-out\\\"===(s=Se(n,r,0,t));)e();return s}}return ce(\\\"message\\\",(t=>{if(ee(t,c)){const[r,u,...p]=t.data;switch(u){case 0:{const t=!!Se;c=r,o.resolve({polyfill:de,sync:t,transfer:_e,proxy:ke([c,e=>new ae(new ie(e)),pe,t,e,de,le,n,t?(...e)=>({value:{then:t=>t(l(...e))}}):je],a)});break}case 2:a.size?be(s,i,a,p):setTimeout(be,0,s,i,a,p);break;case 1:((e,[t,n])=>{const r=e.get(t);e.delete(t);for(let e=new Uint16Array(n.buffer),t=0,{length:s}=r;t<s;t++)e[t]=r.charCodeAt(t);me(n,0)})(i,p)}}})),o.promise};const $e=\\\"array\\\",Pe=\\\"function\\\",Te=\\\"null\\\",Be=\\\"number\\\",Re=\\\"object\\\",Fe=\\\"symbol\\\",Oe=\\\"undefined\\\";function De(){return this}const Me=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`Held value ${String(t)} not relevant anymore`),e(t)})),Ce=Object.create(null),{Object:Ie,Proxy:Le,Reflect:He}=globalThis,{isArray:We}=Array,{ownKeys:Ne}=He,{create:Ue,hasOwn:Je,values:qe}=Ie,ze=(e,t)=>t===$e?e[0]:t===Pe?e():t===Re?e.$:e,Ke=(e,t,n,r)=>{const s={type:{value:t}},o=Je(e,\\\"valueOf\\\");for(const a of qe(F)){let i=r(e[a]||He[a]);if(o&&a===k){const{valueOf:r}=e,{value:s}=i;i={value(e,o,...a){return o===n?r.call(this,ze(e,t)):s.call(this,e,o,...a)}}}s[a]=i}return Ue(e,s)},Ge=(e,t,n,r=e)=>{if(r===e)switch(typeof e){case Re:case Oe:r||(r=!1);case Pe:break;default:r=!1,t===e&&(t=Ie(e))}const s=new Le(t,n),{destruct:o}=n;return o?((e,t,{debug:n,handler:r,return:s,token:o=e}=Ce)=>{const a=s||new Proxy(e,r||Ce),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),Me.register(...i),a})(e,o,{token:r,return:s}):s},Ye=e=>t=>{const n=typeof t;return n===Re?t?e.get(t)?.[0]??(e=>We(e)?$e:Re)(t):Te:n},Ve=e=>t=>{let n=typeof t;switch(n){case Re:if(!t){n=Te;break}case Pe:const r=e.get(t);r&&([n,t]=r)}return[n,t]},Xe=e=>((e=>{Me.unregister(e)})(e),e);var Ze=e=>{const t=new WeakMap,n=Symbol(),r={},s=(e,n,r)=>(t.set(e,[n,r]),e),o={proxy:r,release:Xe,pair:Ve(t),typeOf:Ye(t),isProxy:e=>t.has(e),valueOf:e=>e[n]??e.valueOf()};for(const t of Ne(e)){if(Je(o,t))continue;const a=e[t];switch(t){case $e:{const e=Ke(a,t,n,(e=>({value([t],...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(Ge(t,[t],e,...n),$e,t);break}case Pe:{const e=Ke(a,t,n,(e=>({value(t,...n){return e.call(this,t(),...n)}})));r[t]=(t,...n)=>{return s(Ge(t,(r=t,De.bind(r)),e,...n),Pe,t);var r};break}case Re:{const e=Ke(a,t,n,(e=>({value({$:t},...n){return e.call(this,t,...n)}})));r[t]=(t,...n)=>s(Ge(t,{$:t},e,...n),Re,t);break}default:{const e=Ke(a,t,n,(e=>({value:e})));r[t]=(n,...r)=>s(Ge(n,n,e,...r),t,n);break}}}return o};const{drop:Qe,get:et,hold:tt}=(()=>{const e=new Map,t=new Map;let n=0;return{clear:()=>{e.clear(),t.clear()},drop:n=>{const[r,s]=typeof n===Be?[t,e]:[e,t],o=r.has(n);return o&&(s.delete(r.get(n)),r.delete(n)),o},get:e=>t.get(e),hold:r=>{if(!e.has(r)){let s;for(;t.has(s=n++););e.set(r,s),t.set(s,r)}return e.get(r)}}})();var nt=Object.fromEntries([$e,\\\"bigint\\\",\\\"boolean\\\",Pe,Te,Be,Re,\\\"string\\\",Fe,Oe].map(((e,t)=>[e,t])));const{[P]:rt}=Reflect,st=new Map(rt(Symbol).filter((e=>typeof Symbol[e]===Fe)).map((e=>[Symbol[e],e]))),ot=e=>st.get(e)||`.${Symbol.keyFor(e)||\\\"\\\"}`,{isArray:at}=Array,{[A]:it}=Reflect;var ct=(e,t)=>{const n=new Map,r=(e,t)=>{let r=n.get(e)?.deref();return r||n.set(e,new WeakRef(r=t(e))),r},s=([e,t])=>{switch(e){case nt[Re]:return null==t?globalThis:typeof t===Be?r(t,l.object):t;case nt[$e]:return typeof t===Be?r(t,l.array):t;case nt[Pe]:return typeof t===Be?r(t,l.function):et(parseInt(t));case nt[Fe]:return(e=>{if(e.startsWith(\\\".\\\"))return Symbol.for(e.slice(1));for(const[t,n]of st)if(n===e)return t})(t);default:return t}},o=e=>{let[n,r]=p(e);switch(n){case Re:if(r==globalThis||null==r)r=null;else if(typeof r===Re&&!(r instanceof q))if(r=t(r),at(r))r=r.map(o);else for(const e in r)r[e]=o(r[e]);return[nt[Re],r];case $e:return[nt[$e],typeof r===Be?r:t(r).map(o)];case Pe:return[nt[Pe],typeof r===Pe?String(tt(t(r))):r];case Fe:return[nt[Fe],ot(e)];default:return[nt[n],r]}},a=(...t)=>s(e(...t)),i={[E]:(e,t,n)=>a(E,e,o(t),o(n)),[v]:(e,t)=>a(v,e,o(t)),[k]:(e,t)=>a(k,e,o(t)),[j]:e=>a(j,e),[S]:(e,t)=>{const n=a(S,e,o(t));if(n){const{get:e,set:t,value:r}=n;e&&(n.get=s(e)),t&&(n.set=s(t)),r&&(n.value=s(r))}return n},[x]:(e,t)=>a(x,e,o(t)),[$]:e=>a($,e),[P]:e=>a(P,e).map(s),[T]:e=>a(T,e),[B]:(e,t,n)=>a(B,e,o(t),o(n)),[R]:(e,t)=>a(R,e,o(t)),[O](t){n.delete(t),e(O,t)}},c={[Re]:i,[$e]:i,[Pe]:{...i,[A]:(e,...t)=>a(A,e,...t.map(o)),[b]:(e,...t)=>a(b,e,...t.map(o))}},{proxy:l,isProxy:u,pair:p}=Ze(c);return{isProxy:u,global:l.object(null),method:async(e,t,...n)=>{const r=parseInt(t);switch(e){case A:{const[e,t]=n;return o(await it(et(r),s(e),t.map(s)))}case O:Qe(r)}}}};const lt={object(...e){return this.string(function(e){for(var t=e[0],n=1,r=arguments.length;n<r;n++)t+=arguments[n]+e[n];return t}(...e))},string(e){for(const t of e.split(/[\\\\r\\\\n]+/))if(t.trim().length){/^(\\\\s+)/.test(t)&&(e=e.replace(new RegExp(\\\"^\\\"+RegExp.$1,\\\"gm\\\"),\\\"\\\"));break}return e}},ut=new WeakMap,pt=e=>{const t=e||console,n={buffered:ft,stderr:(t.stderr||console.error).bind(t),stdout:(t.stdout||console.log).bind(t)};return{stderr:(...e)=>n.stderr(...e),stdout:(...e)=>n.stdout(...e),async get(e){const t=await e;return ut.set(t,n),t}}},dt=new TextDecoder,ft=(e,t=10)=>{const n=[];return r=>{if(r instanceof Uint8Array)for(const s of r)s===t?e(dt.decode(new Uint8Array(n.splice(0)))):n.push(s);else e(r)}},yt=(e,...t)=>lt[typeof e](e,...t),{isArray:ht}=Array,{assign:mt,create:wt,defineProperty:gt,entries:_t}=Object,{all:At,resolve:bt}=new Proxy(Promise,{get:(e,t)=>e[t].bind(e)}),Et=(e,t=location.href)=>new URL(e,t.replace(/^blob:/,\\\"\\\")).href;function vt(e){return e.startsWith(\\\".\\\")?Et(e,this):e}const kt=(e,t,n,r=!1,s=CustomEvent)=>{e.dispatchEvent(new s(`${t}:${n}`,{bubbles:!0,detail:{worker:r}}))},St=e=>Function(`'use strict';return (${e})`)(),jt=e=>e.replace(/^(?:\\\\n|\\\\r\\\\n)/,\\\"\\\"),xt=Symbol.for(\\\"polyscript.js_modules\\\"),$t=new Map;gt(globalThis,xt,{value:$t}),new Proxy($t,{get:(e,t)=>e.get(t),has:(e,t)=>e.has(t),ownKeys:e=>[...e.keys()]});const Pt=(e,t)=>!t.startsWith(\\\"_\\\"),Tt=(e,t)=>new Proxy(e,{has:Pt,get:(e,n)=>e[t][n]}),Bt=(e,t)=>import(e).then((e=>{$t.set(t,{...e})})),Rt=e=>new Promise(((t,n)=>{document.querySelector(`link[rel=\\\"stylesheet\\\"][href=\\\"${e}\\\"]`)?t():document.head.append(mt(document.createElement(\\\"link\\\"),{rel:\\\"stylesheet\\\",href:e,onload:t,onerror:n}))})),Ft=e=>/\\\\.css$/i.test(new URL(e).pathname),Ot=(e,t)=>e.has(t),Dt=e=>[...e.keys()];var Mt=(e,t,n,r)=>{const s=globalThis[xt];if(n)for(let[e,t]of _t(n)){let n=s.get(t);n&&!ht(n)||(s.set(t,n||(n=[])),n.push(e))}return((e,t,n,r)=>new Proxy(e,{has:Ot,ownKeys:Dt,get:(e,s)=>{let o=e.get(s);if(ht(o)){let a=o;o=null;for(let e of a)e=Et(e,r),Ft(e)?n.importCSS(e):(n.importJS(e,s),o=t[xt].get(s));e.set(s,o)}return o}}))(s,e,t,r)};const Ct=new Map,It=e=>Ct.get(e),Lt=(e,t)=>{try{return Function(\\\"require\\\",t)(It)}catch(t){ut.get(e).stderr(t)}};var Ht={type:\\\"dummy\\\",module:()=>\\\"data:application/javascript,\\\",engine:e=>pt().get(e),registerJSModule(e,t,n){Ct.set(t,n)},run:Lt,runAsync:Lt,runEvent:async(e,t,n)=>{try{await Function(\\\"require\\\",\\\"e\\\",`return ${t}(e)`)(It,n)}catch(t){ut.get(e).stderr(t)}},transform:(e,t)=>t,writeFile(){}};const Wt=Object.getOwnPropertyDescriptors(Response.prototype),Nt=e=>\\\"function\\\"==typeof e,Ut={get:(e,t)=>Wt.hasOwnProperty(t)?((e,t,{get:n,value:r})=>n||!Nt(r)?e.then((e=>e[t])):(...n)=>e.then((e=>e[t](...n))))(e,t,Wt[t]):((e,t)=>Nt(t)?t.bind(e):t)(e,e[t])};var Jt=(e,...t)=>new Proxy(fetch(e,...t),Ut);Promise.withResolvers||(Promise.withResolvers=function(){var e,t,n=new this((function(n,r){e=n,t=r}));return{resolve:e,reject:t,promise:n}});const qt=!globalThis.window,zt=({FS:e,PATH:t,PATH_FS:n},r,s)=>{const o=n.resolve(r),a=t.dirname(o);return e.mkdirTree?e.mkdirTree(a):Gt(e,a),e.writeFile(o,new Uint8Array(s),{canOwn:!0})},Kt=e=>{const t=e.split(\\\"/\\\");return t.pop(),t.join(\\\"/\\\")},Gt=(e,t)=>{const n=[];for(const r of t.split(\\\"/\\\"))\\\".\\\"!==r&&\\\"..\\\"!==r&&(n.push(r),r&&e.mkdir(n.join(\\\"/\\\")))},Yt=(e,t)=>{const n=[];for(const e of t.split(\\\"/\\\"))switch(e){case\\\"\\\":case\\\".\\\":break;case\\\"..\\\":n.pop();break;default:n.push(e)}return[e.cwd()].concat(n).join(\\\"/\\\").replace(/^\\\\/+/,\\\"/\\\")},Vt=e=>{const t=e.map((e=>e.trim().replace(/(^[/]*|[/]*$)/g,\\\"\\\"))).filter((e=>\\\"\\\"!==e&&\\\".\\\"!==e)).join(\\\"/\\\");return e[0].startsWith(\\\"/\\\")?`/${t}`:t},Xt=(e,t)=>Jt(Et(e,t)).arrayBuffer(),Zt=(e,t,n,r)=>At((e=>{for(const{files:t,to_file:n,from:r=\\\"\\\"}of e){if(void 0!==t&&void 0!==n)throw new Error(\\\"Cannot use 'to_file' and 'files' parameters together!\\\");if(void 0===t&&void 0===n&&r.endsWith(\\\"/\\\"))throw new Error(`Couldn't determine the filename from the path ${r}, please supply 'to_file' parameter.`)}return e.flatMap((({from:e=\\\"\\\",to_folder:t=\\\".\\\",to_file:n,files:r})=>{if(ht(r))return r.map((n=>({url:Vt([e,n]),path:Vt([t,n])})));const s=n||e.slice(1+e.lastIndexOf(\\\"/\\\"));return[{url:e,path:Vt([t,s])}]}))})(n).map((({url:n,path:s})=>Xt(n,r).then((n=>e.writeFile(t,s,n)))))),Qt=(e,t)=>t.endsWith(\\\"/\\\")?`${t}${e.split(\\\"/\\\").pop()}`:t,en=(e,t)=>e.replace(/\\\\{.+?\\\\}/g,(e=>{if(!t.has(e))throw new SyntaxError(`Invalid template: ${e}`);return t.get(e)})),tn=(e,t,n,r)=>At((e=>{const t=new Map,n=new Set,r=[];for(const[s,o]of _t(e))if(/^\\\\{.+\\\\}$/.test(s)){if(t.has(s))throw new SyntaxError(`Duplicated template: ${s}`);t.set(s,en(o,t))}else{const e=en(s,t),a=Qt(e,en(o||\\\"./\\\",t));if(n.has(a)&&!a.endsWith(\\\"/*\\\"))throw new SyntaxError(`Duplicated destination: ${a}`);n.add(a),r.push({url:e,path:a})}return r})(n).map((({url:n,path:s})=>Xt(n,r).then((r=>e.writeFile(t,s,r,n)))))),nn=({main:e,worker:t},n)=>{const r=[];if(t&&qt)for(let[e,s]of _t(t))e=Et(e,n),r.push(Bt(e,s));if(e&&!qt)for(let[t,s]of _t(e))t=Et(t,n),Ft(t)?Rt(t):r.push(Bt(t,s));return At(r)},rn=e=>t=>{dispatchEvent(new CustomEvent(`${e}:progress`,{detail:t}))},sn=new WeakMap,on=async(e,t,n,r,s)=>{r.files&&(t(\\\"Loading files\\\"),await tn(e,n,r.files,s),t(\\\"Loaded files\\\")),r.fetch&&(t(\\\"Loading fetch\\\"),await Zt(e,n,r.fetch,s),t(\\\"Loaded fetch\\\")),r.js_modules&&(t(\\\"Loading JS modules\\\"),await nn(r.js_modules,s),t(\\\"Loaded JS modules\\\"))},an=(e,t,n)=>{\\\"polyscript\\\"===t&&(n.lazy_py_modules=async(...t)=>(await sn.get(e)(t),t.map((t=>e.pyimport(t)))),n.storage=async e=>{const t=new i(e);return await t.sync(),t},n.JSON=_),e.registerJsModule(t,n)},cn=(e,t)=>{if(e.endsWith(\\\"/*\\\")){if(/\\\\.(zip|whl|tgz|tar(?:\\\\.gz)?)$/.test(t))return RegExp.$1;throw new Error(`Unsupported archive ${t}`)}return\\\"\\\"},ln=(e,t,...n)=>{try{return e.runPython(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},un=async(e,t,...n)=>{try{return await e.runPythonAsync(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},pn=async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.globals.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){ut.get(e).stderr(t)}};var dn=(new TextEncoder).encode(\\\"_F='github:'\\\\n_E='user-agent'\\\\n_D=True\\\\n_C=False\\\\n_B='/'\\\\n_A=None\\\\nfrom uio import StringIO\\\\nimport sys\\\\nclass Response:\\\\n\\\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\\\n\\\\tdef close(A):\\\\n\\\\t\\\\tif A.raw:A.raw.close();A.raw=_A\\\\n\\\\t\\\\tA._cached=_A\\\\n\\\\t@property\\\\n\\\\tdef content(self):\\\\n\\\\t\\\\tA=self\\\\n\\\\t\\\\tif A._cached is _A:\\\\n\\\\t\\\\t\\\\ttry:A._cached=A.raw.read()\\\\n\\\\t\\\\t\\\\tfinally:A.raw.close();A.raw=_A\\\\n\\\\t\\\\treturn A._cached\\\\n\\\\t@property\\\\n\\\\tdef text(self):return str(self.content,self.encoding)\\\\n\\\\tdef json(A):import ujson;return ujson.loads(A.content)\\\\nHEADERS_TO_IGNORE=_E,\\\\ntry:import js\\\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\\\nHEADERS_TO_IGNORE=_E,\\\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\\\n\\\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\\\n\\\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\\\n\\\\telse:A.open(D,url,_C)\\\\n\\\\tfor(F,J)in headers.items():\\\\n\\\\t\\\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\\\n\\\\tif E:A.timeout=int(E*1000)\\\\n\\\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\\\n\\\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\\\ndef get(url,**A):return request('GET',url,**A)\\\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\\\n_CHUNK_SIZE=128\\\\ndef _ensure_path_exists(path):\\\\n\\\\timport os;A=path.split(_B)\\\\n\\\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\\\n\\\\tB=''\\\\n\\\\tfor C in range(len(A)-1):\\\\n\\\\t\\\\tB+=A[C]\\\\n\\\\t\\\\ttry:os.stat(B)\\\\n\\\\t\\\\texcept:os.mkdir(B)\\\\n\\\\t\\\\tB+=_B\\\\ndef _chunk(src,dest):\\\\n\\\\tA=memoryview(bytearray(_CHUNK_SIZE))\\\\n\\\\twhile _D:\\\\n\\\\t\\\\tB=src.readinto(A)\\\\n\\\\t\\\\tif B==0:break\\\\n\\\\t\\\\tdest(A if B==_CHUNK_SIZE else A[:B])\\\\ndef _check_exists(path,short_hash):\\\\n\\\\tA=short_hash;import os\\\\n\\\\ttry:\\\\n\\\\t\\\\timport binascii as C,hashlib as D\\\\n\\\\t\\\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\\\n\\\\texcept:return _C\\\\ndef _rewrite_url(url,branch=_A):\\\\n\\\\tB=branch;A=url\\\\n\\\\tif not B:B='HEAD'\\\\n\\\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\\\n\\\\treturn A\\\\ndef _download_file(url,dest):\\\\n\\\\tB=dest;A=get(url)\\\\n\\\\ttry:\\\\n\\\\t\\\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\\\n\\\\t\\\\tprint('Copying:',B);_ensure_path_exists(B)\\\\n\\\\t\\\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\\\n\\\\t\\\\treturn _D\\\\n\\\\tfinally:A.close()\\\\ndef _install_json(package_json_url,index,target,version,mpy):\\\\n\\\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\\\n\\\\ttry:\\\\n\\\\t\\\\tif E.status_code!=200:print('Package not found:',G);return _C\\\\n\\\\t\\\\tF=E.json()\\\\n\\\\tfinally:E.close()\\\\n\\\\tfor(A,C)in F.get('hashes',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif _check_exists(B,C):print('Exists:',B)\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\\\n\\\\t\\\\t\\\\tif not _download_file(L,B):print(K.format(A,C));return _C\\\\n\\\\tfor(A,J)in F.get('urls',()):\\\\n\\\\t\\\\tB=D+_B+A\\\\n\\\\t\\\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\\\n\\\\tfor(M,N)in F.get('deps',()):\\\\n\\\\t\\\\tif not _install_package(M,H,D,N,mpy):return _C\\\\n\\\\treturn _D\\\\ndef _install_package(package,index,target,version,mpy):\\\\n\\\\tD=index;C=target;B=version;A=package\\\\n\\\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\\\n\\\\t\\\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\\\n\\\\t\\\\telse:\\\\n\\\\t\\\\t\\\\tif not A.endswith('.json'):\\\\n\\\\t\\\\t\\\\t\\\\tif not A.endswith(_B):A+=_B\\\\n\\\\t\\\\t\\\\t\\\\tA+='package.json'\\\\n\\\\t\\\\t\\\\tprint('Installing {} to {}'.format(A,C))\\\\n\\\\telse:\\\\n\\\\t\\\\tif not B:B='latest'\\\\n\\\\t\\\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\\\n\\\\treturn _install_json(A,D,C,B,mpy)\\\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\\\n\\\\tB=target;A=index\\\\n\\\\tif not B:\\\\n\\\\t\\\\tfor C in sys.path:\\\\n\\\\t\\\\t\\\\tif C.endswith('/lib'):B=C;break\\\\n\\\\t\\\\telse:print('Unable to find lib dir in sys.path');return\\\\n\\\\tif not A:A=_PACKAGE_INDEX\\\\n\\\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\\\n\\\\telse:print('Package may be partially installed')\\\");const fn=async e=>(await import(\\\"./toml-DiUM0_qs.js\\\")).parse(e);async function yn(e,t){return new Promise(((n,r)=>{e.syncfs(t,(e=>{e?r(e):n()}))}))}function hn(e){const t=e.FS,n=e.FS.filesystems.MEMFS,r=e.PATH,s={DIR_MODE:16895,FILE_MODE:33279,mount:function(e){if(!e.opts.fileSystemHandle)throw new Error(\\\"opts.fileSystemHandle is required\\\");return n.mount.apply(null,arguments)},syncfs:async(e,t,n)=>{try{const r=s.getLocalSet(e),o=await s.getRemoteSet(e),a=t?o:r,i=t?r:o;await s.reconcile(e,a,i),n(null)}catch(e){n(e)}},getLocalSet:e=>{let n=Object.create(null);function s(e){return\\\".\\\"!==e&&\\\"..\\\"!==e}function o(e){return t=>r.join2(e,t)}let a=t.readdir(e.mountpoint).filter(s).map(o(e.mountpoint));for(;a.length;){let e=a.pop(),r=t.stat(e);t.isDir(r.mode)&&a.push.apply(a,t.readdir(e).filter(s).map(o(e))),n[e]={timestamp:r.mtime,mode:r.mode}}return{type:\\\"local\\\",entries:n}},getRemoteSet:async e=>{const t=Object.create(null),n=await mn(e.opts.fileSystemHandle);for(const[o,a]of n)\\\".\\\"!==o&&(t[r.join2(e.mountpoint,o)]={timestamp:\\\"file\\\"===a.kind?(await a.getFile()).lastModifiedDate:new Date,mode:\\\"file\\\"===a.kind?s.FILE_MODE:s.DIR_MODE});return{type:\\\"remote\\\",entries:t,handles:n}},loadLocalEntry:e=>{const r=t.lookupPath(e).node,s=t.stat(e);if(t.isDir(s.mode))return{timestamp:s.mtime,mode:s.mode};if(t.isFile(s.mode))return r.contents=n.getFileDataAsTypedArray(r),{timestamp:s.mtime,mode:s.mode,contents:r.contents};throw new Error(\\\"node type not supported\\\")},storeLocalEntry:(e,n)=>{if(t.isDir(n.mode))t.mkdirTree(e,n.mode);else{if(!t.isFile(n.mode))throw new Error(\\\"node type not supported\\\");t.writeFile(e,n.contents,{canOwn:!0})}t.chmod(e,n.mode),t.utime(e,n.timestamp,n.timestamp)},removeLocalEntry:e=>{var n=t.stat(e);t.isDir(n.mode)?t.rmdir(e):t.isFile(n.mode)&&t.unlink(e)},loadRemoteEntry:async e=>{if(\\\"file\\\"===e.kind){const t=await e.getFile();return{contents:new Uint8Array(await t.arrayBuffer()),mode:s.FILE_MODE,timestamp:t.lastModifiedDate}}if(\\\"directory\\\"===e.kind)return{mode:s.DIR_MODE,timestamp:new Date};throw new Error(\\\"unknown kind: \\\"+e.kind)},storeRemoteEntry:async(e,n,s)=>{const o=e.get(r.dirname(n)),a=t.isFile(s.mode)?await o.getFileHandle(r.basename(n),{create:!0}):await o.getDirectoryHandle(r.basename(n),{create:!0});if(\\\"file\\\"===a.kind){const e=await a.createWritable();await e.write(s.contents),await e.close()}e.set(n,a)},removeRemoteEntry:async(e,t)=>{const n=e.get(r.dirname(t));await n.removeEntry(r.basename(t)),e.delete(t)},reconcile:async(e,n,o)=>{let a=0;const i=[];Object.keys(n.entries).forEach((function(e){const r=n.entries[e],s=o.entries[e];(!s||t.isFile(r.mode)&&r.timestamp.getTime()>s.timestamp.getTime())&&(i.push(e),a++)})),i.sort();const c=[];if(Object.keys(o.entries).forEach((function(e){n.entries[e]||(c.push(e),a++)})),c.sort().reverse(),!a)return;const l=\\\"remote\\\"===n.type?n.handles:o.handles;for(const t of i){const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);if(\\\"local\\\"===o.type){const e=l.get(n),r=await s.loadRemoteEntry(e);s.storeLocalEntry(t,r)}else{const e=s.loadLocalEntry(t);await s.storeRemoteEntry(l,n,e)}}for(const t of c)if(\\\"local\\\"===o.type)s.removeLocalEntry(t);else{const n=r.normalize(t.replace(e.mountpoint,\\\"/\\\")).substring(1);await s.removeRemoteEntry(l,n)}}};return e.FS.filesystems.NATIVEFS_ASYNC=s,async function(e,n){if(\\\"FileSystemDirectoryHandle\\\"!==n.constructor.name)throw new TypeError(\\\"Expected argument 'fileSystemHandle' to be a FileSystemDirectoryHandle\\\");return function(e){t.mkdirTree?t.mkdirTree(e):Gt(t,e);const{node:n}=t.lookupPath(e,{follow_mount:!1});if(t.isMountpoint(n))throw new Error(`path '${e}' is already a file system mount point`);if(!t.isDir(n.mode))throw new Error(`path '${e}' points to a file not a directory`);for(const t in n.contents)throw new Error(`directory '${e}' is not empty`)}(e),t.mount(t.filesystems.NATIVEFS_ASYNC,{fileSystemHandle:n},e),await yn(t,!0),{syncfs:async()=>await yn(t,!1)}}}const mn=async e=>{const t=[];await async function e(n){for await(const r of n.values())t.push(r),\\\"directory\\\"===r.kind&&await e(r)}(e);const n=new Map;n.set(\\\".\\\",e);for(const r of t){const t=(await e.resolve(r)).join(\\\"/\\\");n.set(t,r)}return n},wn=(e,t)=>{try{e.mkdir(t)}catch(e){}},gn=rn(\\\"mpy\\\");var _n={type:\\\"micropython\\\",module:(e=\\\"1.24.1\\\")=>`https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${e}/micropython.mjs`,async engine({loadMicroPython:e},t,n,r){const{stderr:s,stdout:o,get:a}=pt({stderr:ft(console.error),stdout:ft(console.log)});n=n.replace(/\\\\.m?js$/,\\\".wasm\\\"),gn(\\\"Loading MicroPython\\\");const i=await a(e({linebuffer:!1,stderr:s,stdout:o,url:n})),c=An.bind(this,i,r);return sn.set(i,c),await on(this,gn,i,t,r),this.writeFile(i,\\\"./mip.py\\\",dn),t.packages&&(gn(\\\"Loading packages\\\"),await c(t.packages.map(vt,r)),gn(\\\"Loaded packages\\\")),gn(\\\"Loaded MicroPython\\\"),i.mountNativeFS||(i.mountNativeFS=hn(i._module)),i},registerJSModule:an,run:ln,runAsync:un,runEvent:pn,transform:(e,t)=>e.PyProxy.toJs(t),writeFile:(e,t,n,r)=>{const{FS:s,_module:{PATH:o,PATH_FS:a}}=e,i={FS:s,PATH:o,PATH_FS:a},c=cn(t,r);if(c){const r=t.slice(0,-1);switch(\\\"./\\\"!==r&&s.mkdir(r),c){case\\\"whl\\\":case\\\"zip\\\":{const e=new Blob([n],{type:\\\"application/zip\\\"});return import(\\\"./zip-DPXsOtR5.js\\\").then((async({BlobReader:t,Uint8ArrayWriter:n,ZipReader:a})=>{const i=new a(new t(e));for(const e of await i.getEntries()){const{directory:t,filename:a}=e,i=r+a;if(t)wn(s,i);else{wn(s,o.dirname(i));const t=await e.getData(new n);s.writeFile(i,t,{canOwn:!0})}}i.close()}))}case\\\"tgz\\\":case\\\"tar.gz\\\":{const t=\\\"./_.tar.gz\\\";return zt(i,t,n),void e.runPython(`\\\\n                        import os, gzip, tarfile\\\\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\\\"${t}\\\", \\\"rb\\\")))\\\\n                        for f in tar:\\\\n                            name = f\\\"${r}{f.name}\\\"\\\\n                            if f.type == tarfile.DIRTYPE:\\\\n                                if f.name != \\\"./\\\":\\\\n                                    os.mkdir(name.strip(\\\"/\\\"))\\\\n                            else:\\\\n                                dir = os.path.dirname(name)\\\\n                                if not os.path.exists(dir):\\\\n                                    os.mkdir(dir)\\\\n                                source = tar.extractfile(f)\\\\n                                with open(name, \\\"wb\\\") as dest:\\\\n                                    dest.write(source.read())\\\\n                                    dest.close()\\\\n                        tar.close()\\\\n                        os.remove(\\\"${t}\\\")\\\\n                    `)}}}return zt(i,t,n)}};async function An(e,t,n){let r;for(const s of n)if(s.endsWith(\\\".whl\\\")){const n=Et(s,t),r=await Jt(n).arrayBuffer();await this.writeFile(e,\\\"./*\\\",r,n)}else r||(r=e.pyimport(\\\"mip\\\")),r.install(s)}const bn=new FinalizationRegistry((([e,t,n])=>{n&&console.debug(`%c${String(t)}`,\\\"font-weight:bold\\\",\\\"collected\\\"),e(t)})),En=Object.create(null),vn=(e,t,{debug:n,handler:r,return:s,token:o=e}=En)=>{const a=s||new Proxy(e,r||En),i=[a,[t,e,!!n]];return!1!==o&&i.push(o),bn.register(...i),a},kn={dict_converter:Object.fromEntries},{stringify:Sn}=JSON;let jn=!1;const xn=e=>(...t)=>{try{return jn=!0,e(...t)}finally{jn=!1}};let $n=!1;const Pn=()=>{if($n)return;$n=!0;const e=new WeakMap,t=e=>e.destroy(),n=n=>{for(let r=0;r<n.length;r++){const s=n[r];if(\\\"function\\\"==typeof s&&\\\"copy\\\"in s){jn=!1;let o=e.get(s)?.deref();if(!o)try{o=vn(s.copy(),t),e.set(s,new WeakRef(o))}catch(e){console.error(e)}o&&(n[r]=o),jn=!0}}},{call:r}=Function,s=r.bind(r,r.apply);Object.defineProperties(Function.prototype,{apply:{value(e,t){return jn&&n(t),s(this,e,t)}},call:{value(e,...t){return jn&&n(t),s(this,e,t)}}})},Tn=rn(\\\"py\\\"),Bn=new WeakMap;var Rn={type:\\\"pyodide\\\",module:(e=\\\"0.27.3\\\")=>`https://cdn.jsdelivr.net/pyodide/v${e}/full/pyodide.mjs`,async engine({loadPyodide:e},t,n,r){qt||\\\"auto\\\"!==t.experimental_create_proxy||Pn(),Tn(\\\"Loading Pyodide\\\");let{packages:s,index_urls:o}=t;s&&(s=s.map(vt,r)),Tn(\\\"Loading Storage\\\");const a=n.slice(0,n.lastIndexOf(\\\"/\\\")),c=new i(a),l={indexURL:a},u=\\\"never\\\"!==t.packages_cache;if(await c.sync(),u){if(s){s=s.sort();const e=Sn(s);if(c.has(e)){const t=new Blob([c.get(e)],{type:\\\"application/json\\\"});l.lockFileURL=URL.createObjectURL(t),l.packages=s.map((e=>e.split(/[>=<]=/)[0])),s=null}}}else c.clear();Tn(\\\"Loaded Storage\\\");const{stderr:p,stdout:d,get:f}=pt(),y=await f(e({stderr:p,stdout:d,...l})),h=On.bind(y);return o&&Bn.set(y,o),sn.set(y,h),await on(this,Tn,y,t,r),s&&await h(s,c,u),await c.close(),l.lockFileURL&&URL.revokeObjectURL(l.lockFileURL),Tn(\\\"Loaded Pyodide\\\"),y},registerJSModule:an,run:xn(ln),runAsync:xn(un),runEvent:xn(pn),transform:(e,t)=>Fn.call(e,t),writeFile:(e,t,n,r)=>{const s=cn(t,r);if(s)return e.unpackArchive(n,s,{extractDir:t.slice(0,-1)});const{FS:o,PATH:a,_module:{PATH_FS:i}}=e;return zt({FS:o,PATH:a,PATH_FS:i},t,n)}};function Fn(e){const{ffi:{PyProxy:t}}=this;if(e&&\\\"object\\\"==typeof e){if(e instanceof t)return e.toJs(kn);if(e instanceof Map)return new Map([...e.entries()]);if(ht(e))return e.map(Fn,this)}return e}async function On(e,t,n=!1){const{log:r}=console,s=(e,...t)=>{r(e,...t),console.log=r,Tn(e),console.log=s};console.log=s,await this.loadPackage(\\\"micropip\\\");const o=this.pyimport(\\\"micropip\\\");if(Bn.has(this)&&o.set_index_urls(Bn.get(this)),await o.install(e,{keep_going:!0}),console.log=r,n&&t instanceof i){const n=o.freeze();t.set(Sn(e),n)}o.destroy()}const Dn=\\\"ruby-wasm-wasi\\\",Mn=Dn.replace(/\\\\W+/g,\\\"_\\\");var Cn={type:Dn,experimental:!0,module:(e=\\\"2.7.1\\\")=>`https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${e}/dist/browser/+esm`,async engine({DefaultRubyVM:e},t,n,r){n=n.replace(/\\\\/browser\\\\/\\\\+esm$/,\\\"/ruby.wasm\\\");const s=await Jt(n).arrayBuffer(),o=await WebAssembly.compile(s),{vm:a}=await e(o);return t.files&&await tn(this,a,t.files,r),t.fetch&&await Zt(this,a,t.fetch,r),t.js_modules&&await nn(t.js_modules,r),a},registerJSModule(e,t,n){t=t.replace(/\\\\W+/g,\\\"__\\\");const r=`__module_${Mn}_${t}`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$${t}=JS.global[:${r}]`),delete globalThis[r]},run:(e,t,...n)=>e.eval(yt(t),...n),runAsync:(e,t,...n)=>e.evalAsync(yt(t),...n),async runEvent(e,t,n){if(/^xworker\\\\.(on\\\\w+)$/.test(t)){const{$1:t}=RegExp,r=`__module_${Mn}_event`;globalThis[r]=n,this.run(e,`require \\\"js\\\";$xworker.call(\\\"${t}\\\",JS.global[:${r}])`),delete globalThis[r]}else{const r=this.run(e,`method(:${t})`);await r.call(t,e.wrap(n))}},transform:(e,t)=>t,writeFile:()=>{throw new Error(`writeFile is not supported in ${Dn}`)}};var In={type:\\\"wasmoon\\\",module:(e=\\\"1.16.0\\\")=>`https://cdn.jsdelivr.net/npm/wasmoon@${e}/+esm`,async engine({LuaFactory:e,LuaLibraries:t},n,r,s){const{stderr:o,stdout:a,get:i}=pt(),c=await i((new e).createEngine());return c.global.getTable(t.Base,(e=>{c.global.setField(e,\\\"print\\\",a),c.global.setField(e,\\\"printErr\\\",o)})),n.files&&await tn(this,c,n.files,s),n.fetch&&await Zt(this,c,n.fetch,s),n.js_modules&&await nn(n.js_modules,s),c},registerJSModule:(e,t,n)=>{e.global.set(t,n)},run:(e,t,...n)=>{try{return e.doStringSync(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},runAsync:async(e,t,...n)=>{try{return await e.doString(yt(t),...n)}catch(t){ut.get(e).stderr(t)}},runEvent:async(e,t,n)=>{const[r,...s]=t.split(\\\".\\\");let o,a=e.global.get(r);for(const e of s)[o,a]=[a,a[e]];try{await a.call(o,n)}catch(t){ut.get(e).stderr(t)}},transform:(e,t)=>t,writeFile:({cmodule:{module:{FS:e}}},t,n)=>((e,t,n)=>(Gt(e,Kt(t)),t=Yt(e,t),e.writeFile(t,new Uint8Array(n),{canOwn:!0})))(e,t,n)};const Ln=new WeakMap,Hn=async(e,t)=>{const{shelter:n,destroy:r,io:s}=Ln.get(e),{output:o,result:a}=await n.captureR(yt(t));for(const{type:e,data:t}of o)s[e](t);return vn(a,r,{token:!1})};var Wn={type:\\\"webr\\\",experimental:!0,module:(e=\\\"0.4.2\\\")=>`https://cdn.jsdelivr.net/npm/webr@${e}/dist/webr.mjs`,async engine(e,t,n,r){const{get:s}=pt(),o=new e.WebR;await s(o.init().then((()=>o)));const a=await new o.Shelter;return Ln.set(o,{module:e,shelter:a,destroy:a.destroy.bind(a),io:ut.get(o)}),t.files&&await tn(this,o,t.files,r),t.fetch&&await Zt(this,o,t.fetch,r),t.js_modules&&await nn(t.js_modules,r),o},registerJSModule(e,t){console.warn(`Experimental interpreter: module ${t} is not supported (yet)`)},run:Hn,runAsync:Hn,async runEvent(e,t,n){await e.evalRVoid(`${t}(event)`,{env:{event:{type:[n.type]}}})},transform:(e,t)=>(console.log(\\\"transforming\\\",t),t),writeFile:()=>{}};const Nn=new Map,Un=new Map,Jn=new Proxy(new Map,{get(e,t){if(!e.has(t)){const[n,...r]=t.split(\\\"@\\\"),s=Nn.get(n),o=/^(?:\\\\.?\\\\.?\\\\/|[a-z0-9-]+:\\\\/\\\\/)/i.test(r)?r.join(\\\"@\\\"):s.module(...r);e.set(t,{url:o,module:import(o),engine:s.engine.bind(s)})}const{url:n,module:r,engine:s}=e.get(t);return(e,o)=>r.then((r=>(Un.set(t,e),s(r,e,n,o))))}}),qn=e=>{for(const t of[].concat(e.type))Nn.set(t,e)};for(const e of[Ht,_n,Rn,Cn,In,Wn])qn(e);const{parse:zn}=JSON,Kn=(e,t,n={})=>{const[r,s]=((e,t=\\\"./config.txt\\\")=>{let n=typeof e;return\\\"string\\\"===n&&/\\\\.(json|toml|txt)$/.test(e)?n=RegExp.$1:e=t,[Et(e),n]})(e,t);return\\\"json\\\"===s?n=Jt(r).json():\\\"toml\\\"===s?n=Jt(r).text().then(fn):\\\"string\\\"===s?n=Gn(e):\\\"object\\\"===s&&e?n=e:\\\"txt\\\"===s&&\\\"string\\\"==typeof n&&(n=Gn(n)),[n,e=r]},Gn=e=>{try{return zn(e)}catch(t){return fn(e)}},Yn=\\\"BeforeRun\\\",Vn=\\\"AfterRun\\\",Xn=[`code${Yn}`,`code${Yn}Async`,`code${Vn}`,`code${Vn}Async`],Zn=[\\\"onWorker\\\",\\\"onReady\\\",`on${Yn}`,`on${Yn}Async`,`on${Vn}`,`on${Vn}Async`];function Qn(e,t){const{run:n,runAsync:r}=Nn.get(this.type);return{...e,run:n.bind(this,t),runAsync:r.bind(this,t)}}const er=(e,t,n,r,s,o)=>{if(s||o){const a=Qn.bind(e,t),i=r?\\\"runAsync\\\":\\\"run\\\",c=e[i];e[i]=r?async function(e,t,...r){s&&await s.call(this,a(e),n);const i=await c.call(this,e,t,...r);return o&&await o.call(this,a(e),n),i}:function(e,t,...r){s&&s.call(this,a(e),n);const i=c.call(this,e,t,...r);return o&&o.call(this,a(e),n),i}}};let tr,nr,rr;const sr=(e,t)=>{addEventListener(e,t||(async t=>{try{await tr,nr(`xworker.on${e}`,t)}catch(e){postMessage(e)}}),!!t&&{once:!0})},{parse:or,stringify:ar}=_,{proxy:ir,sync:cr,polyfill:lr,window:ur,isWindowProxy:pr}=await(async e=>{const t=await xe(e),{isProxy:n,global:r,method:s}=ct(t.proxy[M],e?.transform||(e=>e));return t.proxy[C]=s,{...t,window:r,isWindowProxy:n}})({parse:or,stringify:ar,transform:e=>rr?rr(e):e}),dr={polyfill:lr,sync:ir,window:cr?ur:null,isWindowProxy:pr,onmessage:console.info,onerror:console.error,onmessageerror:console.warn,postMessage:postMessage.bind(self)};sr(\\\"message\\\",(({data:{options:e,config:t,configURL:n,code:r,hooks:s}})=>{tr=(async()=>{try{const{id:o,tag:c,type:l,custom:u,version:p,config:d,async:f}=e,y=((e,t=\\\"\\\")=>`${e}@${t}`.replace(/@$/,\\\"\\\"))(l,p),h=await((e,t,n,r={})=>(t&&([r,t]=Kn(t,n,r)),bt(r).then((n=>Jn[e](n,t)))))(y,t,n,d),{js_modules:m}=Un.get(y),w=m?.main,g=wt(Nn.get(l)),_=((e,t,n,r)=>({type:t,config:n,interpreter:r,io:ut.get(r),run:(t,...n)=>e.run(r,t,...n),runAsync:(t,...n)=>e.runAsync(r,t,...n),runEvent:(...t)=>e.runEvent(r,...t)}))(g,u||l,d||{},h);let A=\\\"run\\\";if(f&&(A+=\\\"Async\\\"),s){let e,t,n=\\\"\\\",r=\\\"\\\";for(const e of Xn){const t=s[e];if(t){const s=e.endsWith(\\\"Async\\\");(s&&f||!s&&!f)&&(e.startsWith(\\\"codeBefore\\\")?n=t:r=t)}}(n||r)&&((e,t,n,r)=>{const s=e[t].bind(e);e[t]=\\\"run\\\"===t?(e,t,...o)=>{n&&s(e,n,...o);const a=s(e,jt(t),...o);return r&&s(e,r,...o),a}:async(e,t,...o)=>{n&&await s(e,n,...o);const a=await s(e,jt(t),...o);return r&&await s(e,r,...o),a}})(g,A,n,r);for(const n of Zn.slice(2)){const r=s[n];if(r){const s=n.endsWith(\\\"Async\\\");if(s&&f||!s&&!f){const s=St(r);n.startsWith(\\\"onBefore\\\")?e=s:t=s}}}er(g,_,dr,f,e,t)}let b,E,v,k=null,S=\\\"\\\";cr&&(({CustomEvent:b,document:E}=ur),k=o&&E.getElementById(o)||null,v=e=>kt(k,u||l,e,!0,b));const j=Mt(ur,ir,w,t);if(((e,t,n,r)=>{if(\\\"pyodide\\\"===e)return;const s=\\\"polyscript.js_modules\\\";for(const e of Reflect.ownKeys(r))t.registerJSModule(n,`${s}.${e}`,Tt(r,e));t.registerJSModule(n,s,r)})(l,g,h,j),g.registerJSModule(h,\\\"polyscript\\\",{IDBMap:a,IDBMapSync:i,xworker:dr,currentScript:k,config:_.config,js_modules:j,get target(){return!S&&k&&(\\\"SCRIPT\\\"===c?k.after(mt(ur.document.createElement(`script-${u||l}`),{id:S=`${o}-target`})):(S=o,k.replaceChildren(),k.style.display=\\\"block\\\")),S}}),nr=g.runEvent.bind(g,h),rr=g.transform.bind(g,h),k&&v(\\\"ready\\\"),s?.onReady&&St(s?.onReady).call(g,Qn.call(g,_,h),dr),await g[A](h,r),[\\\"micropython\\\",\\\"pyodide\\\"].includes(g.type)){const e=\\\"polyscript\\\",t=`__${e}_workers__`,n=\\\"__export__\\\";h.runPython([`import js as ${t}`,`${t}.${t} = \\\"${n}\\\" in locals() and ${n} or []`,`del ${t}`].join(\\\"\\\\n\\\"));const r=[...globalThis[t]];delete globalThis[t],r.length&&h.runPython([`from ${e} import xworker as ${t}`,...r.map((e=>`${t}.sync.${e} = ${e}`)),`del ${t}`].join(\\\"\\\\n\\\"))}return k&&v(\\\"done\\\"),postMessage(\\\"polyscript:done\\\"),h}catch(e){postMessage(e)}})(),sr(\\\"error\\\"),sr(\\\"message\\\"),sr(\\\"messageerror\\\"),cr&&addEventListener(\\\"py:progress\\\",(({type:e,detail:t})=>{ur.dispatchEvent(new ur.CustomEvent(e,{detail:t}))}))}));\\n\".replace(re,place)],{type:'application/javascript'})), ...args)\n/* c8 ignore stop */\n","import { DESTRUCT } from 'js-proxy/traps';\nimport { DESTROY } from '../proxy/traps.js';\n\nimport { MAIN, WORKER } from './constants.js';\nimport DEBUG from '../debug.js';\n\nimport coincident from '../main.js';\nimport proxyMain from '../proxy/main.js';\n\nexport default /** @type {import('../main.js').Coincident} */ options => {\n  const esm = options?.import;\n  const exports = coincident(options);\n\n  class Worker extends exports.Worker {\n    constructor(url, options) {\n      const { proxy } = super(url, options);\n\n      proxy[MAIN] = proxyMain(\n        // options.import = name => valid(name) && name\n        options?.import || esm || (name => new URL(name, location.href)),\n        proxy[WORKER]\n      );\n\n      if (DEBUG) {\n        const debug = proxy[MAIN];\n        proxy[MAIN] = (TRAP, ...args) => {\n          const destructing = TRAP === DESTRUCT;\n          const method = destructing ? console.warn : console.log;\n          method('Main before', TRAP, ...args);\n          const result = debug(TRAP, ...args);\n          if (!destructing) method('Main after', TRAP, result);\n          return result;\n        };\n      }\n    }\n    terminate() {\n      this.proxy[MAIN](DESTROY);\n      super.terminate();\n    }\n  }\n\n  return { ...exports, Worker };\n};\n","import { io, stdio } from './_io.js';\n\nconst registry = new Map;\n\nconst type = 'dummy';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst require = name => registry.get(name);\n\nconst run = (interpreter, code) => {\n    try {\n        return Function('require', code)(require);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport default {\n    type,\n    module: () => 'data:application/javascript,',\n    engine: module => stdio().get(module),\n    registerJSModule(_, name, value) {\n        registry.set(name, value);\n    },\n    run,\n    runAsync: run,\n    runEvent: async (interpreter, code, event) => {\n        try {\n            await Function('require', 'e', `return ${code}(e)`)(require, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile() {},\n};\n","import content from 'plain-tag';\n\nconst dedent = {\n  object(...args) {\n    return this.string(content(...args));\n  },\n  string(content) {\n    for (const line of content.split(/[\\r\\n]+/)) {\n      // skip initial empty lines\n      if (line.trim().length) {\n        // trap indentation at the very first line of code\n        if (/^(\\s+)/.test(line))\n          content = content.replace(new RegExp('^' + RegExp.$1, 'gm'), '');\n        // no indentation? all good: get out of here!\n        break;\n      }\n    }\n    return content;\n  }\n};\n\n/**\n * Usable both as template literal tag or just as callback for strings, removes all spaces found\n * at the very first line of code encountered while sanitizing, keeping everything else around.\n * @param {string | TemplateStringsArray} tpl either code as string or as template, when used as tag\n * @param  {...any} values the template interpolations, when used as tag\n * @returns {string} code without undesired indentation\n */\nconst codedent = (tpl, ...values) => dedent[typeof tpl](tpl, ...values);\n\nexport default codedent;\n","export default function (t) {\n  for (var s = t[0], i = 1, l = arguments.length; i < l; i++)\n    s += arguments[i] + t[i];\n  return s;\n};\n","/**\n * Copyright (C) 2017-present by Andrea Giammarchi - @WebReflection\n *\n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n */\n\nconst {replace} = '';\n\n// escape\nconst es = /&(?:amp|#38|lt|#60|gt|#62|apos|#39|quot|#34);/g;\nconst ca = /[&<>'\"]/g;\n\nconst esca = {\n  '&': '&amp;',\n  '<': '&lt;',\n  '>': '&gt;',\n  \"'\": '&#39;',\n  '\"': '&quot;'\n};\nconst pe = m => esca[m];\n\n/**\n * Safely escape HTML entities such as `&`, `<`, `>`, `\"`, and `'`.\n * @param {string} es the input to safely escape\n * @returns {string} the escaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const escape = es => replace.call(es, ca, pe);\n\n\n// unescape\nconst unes = {\n  '&amp;': '&',\n  '&#38;': '&',\n  '&lt;': '<',\n  '&#60;': '<',\n  '&gt;': '>',\n  '&#62;': '>',\n  '&apos;': \"'\",\n  '&#39;': \"'\",\n  '&quot;': '\"',\n  '&#34;': '\"'\n};\nconst cape = m => unes[m];\n\n/**\n * Safely unescape previously escaped entities such as `&`, `<`, `>`, `\"`,\n * and `'`.\n * @param {string} un a previously escaped string\n * @returns {string} the unescaped input, and it **throws** an error if\n *  the input type is unexpected, except for boolean and numbers,\n *  converted as string.\n */\nexport const unescape = un => replace.call(un, es, cape);\n","import IDBMapSync from '@webreflection/idb-map/sync';\nimport $dedent from 'codedent';\nimport { unescape as $unescape } from 'html-escaper';\nimport { io } from './interpreter/_io.js';\n\n/** @type {(tpl: string | TemplateStringsArray, ...values:any[]) => string} */\nconst dedent = $dedent;\n\n/** @type {(value:string) => string} */\nconst unescape = $unescape;\n\nconst { isArray } = Array;\n\nconst { assign, create, defineProperties, defineProperty, entries } = Object;\n\nconst { all, resolve } = new Proxy(Promise, {\n    get: ($, name) => $[name].bind($),\n});\n\nconst absoluteURL = (path, base = location.href) =>\n    new URL(path, base.replace(/^blob:/, '')).href;\n\nfunction fixedRelative(path) {\n    'use strict';\n    return path.startsWith('.') ? absoluteURL(path, this) : path;\n}\n\n/* c8 ignore start */\nlet id = 0;\nconst nodeInfo = (node, type) => ({\n    id: node.id || (node.id = `${type}-w${id++}`),\n    tag: node.tagName\n});\n\n/**\n * Notify the main thread about element \"readiness\".\n * @param {HTMLScriptElement | HTMLElement} target the script or custom-type element\n * @param {string} type the custom/type as event prefix\n * @param {string} what the kind of event to dispatch, i.e. `ready` or `done`\n * @param {boolean} [worker = false] `true` if dispatched form a worker, `false` by default if in main\n * @param {globalThis.CustomEvent} [CustomEvent = globalThis.CustomEvent] the `CustomEvent` to use\n */\nconst dispatch = (target, type, what, worker = false, CE = CustomEvent) => {\n    target.dispatchEvent(\n        new CE(`${type}:${what}`, {\n            bubbles: true,\n            detail: { worker },\n        })\n    );\n};\n\nexport const createFunction = value => Function(`'use strict';return (${value})`)();\n\nexport const createResolved = (module, type, config, interpreter) => ({\n    type,\n    config,\n    interpreter,\n    io: io.get(interpreter),\n    run: (code, ...args) => module.run(interpreter, code, ...args),\n    runAsync: (code, ...args) => module.runAsync(interpreter, code, ...args),\n    runEvent: (...args) => module.runEvent(interpreter, ...args),\n});\n\nconst dropLine0 = code => code.replace(/^(?:\\n|\\r\\n)/, '');\n\nexport const createOverload = (module, name, before, after) => {\n    const method = module[name].bind(module);\n    module[name] = name === 'run' ?\n        // patch the sync method\n        (interpreter, code, ...args) => {\n            if (before) method(interpreter, before, ...args);\n            const result = method(interpreter, dropLine0(code), ...args);\n            if (after) method(interpreter, after, ...args);\n            return result;\n        } :\n        // patch the async one\n        async (interpreter, code, ...args) => {\n            if (before) await method(interpreter, before, ...args);\n            const result = await method(interpreter, dropLine0(code), ...args);\n            if (after) await method(interpreter, after, ...args);\n            return result;\n        };\n};\n\nexport const js_modules = Symbol.for('polyscript.js_modules');\n\nconst jsModules = new Map;\ndefineProperty(globalThis, js_modules, { value: jsModules });\n\nexport const JSModules = new Proxy(jsModules, {\n    get: (map, name) => map.get(name),\n    has: (map, name) => map.has(name),\n    ownKeys: map => [...map.keys()],\n});\n\nconst has = (_, field) => !field.startsWith('_');\n\nconst proxy = (modules, name) => new Proxy(\n    modules,\n    { has, get: (modules, field) => modules[name][field] }\n);\n\nexport const registerJSModules = (type, module, interpreter, modules) => {\n    // Pyodide resolves JS modules magically\n    if (type === 'pyodide') return;\n\n    // other runtimes need this pretty ugly dance (it works though)\n    const jsModules = 'polyscript.js_modules';\n    for (const name of Reflect.ownKeys(modules))\n        module.registerJSModule(interpreter, `${jsModules}.${name}`, proxy(modules, name));\n    module.registerJSModule(interpreter, jsModules, modules);\n};\n\nexport const importJS = (source, name) => import(source).then(esm => {\n    jsModules.set(name, { ...esm });\n});\n\nexport const importCSS = href => new Promise((onload, onerror) => {\n    if (document.querySelector(`link[rel=\"stylesheet\"][href=\"${href}\"]`)) {\n        onload();\n    }\n    else {\n        document.head.append(\n            assign(\n                document.createElement('link'),\n                { rel: 'stylesheet', href, onload, onerror },\n            )\n        );\n    }\n});\n\nexport const isCSS = source => /\\.css$/i.test(new URL(source).pathname);\n\nexport const isSync = element =>\n    /^(?:false|0|no)$/i.test(element.getAttribute('async'));\n\n/* c8 ignore stop */\n\nexport {\n    IDBMapSync,\n    dedent, unescape,\n    dispatch,\n    isArray,\n    assign,\n    create,\n    defineProperties,\n    defineProperty,\n    entries,\n    all,\n    resolve,\n    absoluteURL,\n    fixedRelative,\n    nodeInfo,\n};\n","import '@ungap/with-resolvers';\nimport fetch from '@webreflection/fetch';\n\nimport { absoluteURL, all, entries, importCSS, importJS, isArray, isCSS } from '../utils.js';\n\nexport const RUNNING_IN_WORKER = !globalThis.window;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n\n// This should be the only helper needed for all Emscripten based FS exports\nexport const writeFile = ({ FS, PATH, PATH_FS }, path, buffer) => {\n    const absPath = PATH_FS.resolve(path);\n    const dirPath = PATH.dirname(absPath);\n    if (FS.mkdirTree) FS.mkdirTree(dirPath);\n    else mkdirTree(FS, dirPath);\n    return FS.writeFile(absPath, new Uint8Array(buffer), {\n        canOwn: true,\n    });\n};\n\n// This is instead a fallback for Lua or others\nexport const writeFileShim = (FS, path, buffer) => {\n    mkdirTree(FS, dirname(path));\n    path = resolve(FS, path);\n    return FS.writeFile(path, new Uint8Array(buffer), { canOwn: true });\n};\n\nconst dirname = (path) => {\n    const tree = path.split('/');\n    tree.pop();\n    return tree.join('/');\n};\n\nexport const mkdirTree = (FS, path) => {\n    const current = [];\n    for (const branch of path.split('/')) {\n        if (branch === '.' || branch === '..') continue;\n        current.push(branch);\n        if (branch) FS.mkdir(current.join('/'));\n    }\n};\n\nconst resolve = (FS, path) => {\n    const tree = [];\n    for (const branch of path.split('/')) {\n        switch (branch) {\n            case '':\n                break;\n            case '.':\n                break;\n            case '..':\n                tree.pop();\n                break;\n            default:\n                tree.push(branch);\n        }\n    }\n    return [FS.cwd()].concat(tree).join('/').replace(/^\\/+/, '/');\n};\n\nconst calculateFetchPaths = (config_fetch) => {\n    for (const { files, to_file, from = '' } of config_fetch) {\n        if (files !== undefined && to_file !== undefined)\n            throw new Error(\n                'Cannot use \\'to_file\\' and \\'files\\' parameters together!',\n            );\n        if (files === undefined && to_file === undefined && from.endsWith('/'))\n            throw new Error(\n                `Couldn't determine the filename from the path ${from}, please supply 'to_file' parameter.`,\n            );\n    }\n    return config_fetch.flatMap(\n        ({ from = '', to_folder = '.', to_file, files }) => {\n            if (isArray(files))\n                return files.map((file) => ({\n                    url: joinPaths([from, file]),\n                    path: joinPaths([to_folder, file]),\n                }));\n            const filename = to_file || from.slice(1 + from.lastIndexOf('/'));\n            return [{ url: from, path: joinPaths([to_folder, filename]) }];\n        },\n    );\n};\n\nconst joinPaths = (parts) => {\n    const res = parts\n        .map((part) => part.trim().replace(/(^[/]*|[/]*$)/g, ''))\n        .filter((p) => p !== '' && p !== '.')\n        .join('/');\n\n    return parts[0].startsWith('/') ? `/${res}` : res;\n};\n\nconst fetchBuffer = (url, baseURL) =>\n    fetch(absoluteURL(url, baseURL)).arrayBuffer();\n\nexport const fetchPaths = (module, interpreter, config_fetch, baseURL) =>\n    all(\n        calculateFetchPaths(config_fetch).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(interpreter, path, buffer)),\n        ),\n    );\n\n    const fillName = (source, dest) => dest.endsWith('/') ?\n                        `${dest}${source.split('/').pop()}` : dest;\n\nconst parseTemplate = (src, map) => src.replace(\n  /\\{.+?\\}/g,\n  k => {\n    if (!map.has(k))\n      throw new SyntaxError(`Invalid template: ${k}`);\n    return map.get(k);\n  }\n);\n\nconst calculateFilesPaths = files => {\n  const map = new Map;\n  const targets = new Set;\n  const sourceDest = [];\n  for (const [source, dest] of entries(files)) {\n    if (/^\\{.+\\}$/.test(source)) {\n      if (map.has(source))\n        throw new SyntaxError(`Duplicated template: ${source}`);\n      map.set(source, parseTemplate(dest, map));\n    }\n    else {\n      const url = parseTemplate(source, map);\n      const path = fillName(url, parseTemplate(dest || './', map));\n      if (targets.has(path) && !path.endsWith('/*'))\n        throw new SyntaxError(`Duplicated destination: ${path}`);\n      targets.add(path);\n      sourceDest.push({ url, path });\n    }\n  }\n  return sourceDest;\n};\n\nexport const fetchFiles = (module, interpreter, config_files, baseURL) =>\n    all(\n        calculateFilesPaths(config_files).map(({ url, path }) =>\n            fetchBuffer(url, baseURL)\n                .then((buffer) => module.writeFile(\n                    interpreter,\n                    path,\n                    buffer,\n                    url,\n                )),\n        ),\n    );\n\nexport const fetchJSModules = ({ main, worker }, baseURL) => {\n    const promises = [];\n    if (worker && RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(worker)) {\n            source = absoluteURL(source, baseURL);\n            promises.push(importJS(source, name));\n        }\n    }\n    if (main && !RUNNING_IN_WORKER) {\n        for (let [source, name] of entries(main)) {\n            source = absoluteURL(source, baseURL);\n            if (isCSS(source)) importCSS(source);\n            else promises.push(importJS(source, name));\n        }\n    }\n    return all(promises);\n};\n\nexport const createProgress = prefix => detail => {\n    dispatchEvent(new CustomEvent(`${prefix}:progress`, { detail }));\n};\n/* c8 ignore stop */\n","import * as JSON from '@ungap/structured-clone/json';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { IDBMapSync, dedent } from '../utils.js';\nimport { io } from './_io.js';\n\nexport const loader = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const loadProgress = async (self, progress, interpreter, config, baseURL) => {\n    if (config.files) {\n        progress('Loading files');\n        await fetchFiles(self, interpreter, config.files, baseURL);\n        progress('Loaded files');\n    }\n    if (config.fetch) {\n        progress('Loading fetch');\n        await fetchPaths(self, interpreter, config.fetch, baseURL);\n        progress('Loaded fetch');\n    }\n    if (config.js_modules) {\n        progress('Loading JS modules');\n        await fetchJSModules(config.js_modules, baseURL);\n        progress('Loaded JS modules');\n    }\n};\n\nexport const registerJSModule = (interpreter, name, value) => {\n    if (name === 'polyscript') {\n        value.lazy_py_modules = async (...packages) => {\n            await loader.get(interpreter)(packages);\n            return packages.map(name => interpreter.pyimport(name));\n        };\n        value.storage = async (name) => {\n            const storage = new IDBMapSync(name);\n            await storage.sync();\n            return storage;\n        };\n        value.JSON = JSON;\n    }\n    interpreter.registerJsModule(name, value);\n};\n\nexport const getFormat = (path, url) => {\n    if (path.endsWith('/*')) {\n        if (/\\.(zip|whl|tgz|tar(?:\\.gz)?)$/.test(url))\n            return RegExp.$1;\n        throw new Error(`Unsupported archive ${url}`);\n    }\n    return '';\n};\n\nexport const run = (interpreter, code, ...args) => {\n    try {\n        return interpreter.runPython(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runAsync = async (interpreter, code, ...args) => {\n    try {\n        return await interpreter.runPythonAsync(dedent(code), ...args);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n\nexport const runEvent = async (interpreter, code, event) => {\n    // allows method(event) as well as namespace.method(event)\n    // it does not allow fancy brackets names for now\n    const [name, ...keys] = code.split('.');\n    let target = interpreter.globals.get(name);\n    let context;\n    for (const key of keys) [context, target] = [target, target[key]];\n    try {\n        await target.call(context, event);\n    }\n    catch (error) {\n        io.get(interpreter).stderr(error);\n    }\n};\n/* c8 ignore stop */\n","// ⚠️ DO NOT MODIFY - SOURCE FILE: \"../../python/mip.py\"\nexport default new TextEncoder().encode(\"_F='github:'\\n_E='user-agent'\\n_D=True\\n_C=False\\n_B='/'\\n_A=None\\nfrom uio import StringIO\\nimport sys\\nclass Response:\\n\\tdef __init__(A,f):A.raw=f;A.encoding='utf-8';A._cached=_A\\n\\tdef close(A):\\n\\t\\tif A.raw:A.raw.close();A.raw=_A\\n\\t\\tA._cached=_A\\n\\t@property\\n\\tdef content(self):\\n\\t\\tA=self\\n\\t\\tif A._cached is _A:\\n\\t\\t\\ttry:A._cached=A.raw.read()\\n\\t\\t\\tfinally:A.raw.close();A.raw=_A\\n\\t\\treturn A._cached\\n\\t@property\\n\\tdef text(self):return str(self.content,self.encoding)\\n\\tdef json(A):import ujson;return ujson.loads(A.content)\\nHEADERS_TO_IGNORE=_E,\\ntry:import js\\nexcept Exception as err:raise OSError('This version of urequests can only be used in the browser')\\nHEADERS_TO_IGNORE=_E,\\ndef request(method,url,data=_A,json=_A,headers={},stream=_A,auth=_A,timeout=_A,parse_headers=_D):\\n\\tE=timeout;D=method;C=data;from js import XMLHttpRequest as G;A=G.new();A.withCredentials=_C\\n\\tif auth is not _A:import ubinascii;H,I=auth;A.open(D,url,_C,H,I)\\n\\telse:A.open(D,url,_C)\\n\\tfor(F,J)in headers.items():\\n\\t\\tif F.lower()not in HEADERS_TO_IGNORE:A.setRequestHeader(F,J)\\n\\tif E:A.timeout=int(E*1000)\\n\\tif json is not _A:assert C is _A;import ujson;C=ujson.dumps(json);A.setRequestHeader('Content-Type','application/json')\\n\\tA.send(C);B=Response(StringIO(A.responseText));B.status_code=A.status;B.reason=A.statusText;B.headers=A.getAllResponseHeaders();return B\\ndef get(url,**A):return request('GET',url,**A)\\n_PACKAGE_INDEX=const('https://micropython.org/pi/v2')\\n_CHUNK_SIZE=128\\ndef _ensure_path_exists(path):\\n\\timport os;A=path.split(_B)\\n\\tif not A[0]:A.pop(0);A[0]=_B+A[0]\\n\\tB=''\\n\\tfor C in range(len(A)-1):\\n\\t\\tB+=A[C]\\n\\t\\ttry:os.stat(B)\\n\\t\\texcept:os.mkdir(B)\\n\\t\\tB+=_B\\ndef _chunk(src,dest):\\n\\tA=memoryview(bytearray(_CHUNK_SIZE))\\n\\twhile _D:\\n\\t\\tB=src.readinto(A)\\n\\t\\tif B==0:break\\n\\t\\tdest(A if B==_CHUNK_SIZE else A[:B])\\ndef _check_exists(path,short_hash):\\n\\tA=short_hash;import os\\n\\ttry:\\n\\t\\timport binascii as C,hashlib as D\\n\\t\\twith open(path,'rb')as E:B=D.sha256();_chunk(E,B.update);F=str(C.hexlify(B.digest())[:len(A)],'utf-8');return F==A\\n\\texcept:return _C\\ndef _rewrite_url(url,branch=_A):\\n\\tB=branch;A=url\\n\\tif not B:B='HEAD'\\n\\tif A.startswith(_F):A=A[7:].split(_B);A='https://raw.githubusercontent.com/'+A[0]+_B+A[1]+_B+B+_B+_B.join(A[2:])\\n\\treturn A\\ndef _download_file(url,dest):\\n\\tB=dest;A=get(url)\\n\\ttry:\\n\\t\\tif A.status_code!=200:print('Error',A.status_code,'requesting',url);return _C\\n\\t\\tprint('Copying:',B);_ensure_path_exists(B)\\n\\t\\twith open(B,'wb')as C:_chunk(A.raw,C.write)\\n\\t\\treturn _D\\n\\tfinally:A.close()\\ndef _install_json(package_json_url,index,target,version,mpy):\\n\\tK='File not found: {} {}';I=version;H=index;G=package_json_url;D=target;E=get(_rewrite_url(G,I))\\n\\ttry:\\n\\t\\tif E.status_code!=200:print('Package not found:',G);return _C\\n\\t\\tF=E.json()\\n\\tfinally:E.close()\\n\\tfor(A,C)in F.get('hashes',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif _check_exists(B,C):print('Exists:',B)\\n\\t\\telse:\\n\\t\\t\\tL='{}/file/{}/{}'.format(H,C[:2],C)\\n\\t\\t\\tif not _download_file(L,B):print(K.format(A,C));return _C\\n\\tfor(A,J)in F.get('urls',()):\\n\\t\\tB=D+_B+A\\n\\t\\tif not _download_file(_rewrite_url(J,I),B):print(K.format(A,J));return _C\\n\\tfor(M,N)in F.get('deps',()):\\n\\t\\tif not _install_package(M,H,D,N,mpy):return _C\\n\\treturn _D\\ndef _install_package(package,index,target,version,mpy):\\n\\tD=index;C=target;B=version;A=package\\n\\tif A.startswith('http://')or A.startswith('https://')or A.startswith(_F):\\n\\t\\tif A.endswith('.py')or A.endswith('.mpy'):print('Downloading {} to {}'.format(A,C));return _download_file(_rewrite_url(A,B),C+_B+A.rsplit(_B)[-1])\\n\\t\\telse:\\n\\t\\t\\tif not A.endswith('.json'):\\n\\t\\t\\t\\tif not A.endswith(_B):A+=_B\\n\\t\\t\\t\\tA+='package.json'\\n\\t\\t\\tprint('Installing {} to {}'.format(A,C))\\n\\telse:\\n\\t\\tif not B:B='latest'\\n\\t\\tprint('Installing {} ({}) from {} to {}'.format(A,B,D,C));E=sys.implementation._mpy&255 if mpy and hasattr(sys.implementation,'_mpy')else'py';A='{}/package/{}/{}/{}.json'.format(D,'py',A,B)\\n\\treturn _install_json(A,D,C,B,mpy)\\ndef install(package,index=_A,target=_A,version=_A,mpy=_D):\\n\\tB=target;A=index\\n\\tif not B:\\n\\t\\tfor C in sys.path:\\n\\t\\t\\tif C.endswith('/lib'):B=C;break\\n\\t\\telse:print('Unable to find lib dir in sys.path');return\\n\\tif not A:A=_PACKAGE_INDEX\\n\\tif _install_package(package,A.rstrip(_B),B,version,mpy):print('Done')\\n\\telse:print('Package may be partially installed')\");","/* c8 ignore start */\n\n// toml\nexport const toml = async (text) => (\n  await import(/* webpackIgnore: true */'./3rd-party/toml.js')\n).parse(text);\n\n// zip\nexport const zip = () => import(/* webpackIgnore: true */'./3rd-party/zip.js');\n\n/* c8 ignore stop */\n","import { mkdirTree } from './_utils.js';\n\nasync function syncfs(FS, direction) {\n    return new Promise((resolve, reject) => {\n        FS.syncfs(direction, err => {\n            if (err) reject(err);\n            else resolve();\n        });\n    });\n}\n\n// (C) Pyodide  https://github.com/pyodide/pyodide - Mozilla Public License Version 2.0\n// JS port of https://github.com/pyodide/pyodide/blob/34fcd02172895d75db369994011409324f9e3cce/src/js/nativefs.ts\nexport function initializeNativeFS(module) {\n    const FS = module.FS;\n    const MEMFS = module.FS.filesystems.MEMFS;\n    const PATH = module.PATH;\n\n    const nativeFSAsync = {\n        // DIR_MODE: {{{ cDefine('S_IFDIR') }}} | 511 /* 0777 */,\n        // FILE_MODE: {{{ cDefine('S_IFREG') }}} | 511 /* 0777 */,\n        DIR_MODE: 16384 | 511,\n        FILE_MODE: 32768 | 511,\n        mount: function (mount) {\n            if (!mount.opts.fileSystemHandle) {\n                throw new Error('opts.fileSystemHandle is required');\n            }\n\n            // reuse all of the core MEMFS functionality\n            return MEMFS.mount.apply(null, arguments);\n        },\n        syncfs: async (mount, populate, callback) => {\n            try {\n                const local = nativeFSAsync.getLocalSet(mount);\n                const remote = await nativeFSAsync.getRemoteSet(mount);\n                const src = populate ? remote : local;\n                const dst = populate ? local : remote;\n                await nativeFSAsync.reconcile(mount, src, dst);\n                callback(null);\n            } catch (e) {\n                callback(e);\n            }\n        },\n        // Returns file set of emscripten's filesystem at the mountpoint.\n        getLocalSet: (mount) => {\n            let entries = Object.create(null);\n\n            function isRealDir(p) {\n                return p !== '.' && p !== '..';\n            }\n\n            function toAbsolute(root) {\n                return (p) => {\n                    return PATH.join2(root, p);\n                };\n            }\n\n            let check = FS.readdir(mount.mountpoint)\n                .filter(isRealDir)\n                .map(toAbsolute(mount.mountpoint));\n\n            while (check.length) {\n                let path = check.pop();\n                let stat = FS.stat(path);\n\n                if (FS.isDir(stat.mode)) {\n                    check.push.apply(\n                        check,\n                        FS.readdir(path).filter(isRealDir).map(toAbsolute(path)),\n                    );\n                }\n\n                entries[path] = { timestamp: stat.mtime, mode: stat.mode };\n            }\n\n            return { type: 'local', entries: entries };\n        },\n        // Returns file set of the real, on-disk filesystem at the mountpoint.\n        getRemoteSet: async (mount) => {\n            // TODO: this should be a map.\n            const entries = Object.create(null);\n\n            const handles = await getFsHandles(mount.opts.fileSystemHandle);\n            for (const [path, handle] of handles) {\n                if (path === '.') continue;\n\n                entries[PATH.join2(mount.mountpoint, path)] = {\n                    timestamp:\n                        handle.kind === 'file'\n                            ? (await handle.getFile()).lastModifiedDate\n                            : new Date(),\n                    mode:\n                        handle.kind === 'file'\n                            ? nativeFSAsync.FILE_MODE\n                            : nativeFSAsync.DIR_MODE,\n                };\n            }\n\n            return { type: 'remote', entries, handles };\n        },\n        loadLocalEntry: (path) => {\n            const lookup = FS.lookupPath(path);\n            const node = lookup.node;\n            const stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                return { timestamp: stat.mtime, mode: stat.mode };\n            } else if (FS.isFile(stat.mode)) {\n                node.contents = MEMFS.getFileDataAsTypedArray(node);\n                return {\n                    timestamp: stat.mtime,\n                    mode: stat.mode,\n                    contents: node.contents,\n                };\n            } else {\n                throw new Error('node type not supported');\n            }\n        },\n        storeLocalEntry: (path, entry) => {\n            if (FS.isDir(entry['mode'])) {\n                FS.mkdirTree(path, entry['mode']);\n            } else if (FS.isFile(entry['mode'])) {\n                FS.writeFile(path, entry['contents'], { canOwn: true });\n            } else {\n                throw new Error('node type not supported');\n            }\n\n            FS.chmod(path, entry['mode']);\n            FS.utime(path, entry['timestamp'], entry['timestamp']);\n        },\n        removeLocalEntry: (path) => {\n            var stat = FS.stat(path);\n\n            if (FS.isDir(stat.mode)) {\n                FS.rmdir(path);\n            } else if (FS.isFile(stat.mode)) {\n                FS.unlink(path);\n            }\n        },\n        loadRemoteEntry: async (handle) => {\n            if (handle.kind === 'file') {\n                const file = await handle.getFile();\n                return {\n                    contents: new Uint8Array(await file.arrayBuffer()),\n                    mode: nativeFSAsync.FILE_MODE,\n                    timestamp: file.lastModifiedDate,\n                };\n            } else if (handle.kind === 'directory') {\n                return {\n                    mode: nativeFSAsync.DIR_MODE,\n                    timestamp: new Date(),\n                };\n            } else {\n                throw new Error('unknown kind: ' + handle.kind);\n            }\n        },\n        storeRemoteEntry: async (handles, path, entry) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            const handle = FS.isFile(entry.mode)\n                ? await parentDirHandle.getFileHandle(PATH.basename(path), {\n                    create: true,\n                })\n                : await parentDirHandle.getDirectoryHandle(PATH.basename(path), {\n                    create: true,\n                });\n            if (handle.kind === 'file') {\n                const writable = await handle.createWritable();\n                await writable.write(entry.contents);\n                await writable.close();\n            }\n            handles.set(path, handle);\n        },\n        removeRemoteEntry: async (handles, path) => {\n            const parentDirHandle = handles.get(PATH.dirname(path));\n            await parentDirHandle.removeEntry(PATH.basename(path));\n            handles.delete(path);\n        },\n        reconcile: async (mount, src, dst) => {\n            let total = 0;\n\n            const create = [];\n            Object.keys(src.entries).forEach(function (key) {\n                const e = src.entries[key];\n                const e2 = dst.entries[key];\n                if (\n                    !e2 ||\n                    (FS.isFile(e.mode) &&\n                        e['timestamp'].getTime() > e2['timestamp'].getTime())\n                ) {\n                    create.push(key);\n                    total++;\n                }\n            });\n            // sort paths in ascending order so directory entries are created\n            // before the files inside them\n            create.sort();\n\n            const remove = [];\n            Object.keys(dst.entries).forEach(function (key) {\n                if (!src.entries[key]) {\n                    remove.push(key);\n                    total++;\n                }\n            });\n            // sort paths in descending order so files are deleted before their\n            // parent directories\n            remove.sort().reverse();\n\n            if (!total) {\n                return;\n            }\n\n            const handles = src.type === 'remote' ? src.handles : dst.handles;\n\n            for (const path of create) {\n                const relPath = PATH.normalize(\n                    path.replace(mount.mountpoint, '/'),\n                ).substring(1);\n                if (dst.type === 'local') {\n                    const handle = handles.get(relPath);\n                    const entry = await nativeFSAsync.loadRemoteEntry(handle);\n                    nativeFSAsync.storeLocalEntry(path, entry);\n                } else {\n                    const entry = nativeFSAsync.loadLocalEntry(path);\n                    await nativeFSAsync.storeRemoteEntry(handles, relPath, entry);\n                }\n            }\n\n            for (const path of remove) {\n                if (dst.type === 'local') {\n                    nativeFSAsync.removeLocalEntry(path);\n                } else {\n                    const relPath = PATH.normalize(\n                        path.replace(mount.mountpoint, '/'),\n                    ).substring(1);\n                    await nativeFSAsync.removeRemoteEntry(handles, relPath);\n                }\n            }\n        },\n    };\n\n    module.FS.filesystems.NATIVEFS_ASYNC = nativeFSAsync;\n\n    function ensureMountPathExists(path) {\n        if (FS.mkdirTree) FS.mkdirTree(path);\n        else mkdirTree(FS, path);\n\n        const { node } = FS.lookupPath(path, {\n            follow_mount: false,\n        });\n\n        if (FS.isMountpoint(node)) {\n            throw new Error(`path '${path}' is already a file system mount point`);\n        }\n        if (!FS.isDir(node.mode)) {\n            throw new Error(`path '${path}' points to a file not a directory`);\n        }\n        // eslint-disable-next-line\n        for (const _ in node.contents) {\n            throw new Error(`directory '${path}' is not empty`);\n        }\n    }\n\n    return async function mountNativeFS(path, fileSystemHandle) {\n        if (fileSystemHandle.constructor.name !== 'FileSystemDirectoryHandle') {\n            throw new TypeError(\n              'Expected argument \\'fileSystemHandle\\' to be a FileSystemDirectoryHandle',\n            );\n        }\n        ensureMountPathExists(path);\n      \n        FS.mount(\n            FS.filesystems.NATIVEFS_ASYNC,\n            { fileSystemHandle },\n            path,\n        );\n\n        // sync native ==> browser\n        await syncfs(FS, true);\n\n        return {\n            // sync browser ==> native\n            syncfs: async () => await syncfs(FS, false),\n        };\n    };\n}\n\nconst getFsHandles = async (dirHandle) => {\n    const handles = [];\n\n    async function collect(curDirHandle) {\n        for await (const entry of curDirHandle.values()) {\n            handles.push(entry);\n            if (entry.kind === 'directory') {\n                await collect(entry);\n            }\n        }\n    }\n\n    await collect(dirHandle);\n\n    const result = new Map();\n    result.set('.', dirHandle);\n    for (const handle of handles) {\n        const relativePath = (await dirHandle.resolve(handle)).join('/');\n        result.set(relativePath, handle);\n    }\n    return result;\n};\n","import fetch from '@webreflection/fetch';\n\nimport { createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio, buffered } from './_io.js';\nimport { absoluteURL, fixedRelative } from '../utils.js';\nimport mip from '../python/mip.js';\nimport { zip } from '../3rd-party.js';\n\nimport { initializeNativeFS } from './_nativefs.js';\n\nconst type = 'micropython';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst mkdir = (FS, path) => {\n    try {\n        FS.mkdir(path);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        // ignore as there's no path.exists here\n    }\n};\n\nconst progress = createProgress('mpy');\n\nexport default {\n    type,\n    module: (version = '1.24.1') =>\n        `https://cdn.jsdelivr.net/npm/@micropython/micropython-webassembly-pyscript@${version}/micropython.mjs`,\n    async engine({ loadMicroPython }, config, url, baseURL) {\n        const { stderr, stdout, get } = stdio({\n            stderr: buffered(console.error),\n            stdout: buffered(console.log),\n        });\n        url = url.replace(/\\.m?js$/, '.wasm');\n        progress('Loading MicroPython');\n        const interpreter = await get(loadMicroPython({ linebuffer: false, stderr, stdout, url }));\n        const py_imports = importPackages.bind(this, interpreter, baseURL);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // Install Micropython Package\n        this.writeFile(interpreter, './mip.py', mip);\n        if (config.packages) {\n            progress('Loading packages');\n            await py_imports(config.packages.map(fixedRelative, baseURL));\n            progress('Loaded packages');\n        }\n        progress('Loaded MicroPython');\n        if (!interpreter.mountNativeFS)\n            interpreter.mountNativeFS = initializeNativeFS(interpreter._module);\n        return interpreter;\n    },\n    registerJSModule,\n    run,\n    runAsync,\n    runEvent,\n    transform: (interpreter, value) => interpreter.PyProxy.toJs(value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const { FS, _module: { PATH, PATH_FS } } = interpreter;\n        const fs = { FS, PATH, PATH_FS };\n        const format = getFormat(path, url);\n        if (format) {\n            const extractDir = path.slice(0, -1);\n            if (extractDir !== './') FS.mkdir(extractDir);\n            switch (format) {\n                case 'whl':\n                case 'zip': {\n                    const blob = new Blob([buffer], { type: 'application/zip' });\n                    return zip().then(async ({ BlobReader, Uint8ArrayWriter, ZipReader }) => {\n                        const zipFileReader = new BlobReader(blob);\n                        const zipReader = new ZipReader(zipFileReader);\n                        for (const entry of await zipReader.getEntries()) {\n                            const { directory, filename } = entry;\n                            const name = extractDir + filename;\n                            if (directory) mkdir(FS, name);\n                            else {\n                                mkdir(FS, PATH.dirname(name));\n                                const buffer = await entry.getData(new Uint8ArrayWriter);\n                                FS.writeFile(name, buffer, {\n                                    canOwn: true,\n                                });\n                            }\n                        }\n                        zipReader.close();\n                    });\n                }\n                case 'tgz':\n                case 'tar.gz': {\n                    const TMP = './_.tar.gz';\n                    writeFile(fs, TMP, buffer);\n                    interpreter.runPython(`\n                        import os, gzip, tarfile\n                        tar = tarfile.TarFile(fileobj=gzip.GzipFile(fileobj=open(\"${TMP}\", \"rb\")))\n                        for f in tar:\n                            name = f\"${extractDir}{f.name}\"\n                            if f.type == tarfile.DIRTYPE:\n                                if f.name != \"./\":\n                                    os.mkdir(name.strip(\"/\"))\n                            else:\n                                dir = os.path.dirname(name)\n                                if not os.path.exists(dir):\n                                    os.mkdir(dir)\n                                source = tar.extractfile(f)\n                                with open(name, \"wb\") as dest:\n                                    dest.write(source.read())\n                                    dest.close()\n                        tar.close()\n                        os.remove(\"${TMP}\")\n                    `);\n                    return;\n                }\n            }\n        }\n        return writeFile(fs, path, buffer);\n    },\n};\n\nasync function importPackages(interpreter, baseURL, packages) {\n    let mip;\n    for (const mpyPackage of packages) {\n        if (mpyPackage.endsWith('.whl')) {\n            const url = absoluteURL(mpyPackage, baseURL);\n            const buffer = await fetch(url).arrayBuffer();\n            await this.writeFile(interpreter, './*', buffer, url);\n        }\n        else {\n            if (!mip) mip = interpreter.pyimport('mip');\n            mip.install(mpyPackage);\n        }\n    }\n}\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\n\nimport { RUNNING_IN_WORKER, createProgress, writeFile } from './_utils.js';\nimport { getFormat, loader, loadProgress, registerJSModule, run, runAsync, runEvent } from './_python.js';\nimport { stdio } from './_io.js';\nimport { IDBMapSync, isArray, fixedRelative } from '../utils.js';\n\nconst type = 'pyodide';\nconst toJsOptions = { dict_converter: Object.fromEntries };\n\nconst { stringify } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nlet overrideFunction = false;\nconst overrideMethod = method => (...args) => {\n    try {\n        overrideFunction = true;\n        return method(...args);\n    }\n    finally {\n        overrideFunction = false;\n    }\n};\n\nlet overridden = false;\nconst applyOverride = () => {\n    if (overridden) return;\n    overridden = true;\n\n    const proxies = new WeakMap;\n    const onGC = value => value.destroy();\n    const patchArgs = args => {\n        for (let i = 0; i < args.length; i++) {\n            const value = args[i];\n            if (\n                typeof value === 'function' &&\n                'copy' in value\n            ) {\n                // avoid seppuku / Harakiri + speed up\n                overrideFunction = false;\n                // reuse copied value if known already\n                let proxy = proxies.get(value)?.deref();\n                if (!proxy) {\n                    try {\n                        // observe the copy and return a Proxy reference\n                        proxy = create(value.copy(), onGC);\n                        proxies.set(value, new WeakRef(proxy));\n                    }\n                    catch (error) {\n                        console.error(error);\n                    }\n                }\n                if (proxy) args[i] = proxy;\n                overrideFunction = true;\n            }\n        }\n    };\n\n    // trap apply to make call possible after the patch\n    const { call } = Function;\n    const apply = call.bind(call, call.apply);\n    // the patch\n    Object.defineProperties(Function.prototype, {\n        apply: {\n            value(context, args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        },\n        call: {\n            value(context, ...args) {\n                if (overrideFunction) patchArgs(args);\n                return apply(this, context, args);\n            }\n        }\n    });\n};\n\nconst progress = createProgress('py');\nconst indexURLs = new WeakMap();\n\nexport default {\n    type,\n    module: (version = '0.27.3') =>\n        `https://cdn.jsdelivr.net/pyodide/v${version}/full/pyodide.mjs`,\n    async engine({ loadPyodide }, config, url, baseURL) {\n        // apply override ASAP then load foreign code\n        if (!RUNNING_IN_WORKER && config.experimental_create_proxy === 'auto')\n            applyOverride();\n        progress('Loading Pyodide');\n        let { packages, index_urls } = config;\n        if (packages) packages = packages.map(fixedRelative, baseURL);\n        progress('Loading Storage');\n        const indexURL = url.slice(0, url.lastIndexOf('/'));\n        // each pyodide version shares its own cache\n        const storage = new IDBMapSync(indexURL);\n        const options = { indexURL };\n        const save = config.packages_cache !== 'never';\n        await storage.sync();\n        // packages_cache = 'never' means: erase the whole DB\n        if (!save) storage.clear();\n        // otherwise check if cache is known\n        else if (packages) {\n            packages = packages.sort();\n            // packages are uniquely stored as JSON key\n            const key = stringify(packages);\n            if (storage.has(key)) {\n                const blob = new Blob(\n                    [storage.get(key)],\n                    { type: 'application/json' },\n                );\n                // this should be used to bootstrap loadPyodide\n                options.lockFileURL = URL.createObjectURL(blob);\n                // versions are not currently understood by pyodide when\n                // a lockFileURL is used instead of micropip.install(packages)\n                // https://github.com/pyodide/pyodide/issues/5135#issuecomment-2441038644\n                // https://github.com/pyscript/pyscript/issues/2245\n                options.packages = packages.map(name => name.split(/[>=<]=/)[0]);\n                packages = null;\n            }\n        }\n        progress('Loaded Storage');\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(\n            loadPyodide({ stderr, stdout, ...options }),\n        );\n        const py_imports = importPackages.bind(interpreter);\n        if (index_urls) indexURLs.set(interpreter, index_urls);\n        loader.set(interpreter, py_imports);\n        await loadProgress(this, progress, interpreter, config, baseURL);\n        // if cache wasn't know, import and freeze it for the next time\n        if (packages) await py_imports(packages, storage, save);\n        await storage.close();\n        if (options.lockFileURL) URL.revokeObjectURL(options.lockFileURL);\n        progress('Loaded Pyodide');\n        return interpreter;\n    },\n    registerJSModule,\n    run: overrideMethod(run),\n    runAsync: overrideMethod(runAsync),\n    runEvent: overrideMethod(runEvent),\n    transform: (interpreter, value) => transform.call(interpreter, value),\n    writeFile: (interpreter, path, buffer, url) => {\n        const format = getFormat(path, url);\n        if (format) {\n            return interpreter.unpackArchive(buffer, format, {\n                extractDir: path.slice(0, -1)\n            });\n        }\n        const { FS, PATH, _module: { PATH_FS } } = interpreter;\n        return writeFile({ FS, PATH, PATH_FS }, path, buffer);\n    },\n};\n\nfunction transform(value) {\n    const { ffi: { PyProxy } } = this;\n    if (value && typeof value === 'object') {\n        if (value instanceof PyProxy) return value.toJs(toJsOptions);\n        // I believe this case is for LiteralMap which is not a PyProxy\n        // and yet it needs to be re-converted to something useful.\n        if (value instanceof Map) return new Map([...value.entries()]);\n        if (isArray(value)) return value.map(transform, this);\n    }\n    return value;\n}\n\n// exposed utility to import packages via polyscript.lazy_py_modules\nasync function importPackages(packages, storage, save = false) {\n    // temporary patch/fix console.log which is used\n    // not only by Pyodide but by micropip too and there's\n    // no way to intercept those calls otherwise\n    const { log } = console;\n    const _log = (detail, ...rest) => {\n        log(detail, ...rest);\n        console.log = log;\n        progress(detail);\n        console.log = _log;\n    };\n    console.log = _log;\n    await this.loadPackage('micropip');\n    const micropip = this.pyimport('micropip');\n    if (indexURLs.has(this)) micropip.set_index_urls(indexURLs.get(this));\n    await micropip.install(packages, { keep_going: true });\n    console.log = log;\n    if (save && (storage instanceof IDBMapSync)) {\n        const frozen = micropip.freeze();\n        storage.set(stringify(packages), frozen);\n    }\n    micropip.destroy();\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\n\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\n\nconst type = 'ruby-wasm-wasi';\nconst jsType = type.replace(/\\W+/g, '_');\n\n// MISSING:\n//  * there is no VFS apparently or I couldn't reach any\n//  * I've no idea how to override the stderr and stdout\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    experimental: true,\n    module: (version = '2.7.1') =>\n        `https://cdn.jsdelivr.net/npm/@ruby/3.2-wasm-wasi@${version}/dist/browser/+esm`,\n    async engine({ DefaultRubyVM }, config, url, baseURL) {\n        url = url.replace(/\\/browser\\/\\+esm$/, '/ruby.wasm');\n        const buffer = await fetch(url).arrayBuffer();\n        const module = await WebAssembly.compile(buffer);\n        const { vm: interpreter } = await DefaultRubyVM(module);\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(interpreter, name, value) {\n        name = name.replace(/\\W+/g, '__');\n        const id = `__module_${jsType}_${name}`;\n        globalThis[id] = value;\n        this.run(interpreter, `require \"js\";$${name}=JS.global[:${id}]`);\n        delete globalThis[id];\n    },\n    run: (interpreter, code, ...args) => interpreter.eval(dedent(code), ...args),\n    runAsync: (interpreter, code, ...args) => interpreter.evalAsync(dedent(code), ...args),\n    async runEvent(interpreter, code, event) {\n        // patch common xworker.onmessage/onerror cases\n        if (/^xworker\\.(on\\w+)$/.test(code)) {\n            const { $1: name } = RegExp;\n            const id = `__module_${jsType}_event`;\n            globalThis[id] = event;\n            this.run(\n                interpreter,\n                `require \"js\";$xworker.call(\"${name}\",JS.global[:${id}])`,\n            );\n            delete globalThis[id];\n        } else {\n            // Experimental: allows only events by fully qualified method name\n            const method = this.run(interpreter, `method(:${code})`);\n            await method.call(code, interpreter.wrap(event));\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: () => {\n        throw new Error(`writeFile is not supported in ${type}`);\n    },\n};\n/* c8 ignore stop */\n","import { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths, writeFileShim } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'wasmoon';\n\n// MISSING:\n//  * I've no idea how to import packages\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default {\n    type,\n    module: (version = '1.16.0') =>\n        `https://cdn.jsdelivr.net/npm/wasmoon@${version}/+esm`,\n    async engine({ LuaFactory, LuaLibraries }, config, _, baseURL) {\n        const { stderr, stdout, get } = stdio();\n        const interpreter = await get(new LuaFactory().createEngine());\n        interpreter.global.getTable(LuaLibraries.Base, (index) => {\n            interpreter.global.setField(index, 'print', stdout);\n            interpreter.global.setField(index, 'printErr', stderr);\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields\n    registerJSModule: (interpreter, name, value) => {\n        interpreter.global.set(name, value);\n    },\n    run: (interpreter, code, ...args) => {\n        try {\n            return interpreter.doStringSync(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runAsync: async (interpreter, code, ...args) => {\n        try {\n            return await interpreter.doString(dedent(code), ...args);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    runEvent: async (interpreter, code, event) => {\n        // allows method(event) as well as namespace.method(event)\n        // it does not allow fancy brackets names for now\n        const [name, ...keys] = code.split('.');\n        let target = interpreter.global.get(name);\n        let context;\n        for (const key of keys) [context, target] = [target, target[key]];\n        try {\n            await target.call(context, event);\n        }\n        catch (error) {\n            io.get(interpreter).stderr(error);\n        }\n    },\n    transform: (_, value) => value,\n    writeFile: (\n        {\n            cmodule: {\n                module: { FS },\n            },\n        },\n        path,\n        buffer,\n    ) => writeFileShim(FS, path, buffer),\n};\n/* c8 ignore stop */\n","import { create } from 'gc-hook';\nimport { dedent } from '../utils.js';\nimport { fetchFiles, fetchJSModules, fetchPaths } from './_utils.js';\nimport { io, stdio } from './_io.js';\n\nconst type = 'webr';\nconst r = new WeakMap();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nconst run = async (interpreter, code) => {\n  const { shelter, destroy, io } = r.get(interpreter);\n  const { output, result } = await shelter.captureR(dedent(code));\n  for (const { type, data } of output) io[type](data);\n  // this is a double proxy but it's OK as the consumer\n  // of the result here needs to invoke explicitly a conversion\n  // or trust the `(await p.toJs()).values` returns what's expected.\n  return create(result, destroy, { token: false });\n};\n\nexport default {\n    type,\n    experimental: true,\n    module: (version = '0.4.2') =>\n        `https://cdn.jsdelivr.net/npm/webr@${version}/dist/webr.mjs`,\n    async engine(module, config, _, baseURL) {\n        const { get } = stdio();\n        const interpreter = new module.WebR();\n        await get(interpreter.init().then(() => interpreter));\n        const shelter = await new interpreter.Shelter();\n        r.set(interpreter, {\n          module,\n          shelter,\n          destroy: shelter.destroy.bind(shelter),\n          io: io.get(interpreter),\n        });\n        if (config.files) await fetchFiles(this, interpreter, config.files, baseURL);\n        if (config.fetch) await fetchPaths(this, interpreter, config.fetch, baseURL);\n        if (config.js_modules) await fetchJSModules(config.js_modules, baseURL);\n        return interpreter;\n    },\n    // Fallback to globally defined module fields (i.e. $xworker)\n    registerJSModule(_, name) {\n        console.warn(`Experimental interpreter: module ${name} is not supported (yet)`);\n        // TODO: as complex JS objects / modules are not allowed\n        // it's not clear how we can bind anything or import a module\n        // in a context that doesn't understand methods from JS\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n    },\n    run,\n    runAsync: run,\n    async runEvent(interpreter, code, event) {\n        // TODO: WebR cannot convert exoteric objects or any literal\n        // to an easy to reason about data/frame ... that conversion\n        // is reserved for the future:\n        // https://docs.r-wasm.org/webr/latest/convert-js-to-r.html#constructing-r-objects-from-javascript-objects\n        await interpreter.evalRVoid(`${code}(event)`, {\n          env: { event: { type: [ event.type ] } }\n        });\n    },\n    transform: (_, value) => {\n        console.log('transforming', value);\n        return value;\n    },\n    writeFile: () => {\n        // MAYBE ???\n    },\n};\n/* c8 ignore stop */\n","// ⚠️ Part of this file is automatically generated\n//    The :RUNTIMES comment is a delimiter and no code should be written/changed after\n//    See rollup/build_interpreters.cjs to know more\n\n/** @type {Map<string, object>} */\nexport const registry = new Map();\n\n/** @type {Map<string, object>} */\nexport const configs = new Map();\n\n/** @type {string[]} */\nexport const selectors = [];\n\n/** @type {string[]} */\nexport const prefixes = [];\n\n/* c8 ignore start */\nexport const interpreter = new Proxy(new Map(), {\n    get(map, id) {\n        if (!map.has(id)) {\n            const [type, ...rest] = id.split('@');\n            const interpreter = registry.get(type);\n            const url = /^(?:\\.?\\.?\\/|[a-z0-9-]+:\\/\\/)/i.test(rest)\n                ? rest.join('@')\n                : interpreter.module(...rest);\n            map.set(id, {\n                url,\n                module: import(/* webpackIgnore: true */url),\n                engine: interpreter.engine.bind(interpreter),\n            });\n        }\n        const { url, module, engine } = map.get(id);\n        return (config, baseURL) =>\n            module.then((module) => {\n                configs.set(id, config);\n                return engine(module, config, url, baseURL);\n            });\n    },\n});\n/* c8 ignore stop */\n\nconst register = (interpreter) => {\n    for (const type of [].concat(interpreter.type)) {\n        registry.set(type, interpreter);\n        selectors.push(`script[type=\"${type}\"]`);\n        prefixes.push(`${type}-`);\n    }\n};\n\n//:RUNTIMES\nimport dummy from './interpreter/dummy.js';\nimport micropython from './interpreter/micropython.js';\nimport pyodide from './interpreter/pyodide.js';\nimport ruby_wasm_wasi from './interpreter/ruby-wasm-wasi.js';\nimport wasmoon from './interpreter/wasmoon.js';\nimport webr from './interpreter/webr.js';\nfor (const interpreter of [dummy, micropython, pyodide, ruby_wasm_wasi, wasmoon, webr])\n    register(interpreter);\n","import fetch from '@webreflection/fetch';\n\nimport { interpreter } from './interpreters.js';\nimport { absoluteURL, resolve } from './utils.js';\nimport { toml } from './3rd-party.js';\n\nconst { parse } = JSON;\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport const getConfigURLAndType = (config, configURL = './config.txt') => {\n    let type = typeof config;\n    if (type === 'string' && /\\.(json|toml|txt)$/.test(config))\n        type = RegExp.$1;\n    else\n        config = configURL;\n    return [absoluteURL(config), type];\n};\n\nexport const resolveConfig = (config, configURL, options = {}) => {\n    const [absolute, type] = getConfigURLAndType(config, configURL);\n    if (type === 'json') {\n        options = fetch(absolute).json();\n    } else if (type === 'toml') {\n        options = fetch(absolute).text().then(toml);\n    } else if (type === 'string') {\n        options = parseString(config);\n    } else if (type === 'object' && config) {\n        options = config;\n    } else if (type === 'txt' && typeof options === 'string') {\n        options = parseString(options);\n    }\n    config = absolute;\n    return [options, config];\n};\n\nconst parseString = config => {\n    try {\n        return parse(config);\n    }\n    // eslint-disable-next-line no-unused-vars\n    catch (_) {\n        return toml(config);\n    }\n};\n/* c8 ignore stop */\n\n/**\n * Parse a generic config if it came from an attribute either as URL\n * or as a serialized string. In XWorker case, accepts a pre-defined\n * options to use as it is to avoid needing at all a fetch operation.\n * In latter case, config will be suffixed as `config.txt`.\n * @param {string} id the interpreter name @ version identifier\n * @param {string | object} config optional config file to parse\n * @param {string} [configURL] optional config URL if config is not string\n * @param {object} [options] optional options used to bootstrap XWorker\n * @returns\n */\nexport const getRuntime = (id, config, configURL, options = {}) => {\n    if (config) {\n        // REQUIRES INTEGRATION TEST\n        /* c8 ignore start */\n        [options, config] = resolveConfig(config, configURL, options);\n        /* c8 ignore stop */\n    }\n    return resolve(options).then(options => interpreter[id](options, config));\n};\n\n/**\n * @param {string} type the interpreter type\n * @param {string} [version] the optional interpreter version\n * @returns\n */\nexport const getRuntimeID = (type, version = '') =>\n    `${type}@${version}`.replace(/@$/, '');\n","export default function (callback = this) {\n  return String(callback).replace(\n    /^(async\\s*)?(\\bfunction\\b)?(.*?)\\(/,\n    (_, isAsync, fn, name) => (\n      name && !fn ?\n        `${isAsync || \"\"}function ${name}(` :\n        _\n    ),\n  );\n};\n","import { registry } from './interpreters.js';\n\nconst beforeRun = 'BeforeRun';\nconst afterRun = 'AfterRun';\n\nexport const code = [\n    `code${beforeRun}`,\n    `code${beforeRun}Async`,\n    `code${afterRun}`,\n    `code${afterRun}Async`,\n];\n\nexport const js = [\n    'onWorker',\n    'onReady',\n    `on${beforeRun}`,\n    `on${beforeRun}Async`,\n    `on${afterRun}`,\n    `on${afterRun}Async`,\n];\n\n/* c8 ignore start */\n// create a copy of the resolved wrapper with the original\n// run and runAsync so that, if used within onBeforeRun/Async\n// or onAfterRun/Async polluted entries won't matter and just\n// the native utilities will be available without seppuku.\n// The same applies if called within `onReady` worker hook.\nexport function patch(resolved, interpreter) {\n    const { run, runAsync } = registry.get(this.type);\n    return {\n        ...resolved,\n        run: run.bind(this, interpreter),\n        runAsync: runAsync.bind(this, interpreter)\n    };\n}\n\n/**\n * Created the wrapper to pass along hooked callbacks.\n * @param {object} module the details module\n * @param {object} ref the node or reference to pass as second argument\n * @param {boolean} isAsync if run should be async\n * @param {function?} before callback to run before\n * @param {function?} after callback to run after\n * @returns {object}\n */\nexport const polluteJS = (module, resolved, ref, isAsync, before, after) => {\n    if (before || after) {\n        const patched = patch.bind(module, resolved);\n        const name = isAsync ? 'runAsync' : 'run';\n        const method = module[name];\n        module[name] = isAsync ?\n            async function (interpreter, code, ...args) {\n                if (before) await before.call(this, patched(interpreter), ref);\n                const result = await method.call(\n                    this,\n                    interpreter,\n                    code,\n                    ...args\n                );\n                if (after) await after.call(this, patched(interpreter), ref);\n                return result;\n            } :\n            function (interpreter, code, ...args) {\n                if (before) before.call(this, patched(interpreter), ref);\n                const result = method.call(this, interpreter, code, ...args);\n                if (after) after.call(this, patched(interpreter), ref);\n                return result;\n            }\n        ;\n    }\n};\n/* c8 ignore stop */\n","import toJSONCallback from 'to-json-callback';\n\nimport { dedent } from '../utils.js';\nimport { js as jsHooks, code as codeHooks } from '../hooks.js';\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default class Hook {\n    constructor(interpreter, hooks = {}) {\n        const { main, worker } = hooks;\n        this.interpreter = interpreter;\n        this.onWorker = main?.onWorker;\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1))\n            this[key] = worker?.[key];\n        for (const key of codeHooks)\n            this[key] = worker?.[key];\n    }\n    toJSON() {\n        const hooks = {};\n        // ignore onWorker as that's main only\n        for (const key of jsHooks.slice(1)) {\n            if (this[key]) hooks[key] = toJSONCallback(this[key]);\n        }\n        // code related: exclude `onReady` callback\n        for (const key of codeHooks) {\n            if (this[key]) hooks[key] = dedent(this[key]());\n        }\n        return hooks;\n    }\n}\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport xworker from './xworker.js';\nimport { getConfigURLAndType } from '../loader.js';\nimport { assign, create, defineProperties, importCSS, importJS } from '../utils.js';\nimport Hook from './hook.js';\n\n/**\n * @typedef {Object} WorkerOptions custom configuration\n * @prop {string} type the interpreter type to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string | object} [config] the optional config to use within such interpreter\n * @prop {string} [configURL] the optional configURL used to resolve config entries\n * @prop {string} [serviceWorker] the optional Service Worker for SharedArrayBuffer fallback\n * @prop {string} [service_worker] alias for `serviceWorker`\n */\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\nexport default (...args) =>\n    /**\n     * A XWorker is a Worker facade able to bootstrap a channel with any desired interpreter.\n     * @param {string} url the remote file to evaluate on bootstrap\n     * @param {WorkerOptions} [options] optional arguments to define the interpreter to use\n     * @returns {Worker}\n     */\n    function XWorker(url, options) {\n        if (args.length) {\n            const [type, version] = args;\n            options = assign({}, options || { type, version });\n            if (!options.type) options.type = type;\n        }\n\n        // provide a base url to fetch or load config files from a Worker\n        // because there's no location at all in the Worker as it's embedded.\n        // fallback to a generic, ignored, config.txt file to still provide a URL.\n        const [ config ] = getConfigURLAndType(options.config, options.configURL);\n\n        const serviceWorker = options?.serviceWorker || options?.service_worker;\n        const worker = xworker({ serviceWorker });\n        const { postMessage } = worker;\n        const isHook = this instanceof Hook;\n\n        const sync = assign(\n            worker.proxy,\n            { importJS, importCSS },\n        );\n\n        const resolver = Promise.withResolvers();\n\n        let bootstrap = fetch(url)\n            .text()\n            .then(code => {\n                const hooks = isHook ? this.toJSON() : void 0;\n                postMessage.call(worker, { options, config, code, hooks });\n            })\n            .then(() => {\n                // boost postMessage performance\n                bootstrap = { then: fn => fn() };\n            });\n\n        defineProperties(worker, {\n            sync: { value: sync },\n            ready: { value: resolver.promise },\n            postMessage: {\n                value: (data, ...rest) => bootstrap.then(\n                    () => postMessage.call(worker, data, ...rest),\n                ),\n            },\n            onerror: {\n                writable: true,\n                configurable: true,\n                value: console.error\n            }\n        });\n\n        worker.addEventListener('message', event => {\n            const { data } = event;\n            const isError = data instanceof Error;\n            if (isError || data === 'polyscript:done') {\n                event.stopImmediatePropagation();\n                if (isError) {\n                    resolver.reject(data);\n                    worker.onerror(create(event, {\n                        type: { value: 'error' },\n                        error: { value: data }\n                    }));\n                }\n                else resolver.resolve(worker);\n            }\n        });\n\n        if (isHook) this.onWorker?.(this.interpreter, worker);\n\n        return worker;\n    };\n\n/* c8 ignore stop */","export const INVALID_CONTENT = 'Invalid content';\nexport const INVALID_SRC_ATTR = 'Invalid worker attribute';\nexport const INVALID_WORKER_ATTR = 'Invalid worker attribute';\n","import { INVALID_CONTENT, INVALID_SRC_ATTR, INVALID_WORKER_ATTR } from '../errors.js';\n\nimport { dedent, unescape } from '../utils.js';\n\nconst hasCommentsOnly = text => !text\n    .replace(/\\/\\*[\\s\\S]*?\\*\\//g, '')\n    .replace(/^\\s*(?:\\/\\/|#).*/gm, '')\n    .trim()\n;\n\n/* c8 ignore start */ // tested via integration\nexport default element => {\n  const { src, worker } = element.attributes;\n  if (worker) {\n      let { value } = worker;\n      // throw on worker values as ambiguous\n      // @see https://github.com/pyscript/polyscript/issues/43\n      if (value) throw new SyntaxError(INVALID_WORKER_ATTR);\n      value = src?.value;\n      if (!value) {\n          // throw on empty src attributes\n          if (src) throw new SyntaxError(INVALID_SRC_ATTR);\n          if (!element.childElementCount)\n              value = element.textContent;\n          else {\n              const { innerHTML, localName, type } = element;\n              const name = type || localName.replace(/-script$/, '');\n              value = unescape(innerHTML);\n              console.warn(\n                  `Deprecated: use <script type=\"${name}\"> for an always safe content parsing:\\n`,\n                  value,\n              );\n          }\n\n          const url = URL.createObjectURL(new Blob([dedent(value)], { type: 'text/plain' }));\n          // TODO: should we really clean up this? debugging non-existent resources\n          //       at distance might be very problematic if the url is revoked.\n          // setTimeout(URL.revokeObjectURL, 5000, url);\n          return url;\n      }\n      return value;\n  }\n  // validate ambiguous cases with src and not empty/commented content\n  if (src && !hasCommentsOnly(element.textContent))\n    throw new SyntaxError(INVALID_CONTENT);\n};\n/* c8 ignore stop */\n","import fetch from '@webreflection/fetch';\nimport { $ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { workers, workersHandler } from './workers.js';\nimport $xworker from './worker/class.js';\nimport workerURL from './worker/url.js';\nimport { getRuntime, getRuntimeID } from './loader.js';\nimport { registry } from './interpreters.js';\nimport { JSModules, isSync, all, dispatch, resolve, defineProperty, nodeInfo, registerJSModules } from './utils.js';\n\nconst getRoot = (script) => {\n    let parent = script;\n    while (parent.parentNode) parent = parent.parentNode;\n    return parent;\n};\n\nexport const queryTarget = (script, idOrSelector) => {\n    const root = getRoot(script);\n    return root.getElementById(idOrSelector) || $(idOrSelector, root);\n};\n\nconst targets = new WeakMap();\nconst targetDescriptor = {\n    get() {\n        let target = targets.get(this);\n        if (!target) {\n            target = document.createElement(`${this.type}-script`);\n            targets.set(this, target);\n            handle(this);\n        }\n        return target;\n    },\n    set(target) {\n        if (typeof target === 'string')\n            targets.set(this, queryTarget(this, target));\n        else {\n            targets.set(this, target);\n            handle(this);\n        }\n    },\n};\n\nconst handled = new WeakMap();\n\nexport const interpreters = new Map();\n\nconst execute = async (currentScript, source, XWorker, isAsync) => {\n    const { type } = currentScript;\n    const module = registry.get(type);\n    /* c8 ignore start */\n    if (module.experimental)\n        console.warn(`The ${type} interpreter is experimental`);\n    const [interpreter, content] = await all([\n        handled.get(currentScript).interpreter,\n        source,\n    ]);\n    try {\n        registerJSModules(type, module, interpreter, JSModules);\n        module.registerJSModule(interpreter, 'polyscript', {\n            IDBMap,\n            IDBMapSync,\n            XWorker,\n            currentScript,\n            js_modules: JSModules,\n            workers: workersHandler,\n        });\n        dispatch(currentScript, type, 'ready');\n        // temporarily override inherited document.currentScript in a non writable way\n        // but it deletes it right after to preserve native behavior (as it's sync: no trouble)\n        defineProperty(document, 'currentScript', {\n            configurable: true,\n            get: () => currentScript,\n        });\n        const done = dispatch.bind(null, currentScript, type, 'done');\n        let result = module[isAsync ? 'runAsync' : 'run'](interpreter, content);\n        if (isAsync) result = await result;\n        done();\n        return result;\n    } finally {\n        delete document.currentScript;\n    }\n    /* c8 ignore stop */\n};\n\nconst getValue = (ref, prefix) => {\n    const value = ref?.value;\n    return value ? prefix + value : '';\n};\n\nexport const getDetails = (type, id, name, version, config, configURL, runtime = type) => {\n    if (!interpreters.has(id)) {\n        const details = {\n            interpreter: getRuntime(name, config, configURL),\n            queue: resolve(),\n            XWorker: $xworker(type, version),\n        };\n        interpreters.set(id, details);\n        // enable sane defaults when single interpreter *of kind* is used in the page\n        // this allows `xxx-*` attributes to refer to such interpreter without `env` around\n        /* c8 ignore start *//* this is tested very well in PyScript */\n        if (!interpreters.has(type)) interpreters.set(type, details);\n        if (!interpreters.has(runtime)) interpreters.set(runtime, details);\n        /* c8 ignore stopt */\n    }\n    return interpreters.get(id);\n};\n\n/**\n * @param {HTMLScriptElement} script a special type of <script>\n */\nexport const handle = async (script) => {\n    // known node, move its companion target after\n    // vDOM or other use cases where the script is a tracked element\n    if (handled.has(script)) {\n        const { target } = script;\n        if (target) {\n            // if the script is in the head just append target to the body\n            if (script.closest('head')) document.body.append(target);\n            // in any other case preserve the script position\n            else script.after(target);\n        }\n    }\n    // new script to handle ... allow newly created scripts to work\n    // just exactly like any other script would\n    else {\n        // allow a shared config among scripts, beside interpreter,\n        // and/or source code with different config or interpreter\n        const {\n            attributes: {\n                config,\n                env,\n                name: wn,\n                target,\n                version,\n                ['service-worker']: sw,\n            },\n            src,\n            type,\n        } = script;\n\n        /* c8 ignore start */\n        const isAsync = !isSync(script);\n\n        const versionValue = version?.value;\n        const name = getRuntimeID(type, versionValue);\n        let configValue = getValue(config, '|');\n        const id = getValue(env, '') || `${name}${configValue}`;\n        configValue = configValue.slice(1);\n\n        const url = workerURL(script);\n        if (url) {\n            const XWorker = $xworker(type, versionValue);\n            const xworker = new XWorker(url, {\n                ...nodeInfo(script, type),\n                version: versionValue,\n                async: isAsync,\n                config: configValue,\n                serviceWorker: sw?.value,\n            });\n            handled.set(\n                defineProperty(script, 'xworker', { value: xworker }),\n                { xworker },\n            );\n            const workerName = wn?.value;\n            if (workerName) workers[workerName].resolve(xworker.ready);\n            return;\n        }\n        /* c8 ignore stop */\n\n        const targetValue = getValue(target, '');\n        const details = getDetails(type, id, name, versionValue, configValue);\n\n        handled.set(\n            defineProperty(script, 'target', targetDescriptor),\n            details,\n        );\n\n        if (targetValue) targets.set(script, queryTarget(script, targetValue));\n\n        // start fetching external resources ASAP\n        const source = src ? fetch(src).text() : script.textContent;\n        details.queue = details.queue.then(() =>\n            execute(script, source, details.XWorker, isAsync),\n        );\n    }\n};\n","import { $x } from 'basic-devtools';\n\nimport { interpreters } from './script-handler.js';\nimport { all, create } from './utils.js';\nimport { registry, prefixes } from './interpreters.js';\n\n/* c8 ignore start */\nexport const env = new Proxy(create(null), {\n    get: (_, name) => new Promise(queueMicrotask).then(\n        () => awaitInterpreter(name)\n    ),\n});\n\n// attributes are tested via integration / e2e\n// ensure both interpreter and its queue are awaited then returns the interpreter\nconst awaitInterpreter = async (key) => {\n    if (interpreters.has(key)) {\n        const { interpreter, queue } = interpreters.get(key);\n        return (await all([interpreter, queue]))[0];\n    }\n\n    const available = interpreters.size\n        ? `Available interpreters are: ${[...interpreters.keys()]\n              .map((r) => `\"${r}\"`)\n              .join(', ')}.`\n        : 'There are no interpreters in this page.';\n\n    throw new Error(`The interpreter \"${key}\" was not found. ${available}`);\n};\n\nexport const listener = async (event) => {\n    const { type, currentTarget } = event;\n    if (!prefixes.length) return;\n    for (let { name, value, ownerElement: el } of $x(\n        `./@*[${prefixes.map((p) => `name()=\"${p}${type}\"`).join(' or ')}]`,\n        currentTarget,\n    )) {\n        name = name.slice(0, -(type.length + 1));\n        const interpreter = await awaitInterpreter(\n            el.getAttribute(`${name}-env`) || name,\n        );\n        const handler = registry.get(name);\n        handler.runEvent(interpreter, value, event);\n    }\n};\n\n/**\n * Look for known prefixes and add related listeners.\n * @param {Document | Element} root\n */\nexport const addAllListeners = (root) => {\n    if (!prefixes.length) return;\n    for (let { name, ownerElement: el } of $x(\n        `.//@*[${prefixes\n            .map((p) => `starts-with(name(),\"${p}\")`)\n            .join(' or ')}]`,\n        root,\n    )) {\n        const i = name.lastIndexOf('-');\n        const type = name.slice(i + 1);\n        if (type !== 'env') {\n            el.addEventListener(type, listener);\n            // automatically disable form controls that are not disabled already\n            if ('disabled' in el && !el.disabled) {\n                el.disabled = true;\n                // set these to enable once the interpreter is known (registered + loaded)\n                env[name.slice(0, i)].then(() => {\n                    el.disabled = false;\n                });\n            }\n        }\n    }\n};\n/* c8 ignore stop */\n","import xworker from './worker/class.js';\nimport Hook from './worker/hook.js';\n\nconst XWorker = xworker();\n\nexport { Hook, XWorker };\n","import '@ungap/with-resolvers';\nimport { $$ } from 'basic-devtools';\n\nimport IDBMap from '@webreflection/idb-map';\nimport IDBMapSync from '@webreflection/idb-map/sync';\n\nimport { JSModules, isSync, assign, create, createOverload, createResolved, dedent, defineProperty, nodeInfo, registerJSModules } from './utils.js';\nimport { getDetails } from './script-handler.js';\nimport { registry as defaultRegistry, prefixes, configs } from './interpreters.js';\nimport { getRuntimeID, resolveConfig } from './loader.js';\nimport { addAllListeners } from './listeners.js';\nimport { Hook, XWorker as XW } from './xworker.js';\nimport { workers, workersHandler } from './workers.js';\nimport { polluteJS, js as jsHooks, code as codeHooks } from './hooks.js';\nimport workerURL from './worker/url.js';\n\nexport const CUSTOM_SELECTORS = [];\n\nexport const customObserver = new Map();\n\n/**\n * @typedef {Object} Runtime custom configuration\n * @prop {object} interpreter the bootstrapped interpreter\n * @prop {(url:string, options?: object) => Worker} XWorker an XWorker constructor that defaults to same interpreter on the Worker.\n * @prop {object} config a cloned config used to bootstrap the interpreter\n * @prop {(code:string) => any} run an utility to run code within the interpreter\n * @prop {(code:string) => Promise<any>} runAsync an utility to run code asynchronously within the interpreter\n * @prop {(path:string, data:ArrayBuffer) => void} writeFile an utility to write a file in the virtual FS, if available\n */\n\nconst types = new Map();\nconst waitList = new Map();\n\n// REQUIRES INTEGRATION TEST\n/* c8 ignore start */\n/**\n * @param {Element} node any DOM element registered via define.\n */\nexport const handleCustomType = async (node) => {\n    for (const selector of CUSTOM_SELECTORS) {\n        if (node.matches(selector)) {\n            const type = types.get(selector);\n            const details = registry.get(type);\n            const { resolve } = waitList.get(type);\n            const { options, known } = details;\n\n            if (known.has(node)) return;\n            known.add(node);\n\n            for (const [selector, callback] of customObserver) {\n                if (node.matches(selector)) await callback(node);\n            }\n\n            const {\n                interpreter: runtime,\n                configURL,\n                config,\n                version,\n                env,\n                onerror,\n                hooks,\n            } = options;\n\n            let error;\n            try {\n                const worker = workerURL(node);\n                if (worker) {\n                    let v = version;\n                    let url = configURL;\n                    let cfg = node.getAttribute('config') || config || {};\n                    if (!v || !cfg) {\n                        const [o, u] = resolveConfig(cfg, configURL);\n                        cfg = await o;\n                        url = u;\n                        v = cfg.version || cfg.interpreter;\n                        if (v && /\\.m?js$/.test(v))\n                            v = new URL(v, url).href;\n                    }\n                    const xworker = XW.call(new Hook(null, hooks), worker, {\n                        ...nodeInfo(node, type),\n                        configURL: url,\n                        version: v,\n                        type: runtime,\n                        custom: type,\n                        config: cfg,\n                        async: !isSync(node),\n                        serviceWorker: node.getAttribute('service-worker'),\n                    });\n                    defineProperty(node, 'xworker', { value: xworker });\n                    resolve({ type, xworker });\n                    const workerName = node.getAttribute('name');\n                    if (workerName) workers[workerName].resolve(xworker.ready);\n                    return;\n                }\n            }\n            // let the custom type handle errors via its `io`\n            catch (workerError) {\n                error = workerError;\n            }\n\n            const name = getRuntimeID(runtime, version);\n            const id = env || `${name}${config ? `|${config}` : ''}`;\n            const { interpreter: engine, XWorker: Worker } = getDetails(\n                type,\n                id,\n                name,\n                version,\n                config,\n                configURL,\n                runtime\n            );\n\n            const interpreter = await engine;\n\n            const module = create(defaultRegistry.get(runtime));\n\n            const hook = new Hook(interpreter, hooks);\n\n            const XWorker = function XWorker(...args) {\n                return Worker.apply(hook, args);\n            };\n\n            const resolved = {\n                ...createResolved(\n                    module,\n                    type,\n                    structuredClone(configs.get(name)),\n                    interpreter,\n                ),\n                XWorker,\n            };\n\n            registerJSModules(runtime, module, interpreter, JSModules);\n            module.registerJSModule(interpreter, 'polyscript', {\n                IDBMap,\n                IDBMapSync,\n                XWorker,\n                config: resolved.config,\n                currentScript: type.startsWith('_') ? null : node,\n                js_modules: JSModules,\n                workers: workersHandler,\n            });\n\n            // patch methods accordingly to hooks (and only if needed)\n            for (const suffix of ['Run', 'RunAsync']) {\n                let before = '';\n                let after = '';\n\n                for (const key of codeHooks) {\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('codeBefore'))\n                            before = dedent(value());\n                        else\n                            after = dedent(value());\n                    }\n                }\n\n                if (before || after) {\n                    createOverload(\n                        module,\n                        `r${suffix.slice(1)}`,\n                        before,\n                        after,\n                    );\n                }\n\n                let beforeCB, afterCB;\n                // ignore onReady and onWorker\n                for (let i = 2; i < jsHooks.length; i++) {\n                    const key = jsHooks[i];\n                    const value = hooks?.main?.[key];\n                    if (value && key.endsWith(suffix)) {\n                        if (key.startsWith('onBefore'))\n                            beforeCB = value;\n                        else\n                            afterCB = value;\n                    }\n                }\n                polluteJS(module, resolved, node, suffix.endsWith('Async'), beforeCB, afterCB);\n            }\n\n            details.queue = details.queue.then(() => {\n                resolve(resolved);\n                if (error) onerror?.(error, node);\n                return hooks?.main?.onReady?.(resolved, node);\n            });\n        }\n    }\n};\n\n/**\n * @type {Map<string, {options:object, known:WeakSet<Element>}>}\n */\nconst registry = new Map();\n\n/**\n * @typedef {Object} CustomOptions custom configuration\n * @prop {'pyodide' | 'micropython' | 'ruby-wasm-wasi' | 'wasmoon'} interpreter the interpreter to use\n * @prop {string} [version] the optional interpreter version to use\n * @prop {string} [config] the optional config to use within such interpreter\n */\n\nlet dontBotherCount = 0;\n\n/**\n * Allows custom types and components on the page to receive interpreters to execute any code\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @param {CustomOptions} options the custom type configuration\n */\nexport const define = (type, options) => {\n    // allow no-type to be bootstrapped out of the box\n    let dontBother = type == null;\n\n    if (dontBother)\n        type = `_ps${dontBotherCount++}`;\n    else if (defaultRegistry.has(type) || registry.has(type))\n        throw new Error(`<script type=\"${type}\"> already registered`);\n\n    if (!defaultRegistry.has(options?.interpreter))\n        throw new Error('Unspecified interpreter');\n\n    // allows reaching out the interpreter helpers on events\n    defaultRegistry.set(type, defaultRegistry.get(options.interpreter));\n\n    // allows selector -> registry by type\n    const selectors = [`script[type=\"${type}\"]`];\n\n    // ensure a Promise can resolve once a custom type has been bootstrapped\n    whenDefined(type);\n\n    if (dontBother) {\n        // add a script then cleanup everything once that's ready\n        const { hooks } = options;\n        const onReady = hooks?.main?.onReady;\n        options = {\n            ...options,\n            hooks: {\n                ...hooks,\n                main: {\n                    ...hooks?.main,\n                    onReady(resolved, node) {\n                        CUSTOM_SELECTORS.splice(CUSTOM_SELECTORS.indexOf(type), 1);\n                        defaultRegistry.delete(type);\n                        registry.delete(type);\n                        waitList.delete(type);\n                        node.remove();\n                        onReady?.(resolved);\n                    }\n                }\n            },\n        };\n        document.head.append(\n            assign(document.createElement('script'), { type })\n        );\n    }\n    else {\n        selectors.push(`${type}-script`);\n        prefixes.push(`${type}-`);\n    }\n\n    for (const selector of selectors) types.set(selector, type);\n    CUSTOM_SELECTORS.push(...selectors);\n\n    // ensure always same env for this custom type\n    registry.set(type, {\n        options: assign({ env: type }, options),\n        known: new WeakSet(),\n        queue: Promise.resolve(),\n    });\n\n    if (!dontBother) addAllListeners(document);\n    $$(selectors.join(',')).forEach(handleCustomType);\n};\n\n/**\n * Resolves whenever a defined custom type is bootstrapped on the page\n * @param {string} type the unique `<script type=\"...\">` identifier\n * @returns {Promise<object>}\n */\nexport const whenDefined = (type) => {\n    if (!waitList.has(type)) waitList.set(type, Promise.withResolvers());\n    return waitList.get(type).promise;\n};\n/* c8 ignore stop */\n","/** @typedef {(type: string, options: import(\"./custom.js\").CustomOptions) => void} CustomOptions */\n\nimport stickyModule from 'sticky-module';\nimport { $$ } from 'basic-devtools';\n\nimport { handle } from './script-handler.js';\nimport { assign } from './utils.js';\nimport { selectors, prefixes } from './interpreters.js';\nimport { listener, addAllListeners } from './listeners.js';\n\nimport {\n    CUSTOM_SELECTORS,\n    handleCustomType,\n    customObserver as $customObserver,\n    define as $define,\n    whenDefined as $whenDefined\n} from './custom.js';\n\nimport { env as $env } from './listeners.js';\nimport { Hook as $Hook, XWorker as $XWorker } from './xworker.js';\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        customObserver,\n        define,\n        whenDefined,\n        env,\n        Hook,\n        XWorker\n    },\n    alreadyLive\n] = stickyModule(\n    'polyscript',\n    {\n        customObserver: $customObserver,\n        define: $define,\n        whenDefined: $whenDefined,\n        env: $env,\n        Hook: $Hook,\n        XWorker: $XWorker\n    }\n);\n\nexport {\n    customObserver,\n    define,\n    whenDefined,\n    env,\n    Hook,\n    XWorker\n};\n\nexport * from './errors.js';\n\n\nif (!alreadyLive) {\n    const mo = new MutationObserver((records) => {\n        const selector = selectors.join(',');\n        for (const { type, target, attributeName, addedNodes } of records) {\n            // attributes are tested via integration / e2e\n            /* c8 ignore start */\n            if (type === 'attributes') {\n                const i = attributeName.lastIndexOf('-') + 1;\n                if (i) {\n                    const prefix = attributeName.slice(0, i);\n                    for (const p of prefixes) {\n                        if (prefix === p) {\n                            const type = attributeName.slice(i);\n                            if (type !== 'env') {\n                                const method = target.hasAttribute(attributeName)\n                                    ? 'add'\n                                    : 'remove';\n                                target[`${method}EventListener`](type, listener);\n                            }\n                            break;\n                        }\n                    }\n                }\n                continue;\n            }\n            for (const node of addedNodes) {\n                if (node.nodeType === 1) {\n                    addAllListeners(node);\n                    if (selector && node.matches(selector)) handle(node);\n                    else bootstrap(selector, node, true);\n                }\n            }\n            /* c8 ignore stop */\n        }\n    });\n\n    /* c8 ignore start */\n    const bootstrap = (selector, node, shouldHandle) => {\n        if (selector) $$(selector, node).forEach(handle);\n        selector = CUSTOM_SELECTORS.join(',');\n        if (selector) {\n            if (shouldHandle) handleCustomType(node);\n            $$(selector, node).forEach(handleCustomType);\n        }\n    };\n    /* c8 ignore stop */\n\n    const observe = (root) => {\n        mo.observe(root, { childList: true, subtree: true, attributes: true });\n        return root;\n    };\n\n    const { attachShadow } = Element.prototype;\n    assign(Element.prototype, {\n        attachShadow(init) {\n            return observe(attachShadow.call(this, init));\n        },\n    });\n\n    // give 3rd party a chance to apply changes before this happens\n    queueMicrotask(() => {\n        addAllListeners(observe(document));\n        bootstrap(selectors.join(','), document, false);\n    });\n\n}\n","export default new Map([\n    [\"py\", \"pyodide\"],\n    [\"mpy\", \"micropython\"],\n]);\n","import TYPES from \"./types.js\";\n\nconst waitForIt = [];\n\nfor (const [TYPE] of TYPES) {\n    const selectors = [`script[type=\"${TYPE}\"]`, `${TYPE}-script`];\n    for (const element of document.querySelectorAll(selectors.join(\",\"))) {\n        const { promise, resolve } = Promise.withResolvers();\n        waitForIt.push(promise);\n        element.addEventListener(`${TYPE}:done`, resolve, { once: true });\n    }\n}\n\n// wait for all the things then cleanup\nPromise.all(waitForIt).then(() => {\n    dispatchEvent(new Event(\"py:all-done\"));\n});\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n    codemirror: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/codemirror.js\"\n        ),\n    [\"deprecations-manager\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/deprecations-manager.js\"\n        ),\n    donkey: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/donkey.js\"\n        ),\n    error: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/error.js\"\n        ),\n    [\"py-editor\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-editor.js\"\n        ),\n    [\"py-game\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-game.js\"\n        ),\n    [\"py-terminal\"]: () =>\n        import(\n            /* webpackIgnore: true */\n            \"./plugins/py-terminal.js\"\n        ),\n};\n","import { assign } from \"polyscript/exports\";\n\nconst CLOSEBUTTON =\n    \"<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 16 16' fill='currentColor' width='12px'><path d='M.293.293a1 1 0 011.414 0L8 6.586 14.293.293a1 1 0 111.414 1.414L9.414 8l6.293 6.293a1 1 0 01-1.414 1.414L8 9.414l-6.293 6.293a1 1 0 01-1.414-1.414L6.586 8 .293 1.707a1 1 0 010-1.414z'/></svg>\";\n\n/**\n * These error codes are used to identify the type of error that occurred.\n * @see https://pyscript.github.io/docs/latest/reference/exceptions.html?highlight=errors\n */\nexport const ErrorCode = {\n    GENERIC: \"PY0000\", // Use this only for development then change to a more specific error code\n    CONFLICTING_CODE: \"PY0409\",\n    BAD_CONFIG: \"PY1000\",\n    MICROPIP_INSTALL_ERROR: \"PY1001\",\n    BAD_PLUGIN_FILE_EXTENSION: \"PY2000\",\n    NO_DEFAULT_EXPORT: \"PY2001\",\n    TOP_LEVEL_AWAIT: \"PY9000\",\n    // Currently these are created depending on error code received from fetching\n    FETCH_ERROR: \"PY0001\",\n    FETCH_NAME_ERROR: \"PY0002\",\n    FETCH_UNAUTHORIZED_ERROR: \"PY0401\",\n    FETCH_FORBIDDEN_ERROR: \"PY0403\",\n    FETCH_NOT_FOUND_ERROR: \"PY0404\",\n    FETCH_SERVER_ERROR: \"PY0500\",\n    FETCH_UNAVAILABLE_ERROR: \"PY0503\",\n};\n\n/**\n * Keys of the ErrorCode object\n * @typedef {keyof ErrorCode} ErrorCodes\n * */\n\nexport class UserError extends Error {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * @param {string} messageType\n     * */\n    constructor(errorCode, message = \"\", messageType = \"text\") {\n        super(`(${errorCode}): ${message}`);\n        this.errorCode = errorCode;\n        this.messageType = messageType;\n        this.name = \"UserError\";\n    }\n}\n\nexport class FetchError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"FetchError\";\n    }\n}\n\nexport class InstallError extends UserError {\n    /**\n     * @param {ErrorCodes} errorCode\n     * @param {string} message\n     * */\n    constructor(errorCode, message) {\n        super(errorCode, message);\n        this.name = \"InstallError\";\n    }\n}\n\n/**\n * Internal function for creating alert banners on the page\n * @param {string} message The message to be displayed to the user\n * @param {string} level The alert level of the message. Can be any string; 'error' or 'warning' cause matching messages to be emitted to the console\n * @param {string} [messageType=\"text\"] If set to \"html\", the message content will be assigned to the banner's innerHTML directly, instead of its textContent\n * @param {any} [logMessage=true] An additional flag for whether the message should be sent to the console log.\n */\nexport function _createAlertBanner(\n    message,\n    level,\n    messageType = \"text\",\n    logMessage = true,\n) {\n    switch (`log-${level}-${logMessage}`) {\n        case \"log-error-true\":\n            console.error(message);\n            break;\n        case \"log-warning-true\":\n            console.warn(message);\n            break;\n    }\n\n    const content = messageType === \"html\" ? \"innerHTML\" : \"textContent\";\n    const banner = assign(document.createElement(\"div\"), {\n        className: `alert-banner py-${level}`,\n        [content]: message,\n    });\n\n    if (level === \"warning\") {\n        const closeButton = assign(document.createElement(\"button\"), {\n            id: \"alert-close-button\",\n            innerHTML: CLOSEBUTTON,\n        });\n\n        banner.appendChild(closeButton).addEventListener(\"click\", () => {\n            banner.remove();\n        });\n    }\n\n    document.body.prepend(banner);\n}\n","import { FetchError, ErrorCode } from \"./exceptions.js\";\n\n/**\n * @param {Response} response\n * @returns\n */\nexport const getText = (response) => response.text();\n\n/**\n * This is a fetch wrapper that handles any non 200 responses and throws a\n * FetchError with the right ErrorCode. This is useful because our FetchError\n * will automatically create an alert banner.\n *\n * @param {string} url - URL to fetch\n * @param {Request} [options] - options to pass to fetch\n * @returns {Promise<Response>}\n */\nexport async function robustFetch(url, options) {\n    let response;\n\n    // Note: We need to wrap fetch into a try/catch block because fetch\n    // throws a TypeError if the URL is invalid such as http://blah.blah\n    try {\n        response = await fetch(url, options);\n    } catch (err) {\n        const error = err;\n        let errMsg;\n        if (url.startsWith(\"http\")) {\n            errMsg =\n                `Fetching from URL ${url} failed with error ` +\n                `'${error.message}'. Are your filename and path correct?`;\n        } else {\n            errMsg = `Polyscript: Access to local files\n        (using [[fetch]] configurations in &lt;py-config&gt;)\n        is not available when directly opening a HTML file;\n        you must use a webserver to serve the additional files.\n        See <a style=\"text-decoration: underline;\" href=\"https://github.com/pyscript/pyscript/issues/257#issuecomment-1119595062\">this reference</a>\n        on starting a simple webserver with Python.\n            `;\n        }\n        throw new FetchError(ErrorCode.FETCH_ERROR, errMsg);\n    }\n\n    // Note that response.ok is true for 200-299 responses\n    if (!response.ok) {\n        const errorMsg = `Fetching from URL ${url} failed with error ${response.status} (${response.statusText}). Are your filename and path correct?`;\n        switch (response.status) {\n            case 404:\n                throw new FetchError(ErrorCode.FETCH_NOT_FOUND_ERROR, errorMsg);\n            case 401:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAUTHORIZED_ERROR,\n                    errorMsg,\n                );\n            case 403:\n                throw new FetchError(ErrorCode.FETCH_FORBIDDEN_ERROR, errorMsg);\n            case 500:\n                throw new FetchError(ErrorCode.FETCH_SERVER_ERROR, errorMsg);\n            case 503:\n                throw new FetchError(\n                    ErrorCode.FETCH_UNAVAILABLE_ERROR,\n                    errorMsg,\n                );\n            default:\n                throw new FetchError(ErrorCode.FETCH_ERROR, errorMsg);\n        }\n    }\n    return response;\n}\n","/**\n * This file parses a generic <py-config> or config attribute\n * to use as base config for all py-script elements, importing\n * also a queue of plugins *before* the interpreter (if any) resolves.\n */\nimport { $$ } from \"basic-devtools\";\n\nimport TYPES from \"./types.js\";\nimport allPlugins from \"./plugins.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport { ErrorCode } from \"./exceptions.js\";\n\nconst { BAD_CONFIG, CONFLICTING_CODE } = ErrorCode;\n\nconst badURL = (url, expected = \"\") => {\n    let message = `(${BAD_CONFIG}): Invalid URL: ${url}`;\n    if (expected) message += `\\nexpected ${expected} content`;\n    throw new Error(message);\n};\n\n/**\n * Given a string, returns its trimmed content as text,\n * fetching it from a file if the content is a URL.\n * @param {string} config either JSON, TOML, or a file to fetch\n * @param {string?} type the optional type to enforce\n * @returns {{json: boolean, toml: boolean, text: string}}\n */\nexport const configDetails = async (config, type) => {\n    let text = config?.trim();\n    // we only support an object as root config\n    let url = \"\",\n        toml = false,\n        json = /^{/.test(text) && /}$/.test(text);\n    // handle files by extension (relaxing urls parts after)\n    if (!json && /\\.(\\w+)(?:\\?\\S*)?$/.test(text)) {\n        const ext = RegExp.$1;\n        if (ext === \"json\" && type !== \"toml\") json = true;\n        else if (ext === \"toml\" && type !== \"json\") toml = true;\n        else badURL(text, type);\n        url = text;\n        text = (await fetch(url).then(getText)).trim();\n    }\n    return { json, toml: toml || (!json && !!text), text, url };\n};\n\nconst conflictError = (reason) => new Error(`(${CONFLICTING_CODE}): ${reason}`);\n\nconst relative_url = (url, base = location.href) => new URL(url, base).href;\n\nconst syntaxError = (type, url, { message }) => {\n    let str = `(${BAD_CONFIG}): Invalid ${type}`;\n    if (url) str += ` @ ${url}`;\n    return new SyntaxError(`${str}\\n${message}`);\n};\n\nconst configs = new Map();\n\nfor (const [TYPE] of TYPES) {\n    /** @type {() => Promise<[...any]>} A Promise wrapping any plugins which should be loaded. */\n    let plugins;\n\n    /** @type {any} The PyScript configuration parsed from the JSON or TOML object*. May be any of the return types of JSON.parse() or toml-j0.4's parse() ( {number | string | boolean | null | object | Array} ) */\n    let parsed;\n\n    /** @type {Error | undefined} The error thrown when parsing the PyScript config, if any.*/\n    let error;\n\n    /** @type {string | undefined} The `configURL` field to normalize all config operations as opposite of guessing it once resolved */\n    let configURL;\n\n    let config,\n        type,\n        pyElement,\n        pyConfigs = $$(`${TYPE}-config`),\n        attrConfigs = $$(\n            [\n                `script[type=\"${TYPE}\"][config]:not([worker])`,\n                `${TYPE}-script[config]:not([worker])`,\n            ].join(\",\"),\n        );\n\n    // throw an error if there are multiple <py-config> or <mpy-config>\n    if (pyConfigs.length > 1) {\n        error = conflictError(`Too many ${TYPE}-config`);\n    } else {\n        // throw an error if there are <x-config> and config=\"x\" attributes\n        if (pyConfigs.length && attrConfigs.length) {\n            error = conflictError(\n                `Ambiguous ${TYPE}-config VS config attribute`,\n            );\n        } else if (pyConfigs.length) {\n            [pyElement] = pyConfigs;\n            config = pyElement.getAttribute(\"src\") || pyElement.textContent;\n            type = pyElement.getAttribute(\"type\");\n        } else if (attrConfigs.length) {\n            [pyElement, ...attrConfigs] = attrConfigs;\n            config = pyElement.getAttribute(\"config\");\n            // throw an error if dirrent scripts use different configs\n            if (\n                attrConfigs.some((el) => el.getAttribute(\"config\") !== config)\n            ) {\n                error = conflictError(\n                    \"Unable to use different configs on main\",\n                );\n            }\n        }\n    }\n\n    // catch possible fetch errors\n    if (!error && config) {\n        try {\n            const { json, toml, text, url } = await configDetails(config, type);\n            if (url) configURL = relative_url(url);\n            config = text;\n            if (json || type === \"json\") {\n                try {\n                    parsed = JSON.parse(text);\n                } catch (e) {\n                    error = syntaxError(\"JSON\", url, e);\n                }\n            } else if (toml || type === \"toml\") {\n                try {\n                    const { parse } = await import(\n                        /* webpackIgnore: true */ \"./3rd-party/toml.js\"\n                    );\n                    parsed = parse(text);\n                } catch (e) {\n                    error = syntaxError(\"TOML\", url, e);\n                }\n            }\n        } catch (e) {\n            error = e;\n        }\n    }\n\n    // parse all plugins and optionally ignore only\n    // those flagged as \"undesired\" via `!` prefix\n    plugins = async () => {\n        const toBeAwaited = [];\n        for (const [key, value] of Object.entries(allPlugins)) {\n            if (error) {\n                if (key === \"error\") {\n                    // show on page the config is broken, meaning that\n                    // it was not possible to disable error plugin neither\n                    // as that part wasn't correctly parsed anyway\n                    value().then(({ notify }) => notify(error.message));\n                }\n            } else if (!parsed?.plugins?.includes(`!${key}`)) {\n                toBeAwaited.push(value().then(({ default: p }) => p));\n            } else if (key === \"error\") {\n                toBeAwaited.push(value().then(({ notOnDOM }) => notOnDOM()));\n            }\n        }\n        return await Promise.all(toBeAwaited);\n    };\n\n    configs.set(TYPE, { config: parsed, configURL, plugins, error });\n}\n\nexport { configs, relative_url };\n","import IDBMap from \"@webreflection/idb-map\";\nimport { assign } from \"polyscript/exports\";\nimport { $$ } from \"basic-devtools\";\n\nconst stop = (event) => {\n    event.preventDefault();\n    event.stopImmediatePropagation();\n};\n\n// ⚠️ these two constants MUST be passed as `fs`\n//     within the worker onBeforeRunAsync hook!\nexport const NAMESPACE = \"@pyscript.fs\";\nexport const ERROR = \"storage permissions not granted\";\n\nexport const idb = new IDBMap(NAMESPACE);\n\n/**\n * Ask a user action via dialog and returns the directory handler once granted.\n * @param {{id?:string, mode?:\"read\"|\"readwrite\", hint?:\"desktop\"|\"documents\"|\"downloads\"|\"music\"|\"pictures\"|\"videos\"}} options\n * @returns {Promise<FileSystemDirectoryHandle>}\n */\nexport const getFileSystemDirectoryHandle = async (options) => {\n    if (!(\"showDirectoryPicker\" in globalThis)) {\n        return Promise.reject(\n            new Error(\"showDirectoryPicker is not supported\"),\n        );\n    }\n\n    const { promise, resolve, reject } = Promise.withResolvers();\n\n    const how = { id: \"pyscript\", mode: \"readwrite\", ...options };\n    if (options.hint) how.startIn = options.hint;\n\n    const transient = async () => {\n        try {\n            /* eslint-disable */\n            const handler = await showDirectoryPicker(how);\n            /* eslint-enable */\n            if ((await handler.requestPermission(how)) === \"granted\") {\n                resolve(handler);\n                return true;\n            }\n        } catch ({ message }) {\n            console.warn(message);\n        }\n        return false;\n    };\n\n    // in case the user decided to attach the event itself\n    // as opposite of relying our dialog walkthrough\n    if (navigator.userActivation?.isActive) {\n        if (!(await transient())) reject(new Error(ERROR));\n    } else {\n        const dialog = assign(document.createElement(\"dialog\"), {\n            className: \"pyscript-fs\",\n            innerHTML: [\n                \"<strong>ℹ️ Persistent FileSystem</strong><hr>\",\n                \"<p><small>PyScript would like to access a local folder.</small></p>\",\n                \"<div><button title='ok'>✅ Authorize</button>\",\n                \"<button title='cancel'>❌</button></div>\",\n            ].join(\"\"),\n        });\n\n        const [ok, cancel] = $$(\"button\", dialog);\n\n        ok.addEventListener(\"click\", async (event) => {\n            stop(event);\n            if (await transient()) dialog.close();\n        });\n\n        cancel.addEventListener(\"click\", async (event) => {\n            stop(event);\n            reject(new Error(ERROR));\n            dialog.close();\n        });\n\n        document.body.appendChild(dialog).showModal();\n    }\n\n    return promise;\n};\n","import { idb, getFileSystemDirectoryHandle } from \"./fs.js\";\n\nexport default {\n    // allow pyterminal checks to bootstrap\n    is_pyterminal: () => false,\n\n    /**\n     * 'Sleep' for the given number of seconds. Used to implement Python's time.sleep in Worker threads.\n     * @param {number} seconds The number of seconds to sleep.\n     */\n    sleep(seconds) {\n        return new Promise(($) => setTimeout($, seconds * 1000));\n    },\n\n    /**\n     * Ask a user action via dialog and returns the directory handler once granted.\n     * @param {string} uid\n     * @param {{id?:string, mode?:\"read\"|\"readwrite\", hint?:\"desktop\"|\"documents\"|\"downloads\"|\"music\"|\"pictures\"|\"videos\"}} options\n     * @returns {boolean}\n     */\n    async storeFSHandler(uid, options = {}) {\n        if (await idb.has(uid)) return true;\n        return getFileSystemDirectoryHandle(options).then(\n            async (handler) => {\n                await idb.set(uid, handler);\n                return true;\n            },\n            () => false,\n        );\n    },\n};\n","import { defineProperty } from \"polyscript/exports\";\n\n// helper for all script[type=\"py\"] out there\nconst before = (script) => {\n    defineProperty(document, \"currentScript\", {\n        configurable: true,\n        get: () => script,\n    });\n};\n\nconst after = () => {\n    delete document.currentScript;\n};\n\n// common life-cycle handlers for any node\nexport default async (main, wrap, element, hook) => {\n    const isAsync = hook.endsWith(\"Async\");\n    const isBefore = hook.startsWith(\"onBefore\");\n    // make it possible to reach the current target node via Python\n    // or clean up for other scripts executing around this one\n    (isBefore ? before : after)(element);\n    for (const fn of main(hook)) {\n        if (isAsync) await fn(wrap, element);\n        else fn(wrap, element);\n    }\n};\n","const any = () => true;\nconst error = message => {\n  throw new TypeError(message);\n};\n\nconst validator = (type, Class) => {\n  const checks = [];\n  if (type) {\n    for (const t of type.split(/\\s*\\|\\s*/)) {\n      if (t === 'object')\n        checks.push(v => v !== null && typeof v === t);\n      else if (t === 'null')\n        checks.push(v => v === null);\n      else\n        checks.push(v => typeof v === t);\n    }\n  }\n  if (Class) {\n    for (const C of [].concat(Class))\n      checks.push(o => o instanceof C);\n  }\n  switch (checks.length) {\n    case 0: return any;\n    case 1: return checks[0];\n    default: return v => checks.some(f => f(v));\n  }\n};\n\nconst failure = (type, Class, kind, onerror = error) => value => {\n  const message = [`Invalid ${typeof value} ${kind}: expected `];\n  if (type) {\n    message.push(type);\n    if (Class) message.push(' or ');\n  }\n  if (Class) {\n    message.push('an instanceof ');\n    message.push([].concat(Class).map(({name}) => name).join(' | '));\n  }\n  onerror(message.join(''), value);\n};\n\nconst checkFail = (options, kind = 'value') => {\n  const type = options?.typeof;\n  const Class = options?.instanceof;\n  return [\n    validator(type, Class),\n    failure(type, Class, kind, options?.onerror)\n  ];\n};\n\nconst createSet = Set => options => {\n  const [check, fail] = checkFail(options);\n  return class TypedSet extends Set {\n    add(value) {\n      return check(value) ? super.add(value) : fail(value);\n    }\n  };\n};\n\nexport const typedSet = createSet(Set);\nexport const typedWeakSet = createSet(WeakSet);\n\nconst createMap = Map => ([keyOptions, valueOptions]) => {\n  const [checkKey, failKey] = checkFail(keyOptions, 'key');\n  const [checkValue, failValue] = checkFail(valueOptions);\n  return class TypedMap extends Map {\n    set(key, value) {\n      if (!checkKey(key)) failKey(key);\n      if (!checkValue(value)) failValue(value);\n      return super.set(key, value);\n    }\n  };\n};\n\nexport const typedMap = createMap(Map);\nexport const typedWeakMap = createMap(WeakMap);\n","/**\n * Create through Python the pyscript module through\n * the artifact generated at build time.\n * This the returned value is a string that must be used\n * either before a worker execute code or when the module\n * is registered on the main thread.\n */\n\nimport pyscript from \"./stdlib/pyscript.js\";\n\nclass Ignore extends Array {\n    #add = false;\n    #paths;\n    #array;\n    constructor(array, ...paths) {\n        super();\n        this.#array = array;\n        this.#paths = paths;\n    }\n    push(...values) {\n        if (this.#add) super.push(...values);\n        return this.#array.push(...values);\n    }\n    path(path) {\n        for (const _path of this.#paths) {\n            // bails out at the first `true` value\n            if ((this.#add = path.startsWith(_path))) break;\n        }\n    }\n}\n\nconst { entries } = Object;\n\nconst python = [\n    \"import os as _os\",\n    \"from pathlib import Path as _Path\",\n    \"_path = None\",\n];\n\nconst ignore = new Ignore(python, \"-\");\n\nconst write = (base, literal) => {\n    for (const [key, value] of entries(literal)) {\n        ignore.path(`${base}/${key}`);\n        ignore.push(`_path = _Path(\"${base}/${key}\")`);\n        if (typeof value === \"string\") {\n            const code = JSON.stringify(value);\n            ignore.push(`_path.write_text(${code},encoding=\"utf-8\")`);\n        } else {\n            // @see https://github.com/pyscript/pyscript/pull/1813#issuecomment-1781502909\n            ignore.push(`if not _os.path.exists(\"${base}/${key}\"):`);\n            ignore.push(\"    _path.mkdir(parents=True, exist_ok=True)\");\n            write(`${base}/${key}`, value);\n        }\n    }\n};\n\nwrite(\".\", pyscript);\n\n// in order to fix js.document in the Worker case\n// we need to bootstrap pyscript module ASAP\npython.push(\"import pyscript as _pyscript\");\n\npython.push(\n    ...[\"_Path\", \"_path\", \"_os\", \"_pyscript\"].map((ref) => `del ${ref}`),\n);\npython.push(\"\\n\");\n\nexport const stdlib = python.join(\"\\n\");\nexport const optional = ignore.join(\"\\n\");\n","// ⚠️ This file is an artifact: DO NOT MODIFY\nexport default {\n  \"pyscript\": {\n    \"__init__.py\": \"from polyscript import lazy_py_modules as py_import\\nfrom pyscript.magic_js import RUNNING_IN_WORKER,PyWorker,config,current_target,document,js_import,js_modules,sync,window\\nfrom pyscript.display import HTML,display\\nfrom pyscript.fetch import fetch\\nfrom pyscript.storage import Storage,storage\\nfrom pyscript.websocket import WebSocket\\nfrom pyscript.events import when,Event\\nif not RUNNING_IN_WORKER:from pyscript.workers import create_named_worker,workers\",\n    \"display.py\": \"_L='_repr_mimebundle_'\\n_K='image/svg+xml'\\n_J='application/json'\\n_I='__repr__'\\n_H='savefig'\\n_G='text/html'\\n_F='image/jpeg'\\n_E='application/javascript'\\n_D='utf-8'\\n_C='text/plain'\\n_B='image/png'\\n_A=None\\nimport base64,html,io,re\\nfrom pyscript.magic_js import current_target,document,window\\n_MIME_METHODS={_H:_B,'_repr_javascript_':_E,'_repr_json_':_J,'_repr_latex':'text/latex','_repr_png_':_B,'_repr_jpeg_':_F,'_repr_pdf_':'application/pdf','_repr_svg_':_K,'_repr_markdown_':'text/markdown','_repr_html_':_G,_I:_C}\\ndef _render_image(mime,value,meta):\\n\\tA=value\\n\\tif isinstance(A,bytes):A=base64.b64encode(A).decode(_D)\\n\\tB=re.compile('^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)?$')\\n\\tif len(A)>0 and not B.match(A):A=base64.b64encode(A.encode(_D)).decode(_D)\\n\\tC=f\\\"data:{mime};charset=utf-8;base64,{A}\\\";D=' '.join(['{k}=\\\"{v}\\\"'for(A,B)in meta.items()]);return f'<img src=\\\"{C}\\\" {D}></img>'\\ndef _identity(value,meta):return value\\n_MIME_RENDERERS={_C:html.escape,_G:_identity,_B:lambda value,meta:_render_image(_B,value,meta),_F:lambda value,meta:_render_image(_F,value,meta),_K:_identity,_J:_identity,_E:lambda value,meta:f\\\"<script>{value}<\\\\\\\\/script>\\\"}\\nclass HTML:\\n\\tdef __init__(A,html):A._html=html\\n\\tdef _repr_html_(A):return A._html\\ndef _eval_formatter(obj,print_method):\\n\\tB=obj;A=print_method\\n\\tif A==_I:return repr(B)\\n\\tif hasattr(B,A):\\n\\t\\tif A==_H:C=io.BytesIO();B.savefig(C,format='png');C.seek(0);return base64.b64encode(C.read()).decode(_D)\\n\\t\\treturn getattr(B,A)()\\n\\tif A==_L:return{},{}\\ndef _format_mime(obj):\\n\\tC=obj\\n\\tif isinstance(C,str):return html.escape(C),_C\\n\\tD=_eval_formatter(C,_L)\\n\\tif isinstance(D,tuple):E,I=D\\n\\telse:E=D\\n\\tA,F=_A,[]\\n\\tfor(H,B)in _MIME_METHODS.items():\\n\\t\\tif B in E:A=E[B]\\n\\t\\telse:A=_eval_formatter(C,H)\\n\\t\\tif A is _A:continue\\n\\t\\tif B not in _MIME_RENDERERS:F.append(B);continue\\n\\t\\tbreak\\n\\tif A is _A:\\n\\t\\tif F:window.console.warn(f\\\"Rendered object requested unavailable MIME renderers: {F}\\\")\\n\\t\\tA=repr(A);B=_C\\n\\telif isinstance(A,tuple):A,G=A\\n\\telse:G={}\\n\\treturn _MIME_RENDERERS[B](A,G),B\\ndef _write(element,value,append=False):\\n\\tB=element;C,D=_format_mime(value)\\n\\tif C=='\\\\\\\\n':return\\n\\tif append:A=document.createElement('div');B.append(A)\\n\\telse:\\n\\t\\tA=B.lastElementChild\\n\\t\\tif A is _A:A=B\\n\\tif D in(_E,_G):E=document.createRange().createContextualFragment(C);A.append(E)\\n\\telse:A.innerHTML=C\\ndef display(*E,target=_A,append=True):\\n\\tD=append;A=target\\n\\tif A is _A:A=current_target()\\n\\telif not isinstance(A,str):C=f\\\"target must be str or None, not {A.__class__.__name__}\\\";raise TypeError(C)\\n\\telif A=='':C='Cannot have an empty target';raise ValueError(C)\\n\\telif A.startswith('#'):A=A[1:]\\n\\tB=document.getElementById(A)\\n\\tif B is _A:C=f\\\"Invalid selector with id={A}. Cannot be found in the page.\\\";raise ValueError(C)\\n\\tif B.tagName=='SCRIPT'and hasattr(B,'target'):B=B.target\\n\\tfor F in E:\\n\\t\\tif not D:B.replaceChildren()\\n\\t\\t_write(B,F,append=D)\",\n    \"events.py\": \"import asyncio,inspect,sys\\nfrom functools import wraps\\nfrom pyscript.magic_js import document\\nfrom pyscript.ffi import create_proxy\\nfrom pyscript.util import is_awaitable\\nfrom pyscript import config\\nclass Event:\\n\\tdef __init__(A):A._listeners=[]\\n\\tdef trigger(C,result):\\n\\t\\tB=result\\n\\t\\tfor A in C._listeners:\\n\\t\\t\\tif is_awaitable(A):asyncio.create_task(A(B))\\n\\t\\t\\telse:A(B)\\n\\tdef add_listener(B,listener):\\n\\t\\tA=listener\\n\\t\\tif is_awaitable(A)or callable(A):\\n\\t\\t\\tif A not in B._listeners:B._listeners.append(A)\\n\\t\\telse:C='Listener must be callable or awaitable.';raise ValueError(C)\\n\\tdef remove_listener(A,*B):\\n\\t\\tif B:\\n\\t\\t\\tfor C in B:A._listeners.remove(C)\\n\\t\\telse:A._listeners=[]\\ndef when(target,*B,**D):\\n\\tG='handler';C=target;E=None\\n\\tif B and(callable(B[0])or is_awaitable(B[0])):E=B[0]\\n\\telif callable(D.get(G))or is_awaitable(D.get(G)):E=D.pop(G)\\n\\tif isinstance(C,str):\\n\\t\\tA=B[0]if B else D.pop('selector')\\n\\t\\tif not A:I='No selector provided.';raise ValueError(I)\\n\\t\\tfrom pyscript.web import Element as J,ElementCollection as K\\n\\t\\tif isinstance(A,str):F=document.querySelectorAll(A)\\n\\t\\telif isinstance(A,J):F=[A._dom_element]\\n\\t\\telif isinstance(A,K):F=[A._dom_element for A in A]\\n\\t\\telse:F=A if isinstance(A,list)else[A]\\n\\tdef H(func):\\n\\t\\tE='positional arguments';D='takes';A=func\\n\\t\\tif config['type']=='mpy':\\n\\t\\t\\tif is_awaitable(A):\\n\\t\\t\\t\\tasync def B(*C,**F):\\n\\t\\t\\t\\t\\ttry:return await A(*C,**F)\\n\\t\\t\\t\\t\\texcept TypeError as B:\\n\\t\\t\\t\\t\\t\\tif D in str(B)and E in str(B):return await A()\\n\\t\\t\\t\\t\\t\\traise\\n\\t\\t\\telse:\\n\\t\\t\\t\\tdef B(*C,**F):\\n\\t\\t\\t\\t\\ttry:return A(*C,**F)\\n\\t\\t\\t\\t\\texcept TypeError as B:\\n\\t\\t\\t\\t\\t\\tif D in str(B)and E in str(B):return A()\\n\\t\\t\\t\\t\\t\\traise\\n\\t\\telse:\\n\\t\\t\\tG=inspect.signature(A)\\n\\t\\t\\tif G.parameters:\\n\\t\\t\\t\\tif is_awaitable(A):\\n\\t\\t\\t\\t\\tasync def B(event):return await A(event)\\n\\t\\t\\t\\telse:B=A\\n\\t\\t\\telif is_awaitable(A):\\n\\t\\t\\t\\tasync def B(*B,**C):return await A()\\n\\t\\t\\telse:\\n\\t\\t\\t\\tdef B(*B,**C):return A()\\n\\t\\tB=wraps(A)(B)\\n\\t\\tif isinstance(C,Event):C.add_listener(B)\\n\\t\\telif isinstance(C,list)and all(isinstance(A,Event)for A in C):\\n\\t\\t\\tfor H in C:H.add_listener(B)\\n\\t\\telse:\\n\\t\\t\\tfor I in F:I.addEventListener(C,create_proxy(B))\\n\\t\\treturn B\\n\\treturn H(E)if E else H\",\n    \"fetch.py\": \"import json,js\\nfrom pyscript.util import as_bytearray\\nclass _Response:\\n\\tdef __init__(A,response):A._response=response\\n\\tdef __getattr__(A,attr):return getattr(A._response,attr)\\n\\tasync def arrayBuffer(B):\\n\\t\\tA=await B._response.arrayBuffer()\\n\\t\\tif hasattr(A,'to_py'):return A.to_py()\\n\\t\\treturn memoryview(as_bytearray(A))\\n\\tasync def blob(A):return await A._response.blob()\\n\\tasync def bytearray(A):B=await A._response.arrayBuffer();return as_bytearray(B)\\n\\tasync def json(A):return json.loads(await A.text())\\n\\tasync def text(A):return await A._response.text()\\nclass _DirectResponse:\\n\\t@staticmethod\\n\\tdef setup(promise,response):A=promise;A._response=_Response(response);return A._response\\n\\tdef __init__(B,promise):A=promise;B._promise=A;A._response=None;A.arrayBuffer=B.arrayBuffer;A.blob=B.blob;A.bytearray=B.bytearray;A.json=B.json;A.text=B.text\\n\\tasync def _response(A):\\n\\t\\tif not A._promise._response:await A._promise\\n\\t\\treturn A._promise._response\\n\\tasync def arrayBuffer(A):B=await A._response();return await B.arrayBuffer()\\n\\tasync def blob(A):B=await A._response();return await B.blob()\\n\\tasync def bytearray(A):B=await A._response();return await B.bytearray()\\n\\tasync def json(A):B=await A._response();return await B.json()\\n\\tasync def text(A):B=await A._response();return await B.text()\\ndef fetch(url,**B):C=js.JSON.parse(json.dumps(B));D=lambda response,*B:_DirectResponse.setup(A,response);A=js.fetch(url,C).then(D);_DirectResponse(A);return A\",\n    \"ffi.py\": \"try:\\n\\timport js;from pyodide.ffi import create_proxy as _cp,to_js as _py_tjs;from_entries=js.Object.fromEntries\\n\\tdef _tjs(value,**A):\\n\\t\\tB='dict_converter'\\n\\t\\tif not hasattr(A,B):A[B]=from_entries\\n\\t\\treturn _py_tjs(value,**A)\\nexcept:from jsffi import create_proxy as _cp;from jsffi import to_js as _tjs\\ncreate_proxy=_cp\\nto_js=_tjs\",\n    \"flatted.py\": \"import json as _json\\nclass _Known:\\n\\tdef __init__(A):A.key=[];A.value=[]\\nclass _String:\\n\\tdef __init__(A,value):A.value=value\\ndef _array_keys(value):\\n\\tA=[];B=0\\n\\tfor C in value:A.append(B);B+=1\\n\\treturn A\\ndef _object_keys(value):\\n\\tA=[]\\n\\tfor B in value:A.append(B)\\n\\treturn A\\ndef _is_array(value):return isinstance(value,(list,tuple))\\ndef _is_object(value):return isinstance(value,dict)\\ndef _is_string(value):return isinstance(value,str)\\ndef _index(known,input,value):B=value;A=known;input.append(B);C=str(len(input)-1);A.key.append(B);A.value.append(C);return C\\ndef _loop(keys,input,known,output):\\n\\tA=output\\n\\tfor B in keys:\\n\\t\\tC=A[B]\\n\\t\\tif isinstance(C,_String):_ref(B,input[int(C.value)],input,known,A)\\n\\treturn A\\ndef _ref(key,value,input,known,output):\\n\\tB=known;A=value\\n\\tif _is_array(A)and A not in B:B.append(A);A=_loop(_array_keys(A),input,B,A)\\n\\telif _is_object(A)and A not in B:B.append(A);A=_loop(_object_keys(A),input,B,A)\\n\\toutput[key]=A\\ndef _relate(known,input,value):\\n\\tB=known;A=value\\n\\tif _is_string(A)or _is_array(A)or _is_object(A):\\n\\t\\ttry:return B.value[B.key.index(A)]\\n\\t\\texcept:return _index(B,input,A)\\n\\treturn A\\ndef _transform(known,input,value):\\n\\tB=known;A=value\\n\\tif _is_array(A):\\n\\t\\tC=[]\\n\\t\\tfor F in A:C.append(_relate(B,input,F))\\n\\t\\treturn C\\n\\tif _is_object(A):\\n\\t\\tD={}\\n\\t\\tfor E in A:D[E]=_relate(B,input,A[E])\\n\\t\\treturn D\\n\\treturn A\\ndef _wrap(value):\\n\\tA=value\\n\\tif _is_string(A):return _String(A)\\n\\tif _is_array(A):\\n\\t\\tB=0\\n\\t\\tfor D in A:A[B]=_wrap(D);B+=1\\n\\telif _is_object(A):\\n\\t\\tfor C in A:A[C]=_wrap(A[C])\\n\\treturn A\\ndef parse(value,*C,**D):\\n\\tA=value;E=_json.loads(A,*C,**D);B=[]\\n\\tfor A in E:B.append(_wrap(A))\\n\\tinput=[]\\n\\tfor A in B:\\n\\t\\tif isinstance(A,_String):input.append(A.value)\\n\\t\\telse:input.append(A)\\n\\tA=input[0]\\n\\tif _is_array(A):return _loop(_array_keys(A),input,[A],A)\\n\\tif _is_object(A):return _loop(_object_keys(A),input,[A],A)\\n\\treturn A\\ndef stringify(value,*D,**E):\\n\\tB=_Known();input=[];C=[];A=int(_index(B,input,value))\\n\\twhile A<len(input):C.append(_transform(B,input,input[A]));A+=1\\n\\treturn _json.dumps(C,*D,**E)\",\n    \"fs.py\": \"mounted={}\\nasync def mount(path,mode='readwrite',root='',id='pyscript'):\\n\\tE=path;import js;from _pyscript import fs as A,interpreter as I;from pyscript.ffi import to_js as H;from pyscript.magic_js import RUNNING_IN_WORKER as J,sync;js.console.warn('experimental pyscript.fs ⚠️');B=None;C=f\\\"{E}@{id}\\\";F={'id':id,'mode':mode}\\n\\tif root!='':F['startIn']=root\\n\\tif J:\\n\\t\\tG=sync.storeFSHandler(C,H(F))\\n\\t\\tif isinstance(G,bool):D=G\\n\\t\\telse:D=await G\\n\\t\\tif D:from polyscript import IDBMap as K;L=K.new(A.NAMESPACE);B=await L.get(C)\\n\\t\\telse:raise RuntimeError(A.ERROR)\\n\\telse:\\n\\t\\tD=await A.idb.has(C)\\n\\t\\tif D:B=await A.idb.get(C)\\n\\t\\telse:B=await A.getFileSystemDirectoryHandle(H(F));await A.idb.set(C,B)\\n\\tmounted[E]=await I.mountNativeFS(E,B)\\nasync def sync(path):await mounted[path].syncfs()\\nasync def unmount(path):from _pyscript import interpreter as A;await sync(path);A._module.FS.unmount(path)\",\n    \"magic_js.py\": \"import json,sys,js as globalThis\\nfrom polyscript import config as _config,js_modules\\nfrom pyscript.util import NotSupported\\nRUNNING_IN_WORKER=not hasattr(globalThis,'document')\\nconfig=json.loads(globalThis.JSON.stringify(_config))\\nif'MicroPython'in sys.version:config['type']='mpy'\\nelse:config['type']='py'\\nclass JSModule:\\n\\tdef __init__(A,name):A.name=name\\n\\tdef __getattr__(B,field):\\n\\t\\tA=field\\n\\t\\tif not A.startswith('_'):return getattr(getattr(js_modules,B.name),A)\\nfor name in globalThis.Reflect.ownKeys(js_modules):sys.modules[f\\\"pyscript.js_modules.{name}\\\"]=JSModule(name)\\nsys.modules['pyscript.js_modules']=js_modules\\nif RUNNING_IN_WORKER:\\n\\timport polyscript;PyWorker=NotSupported('pyscript.PyWorker','pyscript.PyWorker works only when running in the main thread')\\n\\ttry:import js;window=polyscript.xworker.window;document=window.document;js.document=document;js_import=window.Function('return (...urls) => Promise.all(urls.map((url) => import(url)))')()\\n\\texcept:message='Unable to use `window` or `document` -> https://docs.pyscript.net/latest/faq/#sharedarraybuffer';globalThis.console.warn(message);window=NotSupported('pyscript.window',message);document=NotSupported('pyscript.document',message);js_import=None\\n\\tsync=polyscript.xworker.sync\\n\\tdef current_target():return polyscript.target\\nelse:\\n\\timport _pyscript;from _pyscript import PyWorker,js_import;window=globalThis;document=globalThis.document;sync=NotSupported('pyscript.sync','pyscript.sync works only when running in a worker')\\n\\tdef current_target():return _pyscript.target\",\n    \"media.py\": \"from pyscript import window\\nfrom pyscript.ffi import to_js\\nclass Device:\\n\\tdef __init__(A,device):A._dom_element=device\\n\\t@property\\n\\tdef id(self):return self._dom_element.deviceId\\n\\t@property\\n\\tdef group(self):return self._dom_element.groupId\\n\\t@property\\n\\tdef kind(self):return self._dom_element.kind\\n\\t@property\\n\\tdef label(self):return self._dom_element.label\\n\\tdef __getitem__(A,key):return getattr(A,key)\\n\\t@classmethod\\n\\tasync def load(D,audio=False,video=True):\\n\\t\\tB=video;A=window.Object.new();A.audio=audio\\n\\t\\tif isinstance(B,bool):A.video=B\\n\\t\\telse:\\n\\t\\t\\tA.video=window.Object.new()\\n\\t\\t\\tfor C in B:setattr(A.video,C,to_js(B[C]))\\n\\t\\treturn await window.navigator.mediaDevices.getUserMedia(A)\\n\\tasync def get_stream(A):B=A.kind.replace('input','').replace('output','');C={B:{'deviceId':{'exact':A.id}}};return await A.load(**C)\\nasync def list_devices():return[Device(A)for A in await window.navigator.mediaDevices.enumerateDevices()]\",\n    \"storage.py\": \"_C='memoryview'\\n_B='bytearray'\\n_A='generic'\\nfrom polyscript import storage as _storage\\nfrom pyscript.flatted import parse as _parse\\nfrom pyscript.flatted import stringify as _stringify\\ndef _to_idb(value):\\n\\tA=value\\n\\tif A is None:return _stringify(['null',0])\\n\\tif isinstance(A,(bool,float,int,str,list,dict,tuple)):return _stringify([_A,A])\\n\\tif isinstance(A,bytearray):return _stringify([_B,list(A)])\\n\\tif isinstance(A,memoryview):return _stringify([_C,list(A)])\\n\\tB=f\\\"Unexpected value: {A}\\\";raise TypeError(B)\\ndef _from_idb(value):\\n\\tC=value;A,B=_parse(C)\\n\\tif A=='null':return\\n\\tif A==_A:return B\\n\\tif A==_B:return bytearray(B)\\n\\tif A==_C:return memoryview(bytearray(B))\\n\\treturn C\\nclass Storage(dict):\\n\\tdef __init__(B,store):A=store;super().__init__({A:_from_idb(B)for(A,B)in A.entries()});B.__store__=A\\n\\tdef __delitem__(A,attr):A.__store__.delete(attr);super().__delitem__(attr)\\n\\tdef __setitem__(B,attr,value):A=value;B.__store__.set(attr,_to_idb(A));super().__setitem__(attr,A)\\n\\tdef clear(A):A.__store__.clear();super().clear()\\n\\tasync def sync(A):await A.__store__.sync()\\nasync def storage(name='',storage_class=Storage):\\n\\tif not name:A='The storage name must be defined';raise ValueError(A)\\n\\treturn storage_class(await _storage(f\\\"@pyscript/{name}\\\"))\",\n    \"util.py\": \"import js,sys,inspect\\ndef as_bytearray(buffer):\\n\\tA=js.Uint8Array.new(buffer);B=A.length;C=bytearray(B)\\n\\tfor D in range(B):C[D]=A[D]\\n\\treturn C\\nclass NotSupported:\\n\\tdef __init__(A,name,error):object.__setattr__(A,'name',name);object.__setattr__(A,'error',error)\\n\\tdef __repr__(A):return f\\\"<NotSupported {A.name} [{A.error}]>\\\"\\n\\tdef __getattr__(A,attr):raise AttributeError(A.error)\\n\\tdef __setattr__(A,attr,value):raise AttributeError(A.error)\\n\\tdef __call__(A,*B):raise TypeError(A.error)\\ndef is_awaitable(obj):\\n\\tA=obj;from pyscript import config as B\\n\\tif B['type']=='mpy':\\n\\t\\tif'<closure <generator>'in repr(A):return True\\n\\t\\treturn inspect.isgeneratorfunction(A)\\n\\treturn inspect.iscoroutinefunction(A)\",\n    \"web.py\": \"_B='on_'\\n_A=None\\nfrom pyscript import document,when,Event\\nfrom pyscript.ffi import create_proxy\\ndef wrap_dom_element(dom_element):return Element.wrap_dom_element(dom_element)\\nclass Element:\\n\\telement_classes_by_tag_name={}\\n\\t@classmethod\\n\\tdef get_tag_name(A):return A.__name__.replace('_','')\\n\\t@classmethod\\n\\tdef register_element_classes(B,element_classes):\\n\\t\\tfor A in element_classes:C=A.get_tag_name();B.element_classes_by_tag_name[C]=A\\n\\t@classmethod\\n\\tdef unregister_element_classes(A,element_classes):\\n\\t\\tfor B in element_classes:C=B.get_tag_name();A.element_classes_by_tag_name.pop(C,_A)\\n\\t@classmethod\\n\\tdef wrap_dom_element(A,dom_element):B=dom_element;C=A.element_classes_by_tag_name.get(B.tagName.lower(),A);return C(dom_element=B)\\n\\tdef __init__(A,dom_element=_A,classes=_A,style=_A,**E):\\n\\t\\tA._dom_element=dom_element or document.createElement(type(A).get_tag_name());A._on_events={};C={}\\n\\t\\tfor(B,D)in E.items():\\n\\t\\t\\tif B.startswith(_B):F=A.get_event(B);F.add_listener(D)\\n\\t\\t\\telse:C[B]=D\\n\\t\\tA._classes=Classes(A);A._style=Style(A);A.update(classes=classes,style=style,**C)\\n\\tdef __eq__(A,obj):return isinstance(obj,Element)and obj._dom_element==A._dom_element\\n\\tdef __getitem__(B,key):\\n\\t\\tA=key\\n\\t\\tif isinstance(A,(int,slice)):return B.children[A]\\n\\t\\treturn B.find(A)\\n\\tdef __getattr__(B,name):\\n\\t\\tA=name\\n\\t\\tif A.startswith(_B):return B.get_event(A)\\n\\t\\tif A.endswith('_'):A=A[:-1]\\n\\t\\treturn getattr(B._dom_element,A)\\n\\tdef __setattr__(C,name,value):\\n\\t\\tB=value;A=name\\n\\t\\tif A.startswith('_'):super().__setattr__(A,B)\\n\\t\\telse:\\n\\t\\t\\tif A.endswith('_'):A=A[:-1]\\n\\t\\t\\tif A.startswith(_B):C._on_events[A]=B\\n\\t\\t\\tsetattr(C._dom_element,A,B)\\n\\tdef get_event(A,name):\\n\\t\\tB=name\\n\\t\\tif not B.startswith(_B):C=\\\"Event names must start with 'on_'.\\\";raise ValueError(C)\\n\\t\\tD=B[3:]\\n\\t\\tif not hasattr(A._dom_element,D):C=f\\\"Element has no '{D}' event.\\\";raise ValueError(C)\\n\\t\\tif B in A._on_events:return A._on_events[B]\\n\\t\\tE=Event();A._on_events[B]=E;A._dom_element.addEventListener(D,create_proxy(E.trigger));return E\\n\\t@property\\n\\tdef children(self):return ElementCollection.wrap_dom_elements(self._dom_element.children)\\n\\t@property\\n\\tdef classes(self):return self._classes\\n\\t@property\\n\\tdef parent(self):\\n\\t\\tif self._dom_element.parentElement is _A:return\\n\\t\\treturn Element.wrap_dom_element(self._dom_element.parentElement)\\n\\t@property\\n\\tdef style(self):return self._style\\n\\tdef append(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,Element):B._dom_element.appendChild(A._dom_element)\\n\\t\\t\\telif isinstance(A,ElementCollection):\\n\\t\\t\\t\\tfor D in A:B._dom_element.appendChild(D._dom_element)\\n\\t\\t\\telif isinstance(A,(list,tuple)):\\n\\t\\t\\t\\tfor E in A:B.append(E)\\n\\t\\t\\telse:\\n\\t\\t\\t\\ttry:A.tagName;B._dom_element.appendChild(A)\\n\\t\\t\\t\\texcept AttributeError:\\n\\t\\t\\t\\t\\ttry:\\n\\t\\t\\t\\t\\t\\tA.length\\n\\t\\t\\t\\t\\t\\tfor F in A:B._dom_element.appendChild(F)\\n\\t\\t\\t\\t\\texcept AttributeError:G=f'Element \\\"{A}\\\" is a proxy object, \\\"but not a valid element or a NodeList.';raise TypeError(G)\\n\\tdef clone(B,clone_id=_A):A=Element.wrap_dom_element(B._dom_element.cloneNode(True));A.id=clone_id;return A\\n\\tdef find(A,selector):return ElementCollection.wrap_dom_elements(A._dom_element.querySelectorAll(selector))\\n\\tdef show_me(A):A._dom_element.scrollIntoView()\\n\\tdef update(A,classes=_A,style=_A,**D):\\n\\t\\tC=style;B=classes\\n\\t\\tif B:A.classes.add(B)\\n\\t\\tif C:A.style.set(**C)\\n\\t\\tfor(E,F)in D.items():setattr(A,E,F)\\nclass Classes:\\n\\tdef __init__(A,element):A._element=element;A._class_list=A._element._dom_element.classList\\n\\tdef __contains__(A,item):return item in A._class_list\\n\\tdef __eq__(C,other):\\n\\t\\tA=other\\n\\t\\tif isinstance(A,Classes):B=list(A._class_list)\\n\\t\\telse:\\n\\t\\t\\ttry:B=iter(A)\\n\\t\\t\\texcept TypeError:return False\\n\\t\\treturn set(C._class_list)==set(B)\\n\\tdef __iter__(A):return iter(A._class_list)\\n\\tdef __len__(A):return A._class_list.length\\n\\tdef __repr__(A):return f\\\"Classes({\\\", \\\".join(A._class_list)})\\\"\\n\\tdef __str__(A):return' '.join(A._class_list)\\n\\tdef add(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,list):\\n\\t\\t\\t\\tfor D in A:B.add(D)\\n\\t\\t\\telse:B._class_list.add(A)\\n\\tdef contains(A,class_name):return class_name in A\\n\\tdef remove(B,*C):\\n\\t\\tfor A in C:\\n\\t\\t\\tif isinstance(A,list):\\n\\t\\t\\t\\tfor D in A:B.remove(D)\\n\\t\\t\\telse:B._class_list.remove(A)\\n\\tdef replace(A,old_class,new_class):A.remove(old_class);A.add(new_class)\\n\\tdef toggle(A,*C):\\n\\t\\tfor B in C:\\n\\t\\t\\tif B in A:A.remove(B)\\n\\t\\t\\telse:A.add(B)\\nclass HasOptions:\\n\\t@property\\n\\tdef options(self):\\n\\t\\tA=self\\n\\t\\tif not hasattr(A,'_options'):A._options=Options(A)\\n\\t\\treturn A._options\\nclass Options:\\n\\tdef __init__(A,element):A._element=element\\n\\tdef __getitem__(A,key):return A.options[key]\\n\\tdef __iter__(A):yield from A.options\\n\\tdef __len__(A):return len(A.options)\\n\\tdef __repr__(A):return f\\\"{A.__class__.__name__} (length: {len(A)}) {A.options}\\\"\\n\\t@property\\n\\tdef options(self):return[Element.wrap_dom_element(A)for A in self._element._dom_element.options]\\n\\t@property\\n\\tdef selected(self):return self.options[self._element._dom_element.selectedIndex]\\n\\tdef add(D,value=_A,html=_A,text=_A,before=_A,**B):\\n\\t\\tC=value;A=before\\n\\t\\tif C is not _A:B['value']=C\\n\\t\\tif html is not _A:B['innerHTML']=html\\n\\t\\tif text is not _A:B['text']=text\\n\\t\\tE=option(**B)\\n\\t\\tif A and isinstance(A,Element):A=A._dom_element\\n\\t\\tD._element._dom_element.add(E._dom_element,A)\\n\\tdef clear(A):\\n\\t\\twhile len(A)>0:A.remove(0)\\n\\tdef remove(A,index):A._element._dom_element.remove(index)\\nclass Style:\\n\\tdef __init__(A,element):A._element=element;A._style=A._element._dom_element.style\\n\\tdef __getitem__(A,key):return A._style.getPropertyValue(key)\\n\\tdef __setitem__(A,key,value):A._style.setProperty(key,value)\\n\\tdef remove(A,key):A._style.removeProperty(key)\\n\\tdef set(A,**B):\\n\\t\\tfor(C,D)in B.items():A._element._dom_element.style.setProperty(C,D)\\n\\t@property\\n\\tdef visible(self):return self._element._dom_element.style.visibility\\n\\t@visible.setter\\n\\tdef visible(self,value):self._element._dom_element.style.visibility=value\\nclass ContainerElement(Element):\\n\\tdef __init__(B,*C,children=_A,dom_element=_A,style=_A,classes=_A,**D):\\n\\t\\tsuper().__init__(dom_element=dom_element,style=style,classes=classes,**D)\\n\\t\\tfor A in list(C)+(children or[]):\\n\\t\\t\\tif isinstance(A,(Element,ElementCollection)):B.append(A)\\n\\t\\t\\telse:B._dom_element.insertAdjacentHTML('beforeend',A)\\n\\tdef __iter__(A):yield from A.children\\nclass ClassesCollection:\\n\\tdef __init__(A,collection):A._collection=collection\\n\\tdef __contains__(A,class_name):\\n\\t\\tfor B in A._collection:\\n\\t\\t\\tif class_name in B.classes:return True\\n\\t\\treturn False\\n\\tdef __eq__(B,other):A=other;return isinstance(A,ClassesCollection)and B._collection==A._collection\\n\\tdef __iter__(A):yield from A._all_class_names()\\n\\tdef __len__(A):return len(A._all_class_names())\\n\\tdef __repr__(A):return f\\\"ClassesCollection({A._collection!r})\\\"\\n\\tdef __str__(A):return' '.join(A._all_class_names())\\n\\tdef add(A,*B):\\n\\t\\tfor C in A._collection:C.classes.add(*B)\\n\\tdef contains(A,class_name):return class_name in A\\n\\tdef remove(A,*B):\\n\\t\\tfor C in A._collection:C.classes.remove(*B)\\n\\tdef replace(A,old_class,new_class):\\n\\t\\tfor B in A._collection:B.classes.replace(old_class,new_class)\\n\\tdef toggle(A,*B):\\n\\t\\tfor C in A._collection:C.classes.toggle(*B)\\n\\tdef _all_class_names(B):\\n\\t\\tA=set()\\n\\t\\tfor C in B._collection:\\n\\t\\t\\tfor D in C.classes:A.add(D)\\n\\t\\treturn A\\nclass StyleCollection:\\n\\tdef __init__(A,collection):A._collection=collection\\n\\tdef __getitem__(A,key):return[A.style[key]for A in A._collection._elements]\\n\\tdef __setitem__(A,key,value):\\n\\t\\tfor B in A._collection._elements:B.style[key]=value\\n\\tdef __repr__(A):return f\\\"StyleCollection({A._collection!r})\\\"\\n\\tdef remove(A,key):\\n\\t\\tfor B in A._collection._elements:B.style.remove(key)\\nclass ElementCollection:\\n\\t@classmethod\\n\\tdef wrap_dom_elements(A,dom_elements):return A([Element.wrap_dom_element(A)for A in dom_elements])\\n\\tdef __init__(A,elements):A._elements=elements;A._classes=ClassesCollection(A);A._style=StyleCollection(A)\\n\\tdef __eq__(A,obj):return isinstance(obj,ElementCollection)and obj._elements==A._elements\\n\\tdef __getitem__(B,key):\\n\\t\\tA=key\\n\\t\\tif isinstance(A,int):return B._elements[A]\\n\\t\\tif isinstance(A,slice):return ElementCollection(B._elements[A])\\n\\t\\treturn B.find(A)\\n\\tdef __iter__(A):yield from A._elements\\n\\tdef __len__(A):return len(A._elements)\\n\\tdef __repr__(A):return f\\\"{A.__class__.__name__} (length: {len(A._elements)}) {A._elements}\\\"\\n\\tdef __getattr__(A,name):return[getattr(A,name)for A in A._elements]\\n\\tdef __setattr__(C,name,value):\\n\\t\\tB=value;A=name\\n\\t\\tif A.startswith('_'):super().__setattr__(A,B)\\n\\t\\telse:\\n\\t\\t\\tfor D in C._elements:setattr(D,A,B)\\n\\t@property\\n\\tdef classes(self):return self._classes\\n\\t@property\\n\\tdef elements(self):return self._elements\\n\\t@property\\n\\tdef style(self):return self._style\\n\\tdef find(B,selector):\\n\\t\\tA=[]\\n\\t\\tfor C in B._elements:A.extend(C.find(selector))\\n\\t\\treturn ElementCollection(A)\\nclass a(ContainerElement):0\\nclass abbr(ContainerElement):0\\nclass address(ContainerElement):0\\nclass area(Element):0\\nclass article(ContainerElement):0\\nclass aside(ContainerElement):0\\nclass audio(ContainerElement):0\\nclass b(ContainerElement):0\\nclass base(Element):0\\nclass blockquote(ContainerElement):0\\nclass body(ContainerElement):0\\nclass br(Element):0\\nclass button(ContainerElement):0\\nclass canvas(ContainerElement):\\n\\tdef download(A,filename='snapped.png'):B=a(download=filename,href=A._dom_element.toDataURL());A.append(B);B._dom_element.click()\\n\\tdef draw(E,what,width=_A,height=_A):\\n\\t\\tC=height;B=width;A=what\\n\\t\\tif isinstance(A,Element):A=A._dom_element\\n\\t\\tD=E._dom_element.getContext('2d')\\n\\t\\tif B or C:D.drawImage(A,0,0,B,C)\\n\\t\\telse:D.drawImage(A,0,0)\\nclass caption(ContainerElement):0\\nclass cite(ContainerElement):0\\nclass code(ContainerElement):0\\nclass col(Element):0\\nclass colgroup(ContainerElement):0\\nclass data(ContainerElement):0\\nclass datalist(ContainerElement,HasOptions):0\\nclass dd(ContainerElement):0\\nclass del_(ContainerElement):0\\nclass details(ContainerElement):0\\nclass dialog(ContainerElement):0\\nclass div(ContainerElement):0\\nclass dl(ContainerElement):0\\nclass dt(ContainerElement):0\\nclass em(ContainerElement):0\\nclass embed(Element):0\\nclass fieldset(ContainerElement):0\\nclass figcaption(ContainerElement):0\\nclass figure(ContainerElement):0\\nclass footer(ContainerElement):0\\nclass form(ContainerElement):0\\nclass h1(ContainerElement):0\\nclass h2(ContainerElement):0\\nclass h3(ContainerElement):0\\nclass h4(ContainerElement):0\\nclass h5(ContainerElement):0\\nclass h6(ContainerElement):0\\nclass head(ContainerElement):0\\nclass header(ContainerElement):0\\nclass hgroup(ContainerElement):0\\nclass hr(Element):0\\nclass html(ContainerElement):0\\nclass i(ContainerElement):0\\nclass iframe(ContainerElement):0\\nclass img(Element):0\\nclass input_(Element):0\\nclass ins(ContainerElement):0\\nclass kbd(ContainerElement):0\\nclass label(ContainerElement):0\\nclass legend(ContainerElement):0\\nclass li(ContainerElement):0\\nclass link(Element):0\\nclass main(ContainerElement):0\\nclass map_(ContainerElement):0\\nclass mark(ContainerElement):0\\nclass menu(ContainerElement):0\\nclass meta(ContainerElement):0\\nclass meter(ContainerElement):0\\nclass nav(ContainerElement):0\\nclass object_(ContainerElement):0\\nclass ol(ContainerElement):0\\nclass optgroup(ContainerElement,HasOptions):0\\nclass option(ContainerElement):0\\nclass output(ContainerElement):0\\nclass p(ContainerElement):0\\nclass param(ContainerElement):0\\nclass picture(ContainerElement):0\\nclass pre(ContainerElement):0\\nclass progress(ContainerElement):0\\nclass q(ContainerElement):0\\nclass s(ContainerElement):0\\nclass script(ContainerElement):0\\nclass section(ContainerElement):0\\nclass select(ContainerElement,HasOptions):0\\nclass small(ContainerElement):0\\nclass source(Element):0\\nclass span(ContainerElement):0\\nclass strong(ContainerElement):0\\nclass style(ContainerElement):0\\nclass sub(ContainerElement):0\\nclass summary(ContainerElement):0\\nclass sup(ContainerElement):0\\nclass table(ContainerElement):0\\nclass tbody(ContainerElement):0\\nclass td(ContainerElement):0\\nclass template(ContainerElement):0\\nclass textarea(ContainerElement):0\\nclass tfoot(ContainerElement):0\\nclass th(ContainerElement):0\\nclass thead(ContainerElement):0\\nclass time(ContainerElement):0\\nclass title(ContainerElement):0\\nclass tr(ContainerElement):0\\nclass track(Element):0\\nclass u(ContainerElement):0\\nclass ul(ContainerElement):0\\nclass var(ContainerElement):0\\nclass video(ContainerElement):\\n\\tdef snap(E,to=_A,width=_A,height=_A):\\n\\t\\tH='CANVAS';G='Element to snap to must be a canvas.';C=height;B=width;A=to;B=B if B is not _A else E.videoWidth;C=C if C is not _A else E.videoHeight\\n\\t\\tif A is _A:A=canvas(width=B,height=C)\\n\\t\\telif isinstance(A,Element):\\n\\t\\t\\tif A.tag!='canvas':D=G;raise TypeError(D)\\n\\t\\telif getattr(A,'tagName','')==H:A=canvas(dom_element=A)\\n\\t\\telif isinstance(A,str):\\n\\t\\t\\tF=document.querySelectorAll(A)\\n\\t\\t\\tif F.length==0:D='No element with selector {to} to snap to.';raise TypeError(D)\\n\\t\\t\\tif F[0].tagName!=H:D=G;raise TypeError(D)\\n\\t\\t\\tA=canvas(dom_element=F[0])\\n\\t\\tA.draw(E,B,C);return A\\nclass wbr(Element):0\\nELEMENT_CLASSES=[a,abbr,address,area,article,aside,audio,b,base,blockquote,body,br,button,canvas,caption,cite,code,col,colgroup,data,datalist,dd,del_,details,dialog,div,dl,dt,em,embed,fieldset,figcaption,figure,footer,form,h1,h2,h3,h4,h5,h6,head,header,hgroup,hr,html,i,iframe,img,input_,ins,kbd,label,legend,li,link,main,map_,mark,menu,meta,meter,nav,object_,ol,optgroup,option,output,p,param,picture,pre,progress,q,s,script,section,select,small,source,span,strong,style,sub,summary,sup,table,tbody,td,template,textarea,tfoot,th,thead,time,title,tr,track,u,ul,var,video,wbr]\\nElement.register_element_classes(ELEMENT_CLASSES)\\nclass Page:\\n\\tdef __init__(A):A.html=Element.wrap_dom_element(document.documentElement);A.body=Element.wrap_dom_element(document.body);A.head=Element.wrap_dom_element(document.head)\\n\\tdef __getitem__(A,selector):return A.find(selector)\\n\\t@property\\n\\tdef title(self):return document.title\\n\\t@title.setter\\n\\tdef title(self,value):document.title=value\\n\\tdef append(A,*B):A.body.append(*B)\\n\\tdef find(A,selector):return ElementCollection.wrap_dom_elements(document.querySelectorAll(selector))\\npage=Page()\",\n    \"websocket.py\": \"import js\\nfrom pyscript.ffi import create_proxy\\nfrom pyscript.util import as_bytearray\\ncode='code'\\nprotocols='protocols'\\nreason='reason'\\nmethods=['onclose','onerror','onmessage','onopen']\\nclass EventMessage:\\n\\tdef __init__(A,event):A._event=event\\n\\tdef __getattr__(B,attr):\\n\\t\\tA=getattr(B._event,attr)\\n\\t\\tif attr=='data'and not isinstance(A,str):\\n\\t\\t\\tif hasattr(A,'to_py'):return A.to_py()\\n\\t\\t\\treturn memoryview(as_bytearray(A))\\n\\t\\treturn A\\nclass WebSocket:\\n\\tCONNECTING=0;OPEN=1;CLOSING=2;CLOSED=3\\n\\tdef __init__(E,**A):\\n\\t\\tD=A['url']\\n\\t\\tif protocols in A:B=js.WebSocket.new(D,A[protocols])\\n\\t\\telse:B=js.WebSocket.new(D)\\n\\t\\tobject.__setattr__(E,'_ws',B)\\n\\t\\tfor C in methods:\\n\\t\\t\\tif C in A:setattr(B,C,create_proxy(A[C]))\\n\\tdef __getattr__(A,attr):return getattr(A._ws,attr)\\n\\tdef __setattr__(B,attr,value):\\n\\t\\tC=value;A=attr\\n\\t\\tif A in methods:D=lambda e:C(EventMessage(e));setattr(B._ws,A,create_proxy(D))\\n\\t\\telse:setattr(B._ws,A,C)\\n\\tdef close(B,**A):\\n\\t\\tif code in A and reason in A:B._ws.close(A[code],A[reason])\\n\\t\\telif code in A:B._ws.close(A[code])\\n\\t\\telse:B._ws.close()\\n\\tdef send(B,data):\\n\\t\\tA=data\\n\\t\\tif isinstance(A,str):B._ws.send(A)\\n\\t\\telse:\\n\\t\\t\\tC=js.Uint8Array.new(len(A))\\n\\t\\t\\tfor(D,E)in enumerate(A):C[D]=E\\n\\t\\t\\tB._ws.send(C)\",\n    \"workers.py\": \"import js as _js\\nfrom polyscript import workers as _workers\\n_get=_js.Reflect.get\\ndef _set(script,name,value=''):script.setAttribute(name,value)\\nclass _ReadOnlyProxy:\\n\\tdef __getitem__(A,name):return _get(_workers,name)\\n\\tdef __getattr__(A,name):return _get(_workers,name)\\nworkers=_ReadOnlyProxy()\\nasync def create_named_worker(src='',name='',config=None,type='py'):\\n\\tC=name;B=config;from json import dumps\\n\\tif not src:D='Named workers require src';raise ValueError(D)\\n\\tif not C:D='Named workers require a name';raise ValueError(D)\\n\\tA=_js.document.createElement('script');A.type=type;A.src=src;_set(A,'worker');_set(A,'name',C)\\n\\tif B:_set(A,'config',isinstance(B,str)and B or dumps(B))\\n\\t_js.document.body.append(A);return await workers[C]\"\n  }\n};\n","import { typedSet } from \"type-checked-collections\";\nimport { dedent } from \"polyscript/exports\";\nimport toJSONCallback from \"to-json-callback\";\n\nimport { stdlib, optional } from \"./stdlib.js\";\n\nexport const main = (name) => hooks.main[name];\nexport const worker = (name) => hooks.worker[name];\n\nconst code = (hooks, branch, key, lib) => {\n    hooks[key] = () => {\n        const arr = lib ? [lib] : [];\n        arr.push(...branch(key));\n        return arr.map(dedent).join(\"\\n\");\n    };\n};\n\nexport const codeFor = (branch, type) => {\n    const pylib = type === \"mpy\" ? stdlib.replace(optional, \"\") : stdlib;\n    const hooks = {};\n    code(hooks, branch, `codeBeforeRun`, pylib);\n    code(hooks, branch, `codeBeforeRunAsync`, pylib);\n    code(hooks, branch, `codeAfterRun`);\n    code(hooks, branch, `codeAfterRunAsync`);\n    return hooks;\n};\n\nexport const createFunction = (self, name) => {\n    const cbs = [...worker(name)];\n    if (cbs.length) {\n        const cb = toJSONCallback(\n            self[`_${name}`] ||\n                (name.endsWith(\"Async\")\n                    ? async (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) await cb(wrap, xworker);\n                      }\n                    : (wrap, xworker, ...cbs) => {\n                          for (const cb of cbs) cb(wrap, xworker);\n                      }),\n        );\n        const a = cbs.map(toJSONCallback).join(\", \");\n        return Function(`return(w,x)=>(${cb})(w,x,...[${a}])`)();\n    }\n};\n\nconst SetFunction = typedSet({ typeof: \"function\" });\nconst SetString = typedSet({ typeof: \"string\" });\n\nexport const inputFailure = `\n    import builtins\n    def input(prompt=\"\"):\n        raise Exception(\"\\\\n           \".join([\n            \"input() doesn't work when PyScript runs in the main thread.\",\n            \"Consider using the worker attribute: https://pyscript.github.io/docs/2023.11.2/user-guide/workers/\"\n        ]))\n\n    builtins.input = input\n    del builtins\n    del input\n`;\n\nexport const hooks = {\n    main: {\n        /** @type {Set<function>} */\n        onWorker: new SetFunction(),\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString([inputFailure]),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n    worker: {\n        /** @type {Set<function>} */\n        onReady: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onBeforeRunAsync: new SetFunction([\n            ({ interpreter }) => {\n                interpreter.registerJsModule(\"_pyscript\", {\n                    // cannot be imported from fs.js\n                    // because this code is stringified\n                    fs: {\n                        ERROR: \"storage permissions not granted\",\n                        NAMESPACE: \"@pyscript.fs\",\n                    },\n                    interpreter,\n                });\n            },\n        ]),\n        /** @type {Set<function>} */\n        onAfterRun: new SetFunction(),\n        /** @type {Set<function>} */\n        onAfterRunAsync: new SetFunction(),\n        /** @type {Set<string>} */\n        codeBeforeRun: new SetString(),\n        /** @type {Set<string>} */\n        codeBeforeRunAsync: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRun: new SetString(),\n        /** @type {Set<string>} */\n        codeAfterRunAsync: new SetString(),\n    },\n};\n","// lazy loaded on-demand codemirror related files\nexport default {\n    get core() {\n        return import(/* webpackIgnore: true */ \"../3rd-party/codemirror.js\");\n    },\n    get state() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_state.js\"\n        );\n    },\n    get python() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_lang-python.js\"\n        );\n    },\n    get language() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_language.js\"\n        );\n    },\n    get view() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_view.js\"\n        );\n    },\n    get commands() {\n        return import(\n            /* webpackIgnore: true */ \"../3rd-party/codemirror_commands.js\"\n        );\n    },\n};\n","/*! (c) PyScript Development Team */\n\nimport stickyModule from \"sticky-module\";\nimport \"@ungap/with-resolvers\";\n\nimport {\n    INVALID_CONTENT,\n    Hook,\n    XWorker,\n    assign,\n    dedent,\n    define,\n    defineProperty,\n    dispatch,\n    isSync,\n    queryTarget,\n    unescape,\n    whenDefined,\n} from \"polyscript/exports\";\n\nimport \"./all-done.js\";\nimport TYPES from \"./types.js\";\nimport { configs, relative_url } from \"./config.js\";\nimport sync from \"./sync.js\";\nimport bootstrapNodeAndPlugins from \"./plugins-helper.js\";\nimport { ErrorCode } from \"./exceptions.js\";\nimport { robustFetch as fetch, getText } from \"./fetch.js\";\nimport {\n    hooks,\n    main,\n    worker,\n    codeFor,\n    createFunction,\n    inputFailure,\n} from \"./hooks.js\";\nimport * as fs from \"./fs.js\";\n\nimport codemirror from \"./plugins/codemirror.js\";\nexport { codemirror };\n\nimport { stdlib, optional } from \"./stdlib.js\";\nexport { stdlib, optional, inputFailure };\n\nexport const donkey = (options) =>\n    import(/* webpackIgnore: true */ \"./plugins/donkey.js\").then((module) =>\n        module.default(options),\n    );\n\n// generic helper to disambiguate between custom element and script\nconst isScript = ({ tagName }) => tagName === \"SCRIPT\";\n\n// Used to create either Pyodide or MicroPython workers\n// with the PyScript module available within the code\nconst [PyWorker, MPWorker] = [...TYPES.entries()].map(\n    ([TYPE, interpreter]) =>\n        /**\n         * A `Worker` facade able to bootstrap on the worker thread only a PyScript module.\n         * @param {string} file the python file to run ina worker.\n         * @param {{config?: string | object, async?: boolean}} [options] optional configuration for the worker.\n         * @returns {Promise<Worker & {sync: object}>}\n         */\n        async function PyScriptWorker(file, options) {\n            await configs.get(TYPE).plugins;\n            const xworker = XWorker.call(\n                new Hook(null, hooked.get(TYPE)),\n                file,\n                {\n                    ...options,\n                    type: interpreter,\n                },\n            );\n            assign(xworker.sync, sync);\n            return xworker.ready;\n        },\n);\n\n// avoid multiple initialization of the same library\nconst [\n    {\n        PyWorker: exportedPyWorker,\n        MPWorker: exportedMPWorker,\n        hooks: exportedHooks,\n        config: exportedConfig,\n        whenDefined: exportedWhenDefined,\n    },\n    alreadyLive,\n] = stickyModule(\"@pyscript/core\", {\n    PyWorker,\n    MPWorker,\n    hooks,\n    config: {},\n    whenDefined,\n});\n\nexport {\n    TYPES,\n    relative_url,\n    exportedPyWorker as PyWorker,\n    exportedMPWorker as MPWorker,\n    exportedHooks as hooks,\n    exportedConfig as config,\n    exportedWhenDefined as whenDefined,\n};\n\nexport const offline_interpreter = (config) =>\n    config?.interpreter && relative_url(config.interpreter);\n\nconst hooked = new Map();\n\nfor (const [TYPE, interpreter] of TYPES) {\n    // avoid any dance if the module already landed\n    if (alreadyLive) break;\n\n    const dispatchDone = (element, isAsync, result) => {\n        if (isAsync) result.then(() => dispatch(element, TYPE, \"done\"));\n        else dispatch(element, TYPE, \"done\");\n    };\n\n    const { config, configURL, plugins, error } = configs.get(TYPE);\n\n    // create a unique identifier when/if needed\n    let id = 0;\n    const getID = (prefix = TYPE) => `${prefix}-${id++}`;\n\n    /**\n     * Given a generic DOM Element, tries to fetch the 'src' attribute, if present.\n     * It either throws an error if the 'src' can't be fetched or it returns a fallback\n     * content as source.\n     */\n    const fetchSource = async (tag, io, asText) => {\n        if (tag.hasAttribute(\"src\")) {\n            try {\n                return await fetch(tag.getAttribute(\"src\")).then(getText);\n            } catch (error) {\n                io.stderr(error);\n            }\n        }\n\n        if (asText) return dedent(tag.textContent);\n\n        const code = dedent(unescape(tag.innerHTML));\n        console.warn(\n            `Deprecated: use <script type=\"${TYPE}\"> for an always safe content parsing:\\n`,\n            code,\n        );\n        return code;\n    };\n\n    // register once any interpreter\n    let alreadyRegistered = false;\n\n    // allows lazy element features on code evaluation\n    let currentElement;\n\n    const registerModule = ({ XWorker, interpreter, io }) => {\n        // avoid multiple registration of the same interpreter\n        if (alreadyRegistered) return;\n        alreadyRegistered = true;\n\n        // automatically use the pyscript stderr (when/if defined)\n        // this defaults to console.error\n        function PyWorker(...args) {\n            const worker = XWorker(...args);\n            worker.onerror = ({ error }) => io.stderr(error);\n            return worker;\n        }\n\n        // enrich the Python env with some JS utility for main\n        interpreter.registerJsModule(\"_pyscript\", {\n            PyWorker,\n            fs,\n            interpreter,\n            js_import: (...urls) => Promise.all(urls.map((url) => import(url))),\n            get target() {\n                return isScript(currentElement)\n                    ? currentElement.target.id\n                    : currentElement.id;\n            },\n        });\n    };\n\n    // define the module as both `<script type=\"py\">` and `<py-script>`\n    // but only if the config didn't throw an error\n    if (!error) {\n        // ensure plugins are bootstrapped already before custom type definition\n        // NOTE: we cannot top-level await in here as plugins import other utilities\n        //       from core.js itself so that custom definition should not be blocking.\n        plugins().then(() => {\n            // possible early errors sent by polyscript\n            const errors = new Map();\n\n            // specific main and worker hooks\n            const hooks = {\n                main: {\n                    ...codeFor(main, TYPE),\n                    async onReady(wrap, element) {\n                        registerModule(wrap);\n\n                        // allows plugins to do whatever they want with the element\n                        // before regular stuff happens in here\n                        for (const callback of main(\"onReady\"))\n                            await callback(wrap, element);\n\n                        // now that all possible plugins are configured,\n                        // bail out if polyscript encountered an error\n                        if (errors.has(element)) {\n                            let { message } = errors.get(element);\n                            errors.delete(element);\n                            const clone = message === INVALID_CONTENT;\n                            message = `(${ErrorCode.CONFLICTING_CODE}) ${message} for `;\n                            message += element.cloneNode(clone).outerHTML;\n                            wrap.io.stderr(message);\n                            return;\n                        }\n\n                        if (isScript(element)) {\n                            const isAsync = !isSync(element);\n                            const target = element.getAttribute(\"target\");\n                            const show = target\n                                ? queryTarget(element, target)\n                                : document.createElement(\"script-py\");\n\n                            if (!target) {\n                                const { head, body } = document;\n                                if (head.contains(element)) body.append(show);\n                                else element.after(show);\n                            }\n                            if (!show.id) show.id = getID();\n\n                            // allows the code to retrieve the target element via\n                            // document.currentScript.target if needed\n                            defineProperty(element, \"target\", { value: show });\n\n                            // notify before the code runs\n                            dispatch(element, TYPE, \"ready\");\n                            dispatchDone(\n                                element,\n                                isAsync,\n                                wrap[`run${isAsync ? \"Async\" : \"\"}`](\n                                    await fetchSource(element, wrap.io, true),\n                                ),\n                            );\n                        } else {\n                            // resolve PyScriptElement to allow connectedCallback\n                            element._wrap.resolve(wrap);\n                        }\n                        console.debug(\"[pyscript/main] PyScript Ready\");\n                    },\n                    onWorker(_, xworker) {\n                        assign(xworker.sync, sync);\n                        for (const callback of main(\"onWorker\"))\n                            callback(_, xworker);\n                    },\n                    onBeforeRun(wrap, element) {\n                        currentElement = element;\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRun\",\n                        );\n                    },\n                    onBeforeRunAsync(wrap, element) {\n                        currentElement = element;\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onBeforeRunAsync\",\n                        );\n                    },\n                    onAfterRun(wrap, element) {\n                        bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRun\",\n                        );\n                    },\n                    onAfterRunAsync(wrap, element) {\n                        return bootstrapNodeAndPlugins(\n                            main,\n                            wrap,\n                            element,\n                            \"onAfterRunAsync\",\n                        );\n                    },\n                },\n                worker: {\n                    ...codeFor(worker, TYPE),\n                    // these are lazy getters that returns a composition\n                    // of the current hooks or undefined, if no hook is present\n                    get onReady() {\n                        return createFunction(this, \"onReady\", true);\n                    },\n                    get onBeforeRun() {\n                        return createFunction(this, \"onBeforeRun\", false);\n                    },\n                    get onBeforeRunAsync() {\n                        return createFunction(this, \"onBeforeRunAsync\", true);\n                    },\n                    get onAfterRun() {\n                        return createFunction(this, \"onAfterRun\", false);\n                    },\n                    get onAfterRunAsync() {\n                        return createFunction(this, \"onAfterRunAsync\", true);\n                    },\n                },\n            };\n\n            hooked.set(TYPE, hooks);\n\n            define(TYPE, {\n                config,\n                configURL,\n                interpreter,\n                hooks,\n                env: `${TYPE}-script`,\n                version: offline_interpreter(config),\n                onerror(error, element) {\n                    errors.set(element, error);\n                },\n            });\n\n            customElements.define(\n                `${TYPE}-script`,\n                class extends HTMLElement {\n                    constructor() {\n                        assign(super(), {\n                            _wrap: Promise.withResolvers(),\n                            srcCode: \"\",\n                            executed: false,\n                        });\n                    }\n                    get id() {\n                        return super.id || (super.id = getID());\n                    }\n                    set id(value) {\n                        super.id = value;\n                    }\n                    async connectedCallback() {\n                        if (!this.executed) {\n                            this.executed = true;\n                            const isAsync = !isSync(this);\n                            const { io, run, runAsync } = await this._wrap\n                                .promise;\n                            this.srcCode = await fetchSource(\n                                this,\n                                io,\n                                !this.childElementCount,\n                            );\n                            this.replaceChildren();\n                            this.style.display = \"block\";\n                            dispatch(this, TYPE, \"ready\");\n                            dispatchDone(\n                                this,\n                                isAsync,\n                                (isAsync ? runAsync : run)(this.srcCode),\n                            );\n                        }\n                    }\n                },\n            );\n        });\n    }\n\n    // export the used config without allowing leaks through it\n    exportedConfig[TYPE] = structuredClone(config);\n}\n"],"names":["stickyModule","name","value","global","globalThis","symbol","Symbol","for","known","Object","defineProperty","Promise","withResolvers","a","b","c","this","resolve","reject","promise","io","WeakMap","stdio","init","context","console","localIO","buffered","stderr","error","bind","stdout","log","args","get","engine","interpreter","set","decoder","TextDecoder","callback","EOL","buffer","maybeUI8","Uint8Array","decode","splice","push","$$","css","root","document","querySelectorAll","$x","path","xpath","XPathEvaluator","createExpression","evaluate","XPathResult","ORDERED_NODE_SNAPSHOT_TYPE","result","i","snapshotLength","snapshotItem","d","getOwnPropertyDescriptors","Response","prototype","isFunction","handler","p","k","hasOwnProperty","then","r","bypass","direct","fetch$1","input","Proxy","fetch","assign","STORAGE","READONLY","READWRITE","defaultOptions","durability","prefix","target","IDBMap","EventTarget","db","options","transaction","what","how","t","onsuccess","onerror","objectStore","constructor","super","indexedDB","open","onupgradeneeded","objectStoreNames","length","createObjectStore","oncomplete","event","dispatchEvent","boundDispatch","key","startsWith","type","message","isTrusted","Event","close","size","store","count","clear","delete","entries","keys","all","map","forEach","call","has","getKey","getAllKeys","put","values","toStringTag","IDBMapSync","Map","queue","sync","workers","ignore","Set","workersHandler","freeze","_","w","env","self","deserialize","serialized","$","as","out","index","unpair","arr","object","Date","source","flags","RegExp","add","BigInt","DataView","deserializer","EMPTY","toString","typeOf","asString","slice","includes","shouldSkip","TYPE","serialize","json","lossy","strict","pair","entry","TypeError","spread","valueOf","toJSON","toISOString","serializer","parse","$parse","stringify","$stringify","JSON","str","any","OWN_KEYS","DESTRUCT","DESTROY","CHANNEL","MAIN","WORKER","ArrayBuffer","Atomics","$Atomics","isArray","Array","create","getPrototypeOf","TypedArray","Int32Array","id","views","extend","Class","SharedArrayBuffer","rest","ignoreList","WeakSet","ignorePatch","isChannel","channel","data","yes","at","stopImmediatePropagation","preventDefault","isObject","transferred","transferViews","transfer","visited","waitAsyncPatch","Worker","onmessage","postMessage","actionWait","view","currentTarget","origin","lastEventId","ports","MessageEvent","dispatch","polyfill","asModule","url","waitAsync","crypto","randomUUID","addListener","addEventListener","register","serviceWorker","s","sw","done","uid","join","getRegistration","ready","controller","installing","waiting","active","state","location","reload","once","notify","worker","getData","waitAsyncPoly","URL","href","navigator","ACTION","_view","_id","_index","actionNotify","postData","BYTES_PER_ELEMENT","I32_BYTES","UI16_BYTES","Uint16Array","buffers","seppuku","invoke","i32View","isSync","transform","deadlock","timer","setTimeout","warn","pop","sb","clearTimeout","bytes","ui16a","sub","subarray","coincident$1","waitLength","async","results","actionLength","$Worker","proxy","details","cb","createProxy","Error","charCodeAt","actionFill","ARRAY","FUNCTION","NULL","NUMBER","OBJECT","STRING","SYMBOL","UNDEFINED","numeric","fromEntries","ownKeys","Reflect","filter","toSymbol","keyFor","registry","FinalizationRegistry","onGarbageCollected","held","debug","String","nullHandler","hold","return","token","eventsHandler","listener","concat","proxyMain","__worker__","drop","ids","had","heap","proxies","onGC","ref","toEntry","fromEntry","numericTYPE","fn","deref","methods","method","handleEvent","WeakRef","fromSymbol","asEntry","asImport","import","globals","TRAP","descriptor","re","place","q","f","esm","exports","coincident","terminate","require","run","code","Function","dummy","module","registerJSModule","runAsync","runEvent","writeFile","dedent","string","l","arguments","content","line","split","trim","test","replace","$1","es","unes","cape","m","tpl","unescape","un","defineProperties","absoluteURL","base","fixedRelative","nodeInfo","node","tag","tagName","CE","CustomEvent","bubbles","detail","createResolved","config","dropLine0","createOverload","before","after","js_modules","jsModules","JSModules","field","modules","registerJSModules","importJS","importCSS","onload","querySelector","head","append","createElement","rel","isCSS","pathname","element","getAttribute","RUNNING_IN_WORKER","window","FS","PATH","PATH_FS","absPath","dirPath","dirname","mkdirTree","canOwn","tree","current","branch","mkdir","cwd","joinPaths","parts","res","part","fetchBuffer","baseURL","arrayBuffer","fetchPaths","config_fetch","files","to_file","from","undefined","endsWith","flatMap","to_folder","file","filename","lastIndexOf","calculateFetchPaths","fillName","dest","parseTemplate","src","SyntaxError","fetchFiles","config_files","targets","sourceDest","calculateFilesPaths","fetchJSModules","main","promises","createProgress","loader","loadProgress","progress","lazy_py_modules","packages","pyimport","storage","registerJsModule","getFormat","runPython","runPythonAsync","mip","TextEncoder","encode","toml","text","syncfs","direction","err","initializeNativeFS","MEMFS","filesystems","nativeFSAsync","DIR_MODE","FILE_MODE","mount","opts","fileSystemHandle","apply","populate","local","getLocalSet","remote","getRemoteSet","dst","reconcile","e","isRealDir","toAbsolute","join2","check","readdir","mountpoint","stat","isDir","mode","timestamp","mtime","handles","getFsHandles","handle","kind","getFile","lastModifiedDate","loadLocalEntry","lookupPath","isFile","contents","getFileDataAsTypedArray","storeLocalEntry","chmod","utime","removeLocalEntry","rmdir","unlink","loadRemoteEntry","storeRemoteEntry","parentDirHandle","getFileHandle","basename","getDirectoryHandle","writable","createWritable","write","removeRemoteEntry","removeEntry","total","e2","getTime","sort","remove","reverse","relPath","normalize","substring","NATIVEFS_ASYNC","follow_mount","isMountpoint","ensureMountPathExists","dirHandle","collect","curDirHandle","relativePath","micropython","version","loadMicroPython","linebuffer","py_imports","importPackages","mountNativeFS","_module","PyProxy","toJs","fs","format","extractDir","blob","Blob","BlobReader","Uint8ArrayWriter","ZipReader","zipReader","getEntries","directory","TMP","mpyPackage","install","toJsOptions","dict_converter","overrideFunction","overrideMethod","overridden","applyOverride","destroy","patchArgs","copy","indexURLs","pyodide","loadPyodide","experimental_create_proxy","index_urls","indexURL","save","packages_cache","lockFileURL","createObjectURL","revokeObjectURL","unpackArchive","ffi","_log","loadPackage","micropip","set_index_urls","keep_going","frozen","jsType","ruby_wasm_wasi","experimental","DefaultRubyVM","WebAssembly","compile","vm","eval","evalAsync","wrap","wasmoon","LuaFactory","LuaLibraries","createEngine","getTable","Base","setField","doStringSync","doString","cmodule","writeFileShim","shelter","output","captureR","webr","WebR","Shelter","evalRVoid","configs","selectors","prefixes","getConfigURLAndType","configURL","resolveConfig","absolute","parseString","getRuntime","getRuntimeID","toJSONCallback","isAsync","beforeRun","afterRun","js","patch","resolved","polluteJS","patched","Hook$1","hooks","onWorker","jsHooks","codeHooks","xworker","service_worker","isHook","Hook","resolver","bootstrap","configurable","isError","INVALID_CONTENT","workerURL","attributes","childElementCount","innerHTML","localName","textContent","queryTarget","script","idOrSelector","parent","parentNode","getRoot","getElementById","targetDescriptor","handled","interpreters","getValue","getDetails","runtime","XWorker","$xworker","closest","body","wn","versionValue","configValue","workerName","targetValue","currentScript","execute","queueMicrotask","awaitInterpreter","available","ownerElement","el","addAllListeners","disabled","CUSTOM_SELECTORS","customObserver","types","waitList","handleCustomType","selector","matches","v","cfg","o","u","XW","custom","workerError","defaultRegistry","hook","structuredClone","suffix","beforeCB","afterCB","onReady","dontBotherCount","whenDefined","define","alreadyLive","$customObserver","dontBother","indexOf","$whenDefined","$env","$Hook","$XWorker","mo","MutationObserver","records","attributeName","addedNodes","nodeType","hasAttribute","shouldHandle","observe","childList","subtree","attachShadow","Element","TYPES","waitForIt","allPlugins","codemirror","codemirror$1","donkey","ErrorCode","CONFLICTING_CODE","BAD_CONFIG","FETCH_ERROR","FETCH_UNAUTHORIZED_ERROR","FETCH_FORBIDDEN_ERROR","FETCH_NOT_FOUND_ERROR","FETCH_SERVER_ERROR","FETCH_UNAVAILABLE_ERROR","UserError","errorCode","messageType","FetchError","getText","response","robustFetch","errMsg","ok","errorMsg","status","statusText","configDetails","ext","expected","badURL","conflictError","reason","relative_url","syntaxError","plugins","parsed","pyElement","pyConfigs","attrConfigs","some","toBeAwaited","notOnDOM","default","stop","NAMESPACE","ERROR","idb","getFileSystemDirectoryHandle","hint","startIn","transient","showDirectoryPicker","requestPermission","userActivation","isActive","dialog","className","cancel","appendChild","showModal","is_pyterminal","sleep","seconds","bootstrapNodeAndPlugins","validator","checks","C","failure","typedSet","fail","typeof","instanceof","checkFail","createSet","python","paths","array","_path","literal","pyscript","stdlib","optional","lib","codeFor","pylib","createFunction","cbs","SetFunction","SetString","inputFailure","onBeforeRun","onBeforeRunAsync","onAfterRun","onAfterRunAsync","codeBeforeRun","codeBeforeRunAsync","codeAfterRun","codeAfterRunAsync","core","language","n","x","commands","isScript","PyWorker","MPWorker","hooked","exportedPyWorker","exportedMPWorker","exportedHooks","exportedConfig","exportedWhenDefined","offline_interpreter","dispatchDone","getID","fetchSource","asText","currentElement","alreadyRegistered","registerModule","js_import","urls","errors","clone","cloneNode","outerHTML","show","contains","_wrap","customElements","HTMLElement","srcCode","executed","connectedCallback","replaceChildren","style","display"],"mappings":"AASA,MAAMA,EAAe,CAACC,EAAMC,EAAOC,EAASC,cAC1C,MAAMC,EAASC,OAAOC,IAAIN,GACpBO,EAAQH,KAAUF,EACxB,MAAO,CACLK,EACEL,EAAOE,GACPI,OAAOC,eAAeP,EAAQE,EAAQ,CAAEH,UAASG,GACnDG,EACD,ECjBHG,QAAQC,gBAAkBD,QAAQC,cAAgB,WAChD,IAAIC,EAAGC,EAAGC,EAAI,IAAIC,MAAK,SAAUC,EAASC,GACxCL,EAAII,EACJH,EAAII,CACR,IACE,MAAO,CAACD,QAASJ,EAAGK,OAAQJ,EAAGK,QAASJ,EAC1C,GCJO,MAAMK,EAAK,IAAIC,QACTC,EAASC,IAClB,MAAMC,EAAUD,GAAQE,QAClBC,EAAU,CAGZC,WACAC,QAASJ,EAAQI,QAAUH,QAAQI,OAAOC,KAAKN,GAC/CO,QAASP,EAAQO,QAAUN,QAAQO,KAAKF,KAAKN,IAEjD,MAAO,CACHI,OAAQ,IAAIK,IAASP,EAAQE,UAAUK,GACvCF,OAAQ,IAAIE,IAASP,EAAQK,UAAUE,GACvC,SAAMC,CAAIC,GACN,MAAMC,QAAoBD,EAE1B,OADAf,EAAGiB,IAAID,EAAaV,GACbU,CACV,EACJ,EAGCE,EAAU,IAAIC,YACPZ,EAAW,CAACa,EAAUC,EAAM,MACrC,MAAMC,EAAS,GACf,OAAQC,IACJ,GAAIA,aAAoBC,WACpB,IAAK,MAAM7B,KAAK4B,EACR5B,IAAM0B,EACND,EAASF,EAAQO,OAAO,IAAID,WAAWF,EAAOI,OAAO,MAErDJ,EAAOK,KAAKhC,QAOpByB,EAASG,EACrB,CACK,EC3BCK,EAAK,CAACC,EAAKC,EAAOC,WAAa,IAAID,EAAKE,iBAAiBH,IAQzDI,EAAK,CAACC,EAAMJ,EAAOC,YACvB,MACMI,GADa,IAAKC,gBAAgBC,iBAAiBH,GAChCI,SAASR,EAAMS,YAAYC,4BAC9CC,EAAS,GACf,IAAK,IAAIC,EAAI,GAAGC,eAACA,GAAkBR,EAAOO,EAAIC,EAAgBD,IAC5DD,EAAOd,KAAKQ,EAAMS,aAAaF,IACjC,OAAOD,CAAM,ECnBTI,EAAIxD,OAAOyD,0BAA0BC,SAASC,WAE9CC,EAAanE,GAA0B,mBAAVA,EAQ7BoE,EAAU,CACZpC,IAAK,CAACqC,EAAGC,IAAMP,EAAEQ,eAAeD,GAPrB,EAACD,EAAGC,GAAKtC,MAAKhC,WAAYgC,IAAQmC,EAAWnE,GAC5CqE,EAAEG,MAAKC,GAAKA,EAAEH,KACd,IAAIvC,IAASsC,EAAEG,MAAKC,GAAKA,EAAEH,MAAMvC,KAKR2C,CAAOL,EAAGC,EAAGP,EAAEO,IAHzC,EAACD,EAAGrE,IAAUmE,EAAWnE,GAASA,EAAM4B,KAAKyC,GAAKrE,EAGH2E,CAAON,EAAGA,EAAEC,KAQ1E,IAAAM,EAAe,CAACC,KAAUxD,IAAS,IAAIyD,MAAMC,MAAMF,KAAUxD,GAAO+C,GC5BpE,MAAQY,OAAAA,GAAWzE,OAEb0E,EAAU,UACVC,EAAW,WACXC,EAAY,YAWZC,EAAiB,CAAEC,WAAY,UAAWC,OAAQ,UAOlD3B,EAAS,EAAG4B,QAAU5B,aAAeA,EAE5B,MAAM6B,UAAeC,YAEEC,GACPC,GACPL,GAQtB,OAAMM,CAAaC,EAAMC,GACvB,MACMC,SADWjF,MAAK4E,GACTE,YAAYX,EAASa,EAAKhF,MAAK6E,GAC5C,OAAO,IAAIlF,SAAQ,CAACuF,EAAWC,IAAYjB,EACzCa,EAAKE,EAAEG,YAAYjB,IACnB,CACEe,YACAC,aAGR,CAME,WAAAE,CACEpG,GACAsF,WACEA,EAAaD,EAAeC,WAAUC,OACtCA,EAASF,EAAeE,QACtBF,GAEJgB,QACAtF,MAAKwE,EAAUA,EACfxE,MAAK6E,EAAW,CAAEN,cAClBvE,MAAK4E,EAAM,IAAIjF,SAAQ,CAACM,EAASC,KAC/BgE,EACEqB,UAAUC,KAAK,GAAGxF,MAAKwE,KAAWvF,KAClC,CACE,eAAAwG,EAAkBhB,QAAQ5B,OAAEA,EAAMiC,YAAEA,KAC7BjC,EAAO6C,iBAAiBC,QAC3B9C,EAAO+C,kBAAkBzB,GAC3BW,EAAYe,WAAa,IAAM5F,EAAQ4C,EACxC,EACD,SAAAqC,CAAUY,GACR7F,EAAQ4C,EAAOiD,GAChB,EACD,OAAAX,CAAQW,GACN5F,EAAO4F,GACP9F,KAAK+F,cAAcD,EACpB,GAEJ,IACApC,MAAKb,IACN,MAAMmD,EAAgBhG,KAAK+F,cAAcjF,KAAKd,MAC9C,IAAK,MAAMiG,KAAOpD,EACZoD,EAAIC,WAAW,QACjBrD,EAAOoD,GAAOD,GAElB,OAAOnD,CAAM,GAEnB,CAOE,aAAAkD,CAAcD,GACZ,MAAMK,KAAEA,EAAIC,QAAEA,EAAOC,UAAEA,GAAcP,EACrC,OAAOR,MAAMS,cAEXM,EACEnC,EAAO,IAAIoC,MAAMH,GAAO,CAAEC,YAC1BN,EAER,CAGE,WAAMS,UACGvG,MAAK4E,GAAK2B,OACrB,CAGE,QAAIC,GACF,OAAOxG,MAAK8E,GACV2B,GAASA,EAAMC,SACftC,GACAV,KAAKb,EACX,CAEE,WAAM8D,SACE3G,MAAK8E,GACT2B,GAASA,EAAME,SACftC,EAEN,CAKE,YAAM,CAAO4B,SACLjG,MAAK8E,GACT2B,GAASA,EAAMG,OAAOX,IACtB5B,EAEN,CAKE,aAAMwC,GACJ,MAAMC,QAAa9G,KAAK8G,OACxB,OAAOnH,QAAQoH,IAAID,EAAKE,KAAIf,GAAOjG,KAAKkB,IAAI+E,GAAKvC,MAAKxE,GAAS,CAAC+G,EAAK/G,OACzE,CAME,aAAM+H,CAAQzF,EAAUhB,EAAUR,MAChC,IAAK,MAAOiG,EAAK/G,WAAgBc,KAAK6G,gBAC9BrF,EAAS0F,KAAK1G,EAAStB,EAAO+G,EAAKjG,KAC/C,CAME,SAAMkB,CAAI+E,GAKR,aAJoBjG,MAAK8E,GACvB2B,GAASA,EAAMvF,IAAI+E,IACnB7B,GACAV,KAAKb,EAEX,CAKE,SAAMsE,CAAIlB,GAKR,YAAa,UAJGjG,MAAK8E,GACnB2B,GAASA,EAAMW,OAAOnB,IACtB7B,GACAV,KAAKb,EAEX,CAEE,UAAMiE,GAKJ,aAJmB9G,MAAK8E,GACtB2B,GAASA,EAAMY,cACfjD,GACAV,KAAKb,EAEX,CAME,SAAMxB,CAAI4E,EAAK/G,GAKb,aAJMc,MAAK8E,GACT2B,GAASA,EAAMa,IAAIpI,EAAO+G,IAC1B5B,GAEKrE,IACX,CAEE,YAAMuH,GACJ,MAAMT,QAAa9G,KAAK8G,OACxB,OAAOnH,QAAQoH,IAAID,EAAKE,KAAIf,GAAOjG,KAAKkB,IAAI+E,KAChD,CAEE,IAAK3G,OAAOkI,eACV,OAAOxH,MAAKwE,CAChB,ECxMe,MAAMiD,UAAmBC,IACtCV,GACAW,GACA,WAAAtC,IAAepE,GACbqE,QACAtF,MAAKgH,EAAO,IAAItC,KAAUzD,GAC1BjB,MAAK2H,EAAS3H,MAAKgH,EAAKH,UAAUnD,MAAKmD,IACrC,IAAK,MAAOZ,EAAK/G,KAAU2H,EACzBvB,MAAMjE,IAAI4E,EAAK/G,EAAM,GAE7B,CACE,WAAMqH,SACEvG,MAAK2H,QACL3H,MAAKgH,EAAKT,OACpB,CACE,UAAMqB,SACE5H,MAAK2H,CACf,CACE,KAAAhB,GAEE,OADA3G,MAAK2H,EAAS3H,MAAK2H,EAAOjE,MAAK,IAAM1D,MAAKgH,EAAKL,UACxCrB,MAAMqB,OACjB,CACE,OAAOV,GAEL,OADAjG,MAAK2H,EAAS3H,MAAK2H,EAAOjE,MAAK,IAAM1D,MAAKgH,EAAKJ,OAAOX,KAC/CX,MAAMsB,OAAOX,EACxB,CACE,GAAA5E,CAAI4E,EAAK/G,GAEP,OADAc,MAAK2H,EAAS3H,MAAK2H,EAAOjE,MAAK,IAAM1D,MAAKgH,EAAK3F,IAAI4E,EAAK/G,KACjDoG,MAAMjE,IAAI4E,EAAK/G,EAC1B,EC7BO,MAAM2I,EAAU,IAAI7D,MAAM,IAAI0D,IAAK,CACxCxG,IAAG,CAAC8F,EAAK/H,KACF+H,EAAIG,IAAIlI,IACX+H,EAAI3F,IAAIpC,EAAMU,QAAQC,iBACjBoH,EAAI9F,IAAIjC,MAMb6I,EAAS,IAAIC,IAAI,CAAC,WAAY,cAAe,MAAO,MAAO,WAAY,OAAQ,MAAO,SAE/EC,EAAiB,IAAIhE,MAAMvE,OAAOwI,OAAO,CAAE,GAAG,CAGzD/G,IAAK,CAACgH,EAAGjJ,IAA0B,iBAATA,GAAsB6I,EAAOX,IAAIlI,QAEzD,EADA4I,EAAQ5I,GAAMkB,QAAQuD,MAAKyE,GAAKA,EAAEP,SCXhCQ,EAAsB,iBAATC,KAAoBA,KAAOjJ,WA6EjCkJ,EAAcC,GA3EN,EAACC,EAAGN,KACvB,MAAMO,EAAK,CAACC,EAAKC,KACfH,EAAEnH,IAAIsH,EAAOD,GACNA,GAGHE,EAASD,IACb,GAAIH,EAAErB,IAAIwB,GACR,OAAOH,EAAEtH,IAAIyH,GAEf,MAAOxC,EAAMjH,GAASgJ,EAAES,GACxB,OAAQxC,GACN,KCpBoB,EDqBpB,KCtBoB,EDuBlB,OAAOsC,EAAGvJ,EAAOyJ,GACnB,KCtBoB,EDsBR,CACV,MAAME,EAAMJ,EAAG,GAAIE,GACnB,IAAK,MAAMA,KAASzJ,EAClB2J,EAAI9G,KAAK6G,EAAOD,IAClB,OAAOE,CACf,CACM,KC3BoB,ED2BP,CACX,MAAMC,EAASL,EAAG,CAAE,EAAEE,GACtB,IAAK,MAAO1C,EAAK0C,KAAUzJ,EACzB4J,EAAOF,EAAO3C,IAAQ2C,EAAOD,GAC/B,OAAOG,CACf,CACM,KChCoB,EDiClB,OAAOL,EAAG,IAAIM,KAAK7J,GAAQyJ,GAC7B,KCjCoB,EDiCP,CACX,MAAMK,OAACA,EAAMC,MAAEA,GAAS/J,EACxB,OAAOuJ,EAAG,IAAIS,OAAOF,EAAQC,GAAQN,EAC7C,CACM,KCpCoB,EDoCV,CACR,MAAM3B,EAAMyB,EAAG,IAAIf,IAAKiB,GACxB,IAAK,MAAO1C,EAAK0C,KAAUzJ,EACzB8H,EAAI3F,IAAIuH,EAAO3C,GAAM2C,EAAOD,IAC9B,OAAO3B,CACf,CACM,KCzCoB,EDyCV,CACR,MAAM3F,EAAMoH,EAAG,IAAIV,IAAKY,GACxB,IAAK,MAAMA,KAASzJ,EAClBmC,EAAI8H,IAAIP,EAAOD,IACjB,OAAOtH,CACf,CACM,KC9CoB,ED8CR,CACV,MAAMpC,KAACA,EAAImH,QAAEA,GAAWlH,EACxB,OAAOuJ,EAAG,IAAIL,EAAInJ,GAAMmH,GAAUuC,EAC1C,CACM,KCjDoB,EDkDlB,OAAOF,EAAGW,OAAOlK,GAAQyJ,GAC3B,IAAK,SACH,OAAOF,EAAGhJ,OAAO2J,OAAOlK,IAASyJ,GACnC,IAAK,cACH,OAAOF,EAAG,IAAI7G,WAAW1C,GAAOwC,OAAQxC,GAC1C,IAAK,WAAY,CACf,MAAMwC,OAAEA,GAAW,IAAIE,WAAW1C,GAClC,OAAOuJ,EAAG,IAAIY,SAAS3H,GAASxC,EACxC,EAEI,OAAOuJ,EAAG,IAAIL,EAAIjC,GAAMjH,GAAQyJ,EAAM,EAGxC,OAAOC,CAAM,EAY0BU,CAAa,IAAI5B,IAAKa,EAAtBe,CAAkC,GE7ErEC,EAAQ,IAERC,SAACA,GAAY,CAAE,GACf1C,KAACA,GAAQrH,OAETgK,EAASvK,IACb,MAAMiH,SAAcjH,EACpB,GAAa,WAATiH,IAAsBjH,EACxB,MAAO,CDde,ECcHiH,GAErB,MAAMuD,EAAWF,EAAStC,KAAKhI,GAAOyK,MAAM,MAC5C,OAAQD,GACN,IAAK,QACH,MAAO,CDlBa,ECkBLH,GACjB,IAAK,SACH,MAAO,CDnBa,ECmBJA,GAClB,IAAK,OACH,MAAO,CDpBa,ECoBNA,GAChB,IAAK,SACH,MAAO,CDrBa,ECqBJA,GAClB,IAAK,MACH,MAAO,CDtBa,ECsBPA,GACf,IAAK,MACH,MAAO,CDvBa,ECuBPA,GACf,IAAK,WACH,MAAO,CD9Ba,EC8BLG,GAGnB,OAAIA,EAASE,SAAS,SACb,CDlCe,ECkCPF,GAEbA,EAASE,SAAS,SACb,CD/Be,EC+BPF,GAEV,CDtCiB,ECsCRA,EAAS,EAGrBG,EAAa,EAAEC,EAAM3D,KD3CD,IC4CxB2D,IACU,aAAT3D,GAAgC,WAATA,GAyHZ4D,EAAY,CAAC7K,GAAQ8K,OAAMC,SAAS,MAChD,MAAM/B,EAAI,GACV,MAxHiB,EAACgC,EAAQF,EAAMxB,EAAGN,KAEnC,MAAMO,EAAK,CAACC,EAAKxJ,KACf,MAAMyJ,EAAQT,EAAEnG,KAAK2G,GAAO,EAE5B,OADAF,EAAEnH,IAAInC,EAAOyJ,GACNA,CAAK,EAGRwB,EAAOjL,IACX,GAAIsJ,EAAErB,IAAIjI,GACR,OAAOsJ,EAAEtH,IAAIhC,GAEf,IAAK4K,EAAM3D,GAAQsD,EAAOvK,GAC1B,OAAQ4K,GACN,KD9DoB,EC8DJ,CACd,IAAIM,EAAQlL,EACZ,OAAQiH,GACN,IAAK,SACH2D,ED1Dc,EC2DdM,EAAQlL,EAAMsK,WACd,MACF,IAAK,WACL,IAAK,SACH,GAAIU,EACF,MAAM,IAAIG,UAAU,uBAAyBlE,GAC/CiE,EAAQ,KACR,MACF,IAAK,YACH,OAAO3B,EAAG,ED7EI,GC6EIvJ,GAEtB,OAAOuJ,EAAG,CAACqB,EAAMM,GAAQlL,EACjC,CACM,KD/EoB,EC+ER,CACV,GAAIiH,EAAM,CACR,IAAImE,EAASpL,EAOb,MANa,aAATiH,EACFmE,EAAS,IAAI1I,WAAW1C,EAAMwC,QAEd,gBAATyE,IACPmE,EAAS,IAAI1I,WAAW1C,IAEnBuJ,EAAG,CAACtC,EAAM,IAAImE,IAAUpL,EACzC,CAEQ,MAAM2J,EAAM,GACNF,EAAQF,EAAG,CAACqB,EAAMjB,GAAM3J,GAC9B,IAAK,MAAMkL,KAASlL,EAClB2J,EAAI9G,KAAKoI,EAAKC,IAChB,OAAOzB,CACf,CACM,KDhGoB,ECgGP,CACX,GAAIxC,EACF,OAAQA,GACN,IAAK,SACH,OAAOsC,EAAG,CAACtC,EAAMjH,EAAMsK,YAAatK,GACtC,IAAK,UACL,IAAK,SACL,IAAK,SACH,OAAOuJ,EAAG,CAACtC,EAAMjH,EAAMqL,WAAYrL,GAIzC,GAAI8K,GAAS,WAAY9K,EACvB,OAAOiL,EAAKjL,EAAMsL,UAEpB,MAAM3D,EAAU,GACV8B,EAAQF,EAAG,CAACqB,EAAMjD,GAAU3H,GAClC,IAAK,MAAM+G,KAAOa,EAAK5H,IACjBgL,GAAWL,EAAWJ,EAAOvK,EAAM+G,MACrCY,EAAQ9E,KAAK,CAACoI,EAAKlE,GAAMkE,EAAKjL,EAAM+G,MAExC,OAAO0C,CACf,CACM,KDtHoB,ECuHlB,OAAOF,EAAG,CAACqB,EAAM5K,EAAMuL,eAAgBvL,GACzC,KDvHoB,ECuHP,CACX,MAAM8J,OAACA,EAAMC,MAAEA,GAAS/J,EACxB,OAAOuJ,EAAG,CAACqB,EAAM,CAACd,SAAQC,UAAS/J,EAC3C,CACM,KD1HoB,EC0HV,CACR,MAAM2H,EAAU,GACV8B,EAAQF,EAAG,CAACqB,EAAMjD,GAAU3H,GAClC,IAAK,MAAO+G,EAAKmE,KAAUlL,GACrBgL,IAAYL,EAAWJ,EAAOxD,MAAS4D,EAAWJ,EAAOW,MAC3DvD,EAAQ9E,KAAK,CAACoI,EAAKlE,GAAMkE,EAAKC,KAElC,OAAOzB,CACf,CACM,KDlIoB,ECkIV,CACR,MAAM9B,EAAU,GACV8B,EAAQF,EAAG,CAACqB,EAAMjD,GAAU3H,GAClC,IAAK,MAAMkL,KAASlL,GACdgL,GAAWL,EAAWJ,EAAOW,KAC/BvD,EAAQ9E,KAAKoI,EAAKC,IAEtB,OAAOzB,CACf,EAGI,MAAMvC,QAACA,GAAWlH,EAClB,OAAOuJ,EAAG,CAACqB,EAAM,CAAC7K,KAAMkH,EAAMC,YAAWlH,EAAM,EAGjD,OAAOiL,CAAI,EAiBJO,GAAaV,GAAQC,KAAUD,EAAM,IAAItC,IAAKQ,EAA9CwC,CAAiDxL,GAAQgJ,CAAC,GCpK5DyC,MAAOC,EAAQC,UAAWC,GAAcC,KACzClG,EAAU,CAACmF,MAAM,EAAMC,OAAO,6CAOfe,GAAO1C,EAAYsC,EAAOI,cAOtBC,GAAOH,EAAWf,EAAUkB,EAAKpG,MCpBnD,MASMqG,EAA+B,UCR/BC,EAAW,WCDXC,EAAU,UCCjBC,EAAU,uCACHC,EAAO,IAAMD,EACbE,EAAS,IAAMF,GCItBG,YAAEA,EAAaC,QAASC,EAAU/L,QAAAA,GAAYP,YAC5CuM,QAAAA,GAAYC,OACdC,OAAEA,EAAMC,eAAEA,EAAcvE,OAAEA,GAAW9H,OAErCsM,EAAaD,EAAeE,YAC5BP,EAAUI,EAAOH,GAKjB9L,EAAgB,IAAMD,EAAQC,gBAEpC,IAAIqM,EAAK,EACT,MAAMC,EAAQ,IAAIxE,IACZyE,EAAS,CAACC,EAAOC,IAAsB,cAAcD,EACzD,WAAA/G,CAAYnG,KAAUoN,GACpBhH,MAAMpG,KAAUoN,GACZpN,aAAiBmN,GACnBH,EAAM7K,IAAIrB,KAAM,CAACiM,IAAM,EAAGrM,KAChC,GAGM2M,EAAa,IAAIC,QAajBC,GAAcvN,IAClBqN,EAAWpD,IAAIjK,GACRA,GAGHwN,GAAY,CAAC5G,EAAO6G,KACxB,MAAMC,KAAEA,GAAS9G,EACX+G,EAAMlB,EAAQiB,KAClBA,EAAKE,GAAG,KAAOH,GAhDC,IAiDfC,EAAKE,GAAG,KAAuBH,GAMlC,OAJIE,IACF/G,EAAMiH,2BACNjH,EAAMkH,kBAEDH,CAAG,EAGNI,GAAW/N,GACL,OAAVA,GACiB,iBAAVA,IACNqN,EAAWpF,IAAIjI,GAGZgO,GAAc,IAAI7M,QAClB8M,GAAgB,CAACP,EAAMQ,EAAUC,KACrC,GAAInB,EAAM/E,IAAIyF,GACZQ,EAAS/L,IAAIuL,EAAMV,EAAMhL,IAAI0L,GAAM,SAChC,KAAMA,aAAgBb,GAAca,aAAgBpB,GACvD,IAAK,MAAMtM,KAASqI,EAAOqF,GACrBK,GAAS/N,KAAWmO,EAAQlG,IAAIjI,KAClCmO,EAAQlE,IAAIjK,GACZiO,GAAcjO,EAAOkO,EAAUC,GAGvC,EAIMC,GAAiB,IAAIrM,KAAU,CACnC/B,MAAO,IAAIS,GAAQM,IAEjB,IAAIkI,EAAI,IAAIoF,OAAO,wFACnBpF,EAAEqF,UAAY,IAAMvN,EAAQ,MAC5BkI,EAAEsF,YAAYxM,EAAK,MAqBjByM,GAAa,CAAC5H,EAAOsH,EAAUR,KACnC,IAAK,MAAOe,EAAM1B,KAAOmB,EACvBF,GAAY7L,IAAIsM,EAAM,CAAC1B,EAAInG,EAAM8H,gBA/FpB,GAAGA,gBAAezH,OAAM0H,SAAQC,cAAa9E,SAAQ+E,SAASnB,KAC7EgB,EAAc7H,cAAc,IAAIiI,aAAa7H,EAAM,CAAEyG,OAAMiB,SAAQC,cAAa9E,SAAQ+E,UAAS,EA+FjGE,CAASnI,EAAO8G,EAAK,EC7FvB,IACAZ,WACEA,GAAUK,kBACVA,GACFkB,OAAEA,IACEnO,WAEA0I,GDeiB5I,GAASA,ECd1BgP,IAAW,EAEf,MAAMC,GAAWtJ,IAAO,IAAUA,EAASsB,KAAM,WAEjD,IACE,IAAIkG,GAAkB,GAEtBkB,GAAS,cAAcA,GACrB,WAAAlI,CAAY+I,EAAKvJ,GACfS,MAAM8I,EAAKD,GAAStJ,GAC1B,GAGO4G,EAAQ4C,YACX5C,EAAQ4C,UAAYf,GACxB,CACA,MAAOpF,GACL,MAAMmD,EAAUiD,OAAOC,aAEjB3G,EAAO,IAAIF,IAEX8G,EAAc,CAACnG,EAAMlC,EAAM7C,KAAYgJ,KAC3CjE,EAAKoG,iBAAiBtI,EAAM7C,KAAYgJ,EAAK,EAGzCoC,EAAW,EAAGC,cAAeC,GAAKC,EAAIC,KAC1C,IAAI3G,EAAGpI,GAAI,EACXyO,EAAYI,EAAG,WAAW9I,IACxB,GAAI4G,GAAU5G,EAAOuF,GAAU,CAC7B,MAAOnD,EAAG+D,EAAItD,GAAS7C,EAAM8G,KACvBmC,EAAM,CAAC9C,EAAItD,GAAOqG,KAAK,KACvBF,EAAOnB,IACX/F,EAAKhB,OAAOmI,GACZ5G,EAAEsF,YAAY,CAAEpC,EAASY,EAAItD,EAAOgF,GAAO,EAEvCA,EAAO/F,EAAK1G,IAAI6N,GACtB,GAAIpB,EAAMmB,EAAKnB,OACV,CACH,MAAMxN,QAAEA,EAAOF,QAAEA,GAAYL,IAC7BgI,EAAKvG,IAAI0N,EAAK9O,GACdE,EAAQuD,KAAKoL,EACvB,CACA,KAGIF,EAAEK,gBAAgBJ,GACfnL,MAAKC,GAAMA,GAAKiL,EAAEF,SAASG,KAC3BnL,MAAK,SAASwL,EAAMvL,GACnB5D,EAAIA,KAAO6O,EAAEO,WACbhH,EAAKxE,EAAEyL,YAAczL,EAAE0L,SAAW1L,EAAE2L,OACpB,cAAZnH,EAAEoH,MACAxP,EAAG+O,IACFU,SAASC,SAGdjB,EAAYrG,EAAG,eAAe,IAAM+G,EAAMvL,IAAI,CAAE+L,MAAM,GAChE,GAAQ,EAGN5H,GAAS2E,GACTyB,IAAW,EAEXzC,EAAQkE,OAAS,CAAChC,EAAMhF,KACtB,MAAOsD,EAAI2D,GD+BCjC,IAAQT,GAAYhM,IAAIyM,GC/BfkC,CAAQlC,GACvBoB,EAAM,CAAC9C,EAAItD,GAAOqG,KAAK,KACvBxP,EAAQoI,EAAK1G,IAAI6N,GAIvB,OAHIvP,EAAOA,EAAMmO,GACZ/F,EAAKvG,IAAI0N,EAAKpB,GACnBiC,EAAOnC,YAAY,CAACpC,ED1FF,EC0F0BsC,EAAM1B,EAAItD,IAC/C,CAAC,EAGV8C,EAAQ4C,UAAY,CAACV,KAASrB,KAC5B,MAAOpE,EAAGhJ,GDRQ,EAACyO,EAAMhF,KAC3B,MAAMzJ,EAAQgN,EAAMhL,IAAIyM,IAAQ1B,EAAI/D,GAAG/H,QAAEA,IAAajB,EAEtD,OADAA,EAAM,GAAKyJ,EACJ,CAACsD,EAAI9L,EAAQ,ECKC2P,CAAcnC,KAASrB,GAC1C,MAAO,CAAEpN,QAAO,EAGlBmN,GAAoB,cAAcb,IAElCQ,GAAaG,EAAOH,GAAYK,IAEhC,IAAIsC,EAAgB,KACpBpB,GAAS,cAAcA,GACrB,WAAAlI,CAAY+I,EAAKvJ,GACf,IAAIgK,EAAKhK,GAAS8J,eAAiB,GACnC,GAAIE,EAAI,CAGN,GAFAA,EAAK,IAAIkB,IAAIlB,EAAIW,SAASQ,MAAMA,KAChCnL,EAAU,IAAKA,EAAS8J,cAAeE,IAClCF,EAAe,CAClB,MAAMxO,QAAEA,EAAOF,QAAEA,GAAYL,IAC7B8O,EAASuB,UAAWpB,EAAI5O,GACxB0O,EAAgBxO,CAC1B,CACQwO,EAAcjL,MACZ,IAAM4B,MAAMmI,YAAY,CAACpC,EDlHjB,KCoHlB,CACM/F,MAAM8I,EAAKD,GAAStJ,IACpBS,MAAMmI,YAAY,CAACpC,EDzHL,ECyH2BxG,IACzC2J,EAAYxO,KAAM,WAAW8F,IAC3B,GAAI4G,GAAU5G,EAAOuF,GAAU,CAC7B,MAAOnD,EAAGgI,KAAW5D,GAAQxG,EAAM8G,KACnC,OAAQsD,GACN,KD7HU,EA6FD,EAACC,EAAOC,EAAKC,KAChC,IAAK,MAAO1C,GAAO1B,EAAItD,GAAO1I,QAAEA,OAAeiM,EAC7C,GAAIkE,IAAQnE,GAAMoE,IAAW1H,EAAO,CAClC,IAAK,IAAI7F,EAAI,EAAGA,EAAIqN,EAAMxK,OAAQ7C,IAAK6K,EAAK7K,GAAKqN,EAAMrN,GACvDoJ,EAAMtF,OAAO+G,GACb1N,EAAQ,MACR,KACN,CACA,ECyBcqQ,IAAgBhE,GAChB,MAEF,KDhIQ,ECiINoB,GAAW5H,KAAUwG,GAInC,IAEA,CACI,WAAAmB,CAAYb,KAASN,GACnB,OAAOhH,MAAMmI,YD5BF,EAACpC,EAASuB,KACzB,MAAMQ,EAAW,IAAI1F,IAErB,OADIuF,GAASL,IAAOO,GAAcP,EAAMQ,EAAU,IAAIrF,KAC/CqF,EAAS5G,KAAO,CAAC6E,EAhHN,EAgH4B+B,EAAUR,GAAQA,CAAI,ECyBvC2D,CAASlF,EAASuB,MAAUN,EAC3D,EAEA,CCrIA,MAAQkE,kBAAmBC,IAAczE,YACjCwE,kBAAmBE,IAAeC,aAEpChB,OAAEA,IAAWlE,EAEbnK,GAAU,IAAIC,YAAY,UAE1BqP,GAAU,IAAIpE,QAEdY,GAAW,IAAInM,KAAU2P,GAAQzH,IAAIlI,GAAOA,GAElD,IAAI4P,GAAU,GAqCd,IAAI9B,GAAM,EACV,MAAM+B,GAAS,EAEXzF,EACA0F,EACAjJ,EACAkJ,EACArG,EACAuD,EACAT,EACAwD,EACA5C,GAEFpP,IACG,IAAIgC,KACP,IAAIiQ,EAAuB,KAAZL,GAAgBM,EAAQ,EAInCD,GAA2B,MAAfL,GAAQ,IAA6B,MAAfA,GAAQ,KAC5CM,EA1BS,EAAClS,EAAM4R,IAAYO,WAC9B3Q,QAAQ4Q,KACR,IACA,gBAAgBpS,gBAAmB4R,OAuBzBQ,CAAKpS,EAAM4R,KACrB,MAAM5E,EAAK8C,KACX,IAAI3B,EAAW,GACXwD,GAAQzJ,IAAIlG,EAAK6L,IAAG,IAAOM,IAC7BwD,GAAQhK,OAAOwG,EAAWnM,EAAKqQ,OACjC,MAAM1E,EAAO9E,EAAOmJ,EAAYhQ,EAAK+F,IAAIiK,GAAahQ,GACtD,IAAIsQ,EAAKR,EAAoB,EAAZN,IAEjB,OADAhD,EAAY,CAACpC,EFlFK,EEkFiBpM,EAAMgN,EAAIsF,EAAI3E,EAAMoE,GAAS,CAAE5D,aAC3DiB,EAAUkD,EAAI,GAAGrS,MAAMwE,MAAK,KAC7BwN,GAAUM,aAAaL,GAC3B,MAAMxL,EAAS4L,EAAG,GAClB,IAAK5L,EAAQ,OACb,MAAM8L,EAAQf,GAAa/K,EAG3B,OAFA4L,EAAKR,EAAQU,EAASA,EAAQhB,IAC9BhD,EAAY,CAACpC,EF1FK,EE0FmBY,EAAIsF,IAClClD,EAAUkD,EAAI,GAAGrS,MAAMwE,MAAK,KACjC,MAAMgO,EAAQ,IAAIf,YAAYY,EAAG7P,QAC3BiQ,EAAMzD,EAAWwD,EAAME,SAAS,EAAGjM,GAAU+L,EAAM/H,MAAM,EAAGhE,GAClE,OAAOgF,EAAMrJ,GAAQO,OAAO8P,GAAK,GACjC,GACF,EC5DJ,IAAAE,GAAyC,EACvClH,QACAE,YACAoG,aACElG,QACF,MAAM+G,EDrBa,EAACjH,EAAWoG,IAAcc,MAAOvQ,EAAUwQ,GAAU/S,EAAMgN,EAAIsF,EAAItQ,EAAM+P,MACxFA,IAAQH,GAAU5R,GACtB,IACE,MAAM4D,QAAerB,KAAYP,GACjC,QAAe,IAAX4B,EAAmB,CACrB,MAAM0F,EAAasC,EAAUoG,EAAYA,EAAUpO,GAAUA,GAC7DmP,EAAQ3Q,IAAI4K,EAAI1D,GAChBgJ,EAAG,GAAKhJ,EAAW5C,MACzB,CACA,CACU,QACFqL,IAAQH,GAAU,IACtBU,EAAG,GAAK,EACR5B,GAAO4B,EAAI,EACf,GCOqBU,CAAapH,EAAWoG,GAyC3C,MAAO,CACL1D,OAxCF,cAAqB2E,GACnB,WAAA7M,CAAY+I,EAAKvJ,GACf,MAAMwG,EAAUiD,OAAOC,aACjBvH,EAAM,IAAIU,IACVsK,EAAU,IAAItK,IACpBpC,MAAM8I,EAAKvJ,GACX7E,KAAKmS,MDkDS,EAACC,EAASpL,IAAQ,IAAIhD,MAAMgD,EAAK,CACnD9F,IAAK,CAAC8F,EAAK/H,KACT,IAAIoT,EAUJ,MAPa,SAATpT,IACFoT,EAAKrL,EAAI9F,IAAIjC,GACRoT,IACHA,EAAKvB,GAAOsB,EAASnT,GACrB+H,EAAI3F,IAAIpC,EAAMoT,KAGXA,CAAE,EAEXhR,IAAK,CAAC2F,EAAK/H,EAAMuC,IACN,SAATvC,KACE+H,EAAI3F,IAAIpC,EAAMuC,KClED8Q,CACX,CACEjH,EACAoG,GAAS,IAAIzF,GAAW,IAAIK,GAAkBoF,IAC9C3J,IACA,EACA6C,EACAuD,GACA,IAAIjN,IAASjB,KAAKyN,eAAexM,GACjCgQ,EACAxF,EAAQ4C,WAEVrH,GAEFhH,KAAKyN,YAAY3F,GAAO,CAACuD,EHhEX,EGgEiCxG,KAC/C7E,KAAKyO,iBAAiB,WAAW3I,IAC/B,GAAI4G,GAAU5G,EAAOuF,GAAU,CAC7B,MAAOnD,EAAGgI,KAAW5D,GAAQxG,EAAM8G,KACnC,OAAQsD,GACN,KHnEQ,EE0CD,EAAC4B,EAAYE,EAAShL,EAAKsF,KAC5C,MAAOrN,GAAQqN,EACT9K,EAAWwF,EAAI9F,IAAIjC,GACzB,IAAKuC,EAAU,MAAM,IAAI+Q,MAAM,iBAAiBtT,OAChD6S,EAAWtQ,EAAUwQ,EAAS1F,EAAK,ECsBvBoB,CAAWoE,EAAYE,EAAShL,EAAKsF,GACrC,MAEF,KHxEU,EEoCH,EAAC0F,GAAU/F,EAAIsF,MAChC,MAAM1O,EAASmP,EAAQ9Q,IAAI+K,GAC3B+F,EAAQpL,OAAOqF,GACf,IAAK,IAAIyF,EAAQ,IAAIf,YAAYY,EAAG7P,QAASoB,EAAI,GAAG6C,OAAEA,GAAW9C,EAAQC,EAAI6C,EAAQ7C,IACnF4O,EAAM5O,GAAKD,EAAO2P,WAAW1P,GAC/B6M,GAAO4B,EAAI,EAAE,ECgCDkB,CAAWT,EAAS1F,GAIlC,IAEA,GAKI4B,YACAd,YACD,ECzFI,MAAMsF,GAAY,QAGZC,GAAY,WACZC,GAAY,OACZC,GAAY,SACZC,GAAY,SACZC,GAAY,SACZC,GAAY,SACZC,GAAY,YCazB,IAAeC,GAAAzT,OAAO0T,YAAY,CAChCT,GDtBuB,SACA,UCwBvBC,GACAC,GACAC,GACAC,GACAC,GACAC,GACAC,IACAjM,KAAI,CAACxD,EAAGV,IAAM,CAACU,EAAGV,MC9BpB,MAAQoI,CAACA,GAAWkI,IAAYC,QAE1B7T,GAAQ,IAAIkI,IAChB0L,GAAQ9T,QACLgU,QAAO1E,UAAYtP,OAAOsP,KAAOoE,KACjChM,KAAI4H,GAAK,CAACtP,OAAOsP,GAAIA,MAYb2E,GAAWrU,GACtBM,GAAM0B,IAAIhC,IACV,IAAII,OAAOkU,OAAOtU,IAAU,KCpBxBuU,GAAW,IAAIC,sBACnB,EAAEC,EAAoBC,EAAMC,MAEtBA,GAAOpT,QAAQoT,MAAM,KAAKC,OAAOF,KAAS,mBAAoB,aAClED,EAAmBC,EAAK,IAItBG,GAActU,OAAOoM,OAAO,MAiBrBA,GAAS,CACpBmI,EACAL,GACEE,QAAOvQ,UAAS2Q,OAAQtQ,EAAGuQ,QAAQF,GAASD,MAK9C,MAAMtP,EAASd,GAAK,IAAIK,MAAMgQ,EAAM1Q,GAAWyQ,IACzC9S,EAAO,CAACwD,EAAQ,CAACkP,EAAoBK,IAAQH,IAKnD,OAJc,IAAVK,GAAiBjT,EAAKc,KAAKmS,GAG/BT,GAAS/E,YAAYzN,GACdwD,CAAM,GCzCTgK,iBAAEA,IAAqB9J,YAAYvB,UACnC+Q,GAAgB,IAAI9T,QAC1BgT,QAAQ3T,eAAeiF,YAAYvB,UAAW,mBAAoB,CAChE,KAAAlE,CAAMiH,EAAMiO,KAAavP,GACvB,MAAMiM,EAASjM,EAAQiI,GAAG,IAAIgE,OAC9B,GAAIA,EAAQ,CACV,IAAI9J,EAAMmN,GAAcjT,IAAIlB,MACvBgH,IACHA,EAAM,IAAIU,IACVyM,GAAc9S,IAAIrB,KAAMgH,IAE1BA,EAAI3F,IAAI8E,EAAM,GAAGkO,OAAOvD,WACjBjM,EAAQ,GAAGiM,MACxB,CACI,OAAOrC,GAAiBvH,KAAKlH,KAAMmG,EAAMiO,KAAavP,EACvD,ICkBH,MAAQ8G,QAAAA,IAAYC,MAEpB,IAAA0I,GAAe,CAACrU,EAASsU,KACvB,MAAM5N,MAAEA,EAAK6N,KAAEA,EAAItT,IAAEA,EAAG8S,KAAEA,GClCN,MACpB,MAAMS,EAAM,IAAI/M,IACVH,EAAS,IAAIG,IACnB,IAAIqH,EAAM,EACV,MAAO,CAILpI,MAAO,KACL8N,EAAI9N,QACJY,EAAOZ,OAAO,EAQhB6N,KAAMvI,IACJ,MAAOpM,EAAGC,UAAYmM,IAAO4G,GAAS,CAACtL,EAAQkN,GAAO,CAACA,EAAKlN,GACtDmN,EAAM7U,EAAEsH,IAAI8E,GAKlB,OAJIyI,IACF5U,EAAE8G,OAAO/G,EAAEqB,IAAI+K,IACfpM,EAAE+G,OAAOqF,IAEJyI,CAAG,EAQZxT,IAAK+K,GAAM1E,EAAOrG,IAAI+K,GAOtB+H,KAAM9U,IACJ,IAAKuV,EAAItN,IAAIjI,GAAQ,CACnB,IAAI+M,EAIJ,KAA4B1E,EAAOJ,IAAI8E,EAAK8C,OAC5C0F,EAAIpT,IAAInC,EAAO+M,GACf1E,EAAOlG,IAAI4K,EAAI/M,EACvB,CACM,OAAOuV,EAAIvT,IAAIhC,EAAM,EAExB,EDlBkCyV,GAC7BC,EAAU,IAAIlN,IAEdmN,EAAOC,IAEXF,EAAQhO,OAAOkO,GACfP,EAAWpJ,EAAU2J,EAAI,EAGrBC,EAAU7V,IACd,MAAM4K,SAAc5K,EAEpB,OAAQ4K,GACN,KAAKgJ,GACH,OAAc,OAAV5T,EAAuB,CAACgU,GAAQN,IAAO1T,GACvCA,IAAUE,WAAmB,CAAC8T,GAAQJ,IAAS,MAC/CnH,GAAQzM,GAAe,CAACgU,GAAQR,IAAQsB,EAAK9U,IAC1C,CAACgU,GAAQJ,IAAS5T,aAAiB6M,EAAa7M,EAAQ8U,EAAK9U,IAEtE,KAAKyT,GAAU,MAAO,CAACO,GAAQP,IAAWqB,EAAK9U,IAC/C,KAAK8T,GAAQ,MAAO,CAACE,GAAQF,IAASO,GAASrU,IAC/C,QAAS,MAAO,CAACgU,GAAQpJ,GAAO5K,GACtC,EAGQ8V,EAAY,EAAEC,EAAa/V,MAC/B,OAAQ+V,GACN,KAAK/B,GAAQJ,IACX,GAAc,OAAV5T,EAAgB,OAAOE,WAC3B,UAAWF,IAAU2T,GAAQ,OAAO3R,EAAIhC,GACxC,KAAMA,aAAiB6M,GACrB,IAAK,MAAM9F,KAAO/G,EAChBA,EAAM+G,GAAO+O,EAAU9V,EAAM+G,IAEjC,OAAO/G,EAET,KAAKgU,GAAQR,IACX,cAAWxT,IAAU2T,GAAe3R,EAAIhC,GACjCA,EAAM8H,IAAIgO,GAEnB,KAAK9B,GAAQP,IACX,cAAezT,GACb,KAAK2T,GAAQ,OAAO3R,EAAIhC,GACxB,KAAK6T,GAAQ,CACX,IAAImC,EAAKN,EAAQ1T,IAAIhC,IAAQiW,QAW7B,OAVKD,IACHA,EAAKrJ,GAAO3M,EAAO2V,EAAM,CACvBX,OAAO,EACPD,OAAQ,YAAahT,GAEnB,OADIA,EAAK0E,QAAU1E,EAAK,aAAcqF,ODnEzCR,KACb,MAAM8H,cAAEA,EAAanJ,OAAEA,EAAM0B,KAAEA,GAASL,EAClCsP,EAAUjB,GAAcjT,IAAI0M,GAAiBnJ,IAASvD,IAAIiF,GAChE,GAAIiP,EAAS,IAAK,MAAMC,KAAUD,EAAStP,EAAMuP,IAAS,ECgEGC,CAAYrU,EAAK,IACvDsT,EbtFmB,QasFDrV,EAAO6V,EAAQ/U,MAAOiB,EAAK+F,IAAI+N,IAAUrR,KAAKsR,EACzF,IAEcJ,EAAQvT,IAAInC,EAAO,IAAIqW,QAAQL,KAE1BA,CACnB,EAGM,KAAKhC,GAAQF,IAAS,MHpFF9T,KACxB,GAAIA,EAAMgH,WAAW,KACnB,OAAO5G,OAAOC,IAAIL,EAAMyK,MAAM,IAChC,IAAK,MAAOtK,EAAQJ,KAASO,GAC3B,GAAIP,IAASC,EACX,OAAOG,CACb,EG8EmCmW,CAAWtW,GACxC,QAAS,OAAOA,EACtB,EAGQuW,EAAU,CAACJ,EAAQ5Q,EAAQxD,IAAS8T,EAAQM,EAAO5Q,KAAWxD,EAAK+F,IAAIgO,KACvEU,EAAWzW,GAAQ0W,OAAO1V,EAAQhB,IAClC2W,EAAU,IAAI7N,IAEpB,MAAO,CAAC8N,EAAMf,KAAQ7T,KACpB,GAAI4U,IAASzK,EAEXzE,SAEG,GAAIkP,IAAS1K,EAEXyK,EAAQzO,IAAI2N,IAAMN,EAAKM,OAEzB,CACH,MAAMO,EAAShC,QAAQwC,GACjBpR,EAAgB,MAAPqQ,EAAc1V,WAAa8B,EAAI4T,GAC9C,OAAQe,GACN,IbnHoC,iBamHd,CACpB,MAAO5W,EAAM6W,GAAc7U,EAAK+F,IAAIgO,GACpC,OAAOD,EAAQM,EAAO5Q,EAAQxF,EAAM6W,GAC9C,CACQ,IbpHoC,2BaoHF,CAChC,MAAMA,EAAaT,EAAO5Q,KAAWxD,EAAK+F,IAAIgO,IAC9C,GAAIc,EAAY,CACd,MAAM5U,IAAEA,EAAGG,IAAEA,EAAGnC,MAAEA,GAAU4W,EACxB5U,IAAK4U,EAAW5U,IAAM6T,EAAQ7T,IAC9BG,IAAKyU,EAAWzU,IAAM0T,EAAQ1T,IAC9BnC,IAAO4W,EAAW5W,MAAQ6V,EAAQ7V,GAClD,CACU,MAAO,CAACgU,GAAQ4C,EAAahD,GAASG,IAAY6C,EAC5D,CACQ,KAAK5K,EAAU,MAAO,CAACgI,GAAQR,IAAQ2C,EAAO5Q,GAAQuC,IAAI+N,IAC1D,IbhIoC,MaoIlC,GAAW,MAAPD,EAAa,CACf,MAAMjS,EAAwB,WAAf5B,EAAK,GAAG,GACrB8T,EAAQW,GACRD,EAAQJ,EAAQ5Q,EAAQxD,GAI1B,OAFA2U,EAAQzM,IAAItG,EAAO,IAEZA,CACnB,CAEQ,QAAS,OAAO4S,EAAQJ,EAAQ5Q,EAAQxD,GAEhD,EACG,EEpJH,MAAMmN,IAACA,gBACD2H,GAAK,kCACLC,GAAQ,CAAC9N,EAAE+N,EAAEC,IAAM,UAAUD,IAAI,IAAIlG,IAAImG,EAAE9H,IAAK4B,OAAOiG,aAGrD1I,ICGsD1I,KAC5D,MAAMsR,EAAMtR,GAAS8Q,OACfS,EAAUC,GAAWxR,GAE3B,MAAM0I,UAAe6I,EAAQ7I,OAC3B,WAAAlI,CAAY+I,EAAKvJ,GACf,MAAMsN,MAAEA,GAAU7M,MAAM8I,EAAKvJ,GAE7BsN,EAAM7G,GAAQgJ,GAEZzP,GAAS8Q,QAAUQ,IAAQlX,GAAQ,IAAI8Q,IAAI9Q,EAAMuQ,SAASQ,OAC1DmC,EAAM5G,GAcd,CACI,SAAA+K,GACEtW,KAAKmS,MAAM7G,GAAMF,GACjB9F,MAAMgR,WACZ,EAGE,MAAO,IAAKF,EAAS7I,SAAQ,EDnCZ8I,CAAWtL,GEJ9B,MAAM0I,GAAW,IAAI/L,IAMf6O,GAAUtX,GAAQwU,GAASvS,IAAIjC,GAE/BuX,GAAM,CAACpV,EAAaqV,KACtB,IACI,OAAOC,SAAS,UAAWD,EAApBC,CAA0BH,GACzC,CACI,MAAO1V,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACnC,GAGA,IAAe8V,GAAA,CACfxQ,KAhBa,QAiBTyQ,OAAQ,IAAM,+BACdzV,OAAQyV,GAAUtW,IAAQY,IAAI0V,GAC9B,gBAAAC,CAAiB3O,EAAGjJ,EAAMC,GACtBuU,GAASpS,IAAIpC,EAAMC,EACtB,EACLsX,IAAIA,GACAM,SAAUN,GACVO,SAAUhF,MAAO3Q,EAAaqV,EAAM3Q,KAChC,UACU4Q,SAAS,UAAW,IAAK,UAAUD,OAAnCC,CAA8CH,GAASzQ,EACzE,CACQ,MAAOjF,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACvC,GAEIoQ,UAAW,CAAC/I,EAAGhJ,IAAUA,EACzB,SAAA8X,GAAc,GCnClB,MAAMC,GAAS,CACb,MAAAnO,IAAU7H,GACR,OAAOjB,KAAKkX,OCJD,SAAUjS,GACvB,IAAK,IAAI2J,EAAI3J,EAAE,GAAInC,EAAI,EAAGqU,EAAIC,UAAUzR,OAAQ7C,EAAIqU,EAAGrU,IACrD8L,GAAKwI,UAAUtU,GAAKmC,EAAEnC,GACxB,OAAO8L,CACT,CDAuByI,IAAWpW,GAC/B,EACD,MAAAiW,CAAOG,GACL,IAAK,MAAMC,KAAQD,EAAQE,MAAM,WAE/B,GAAID,EAAKE,OAAO7R,OAAQ,CAElB,SAAS8R,KAAKH,KAChBD,EAAUA,EAAQK,QAAQ,IAAIxO,OAAO,IAAMA,OAAOyO,GAAI,MAAO,KAE/D,KACR,CAEI,OAAON,CACX,IEIMK,QAACA,IAAW,GAGZE,GAAK,iDAuBLC,GAAO,CACX,QAAS,IACT,QAAS,IACT,OAAQ,IACR,QAAS,IACT,OAAQ,IACR,QAAS,IACT,SAAU,IACV,QAAS,IACT,SAAU,IACV,QAAS,KAELC,GAAOC,GAAKF,GAAKE,GCtDjBd,GHsBW,CAACe,KAAQzQ,IAAW0P,UAAce,GAAKA,KAAQzQ,GGnB1D0Q,GD6DkBC,GAAMR,GAAQxQ,KAAKgR,EAAIN,GAAIE,KC3D7CnM,QAAEA,IAAYC,OAEd1H,OAAEA,GAAM2H,OAAEA,GAAMsM,iBAAEA,GAAgBzY,eAAEA,GAAcmH,QAAEA,IAAYpH,QAEhEsH,IAAEA,GAAG9G,QAAEA,IAAY,IAAI+D,MAAMrE,QAAS,CACxCuB,IAAK,CAACsH,EAAGvJ,IAASuJ,EAAEvJ,GAAM6B,KAAK0H,KAG7B4P,GAAc,CAAC9V,EAAM+V,EAAO7I,SAASQ,OACvC,IAAID,IAAIzN,EAAM+V,EAAKX,QAAQ,SAAU,KAAK1H,KAE9C,SAASsI,GAAchW,GAEnB,OAAOA,EAAK4D,WAAW,KAAOkS,GAAY9V,EAAMtC,MAAQsC,CAC5D,CAGA,IAAI2J,GAAK,EACT,MAAMsM,GAAW,CAACC,EAAMrS,KAAU,CAC9B8F,GAAIuM,EAAKvM,KAAOuM,EAAKvM,GAAK,GAAG9F,MAAS8F,QACtCwM,IAAKD,EAAKE,UAWRzK,GAAW,CAACxJ,EAAQ0B,EAAMpB,EAAM6K,GAAS,EAAO+I,EAAKC,eACvDnU,EAAOsB,cACH,IAAI4S,EAAG,GAAGxS,KAAQpB,IAAQ,CACtB8T,SAAS,EACTC,OAAQ,CAAElJ,YAEjB,EAKQmJ,GAAiB,CAACnC,EAAQzQ,EAAM6S,EAAQ5X,KAAiB,CAClE+E,OACA6S,SACA5X,cACAhB,GAAIA,EAAGc,IAAIE,GACXoV,IAAK,CAACC,KAASxV,IAAS2V,EAAOJ,IAAIpV,EAAaqV,KAASxV,GACzD6V,SAAU,CAACL,KAASxV,IAAS2V,EAAOE,SAAS1V,EAAaqV,KAASxV,GACnE8V,SAAU,IAAI9V,IAAS2V,EAAOG,SAAS3V,KAAgBH,KAGrDgY,GAAYxC,GAAQA,EAAKiB,QAAQ,eAAgB,IAE1CwB,GAAiB,CAACtC,EAAQ3X,EAAMka,EAAQC,KACjD,MAAM/D,EAASuB,EAAO3X,GAAM6B,KAAK8V,GACjCA,EAAO3X,GAAiB,QAATA,EAEX,CAACmC,EAAaqV,KAASxV,KACfkY,GAAQ9D,EAAOjU,EAAa+X,KAAWlY,GAC3C,MAAM4B,EAASwS,EAAOjU,EAAa6X,GAAUxC,MAAUxV,GAEvD,OADImY,GAAO/D,EAAOjU,EAAagY,KAAUnY,GAClC4B,CAAM,EAGjBkP,MAAO3Q,EAAaqV,KAASxV,KACrBkY,SAAc9D,EAAOjU,EAAa+X,KAAWlY,GACjD,MAAM4B,QAAewS,EAAOjU,EAAa6X,GAAUxC,MAAUxV,GAE7D,OADImY,SAAa/D,EAAOjU,EAAagY,KAAUnY,GACxC4B,CAAM,CAChB,EAGIwW,GAAa/Z,OAAOC,IAAI,yBAE/B+Z,GAAY,IAAI5R,IACtBhI,GAAeN,WAAYia,GAAY,CAAEna,MAAOoa,KAEzC,MAAMC,GAAY,IAAIvV,MAAMsV,GAAW,CAC1CpY,IAAK,CAAC8F,EAAK/H,IAAS+H,EAAI9F,IAAIjC,GAC5BkI,IAAK,CAACH,EAAK/H,IAAS+H,EAAIG,IAAIlI,GAC5BmU,QAASpM,GAAO,IAAIA,EAAIF,UAGtBK,GAAM,CAACe,EAAGsR,KAAWA,EAAMtT,WAAW,KAEtCiM,GAAQ,CAACsH,EAASxa,IAAS,IAAI+E,MACjCyV,EACA,CAAEtS,OAAKjG,IAAK,CAACuY,EAASD,IAAUC,EAAQxa,GAAMua,KAGrCE,GAAoB,CAACvT,EAAMyQ,EAAQxV,EAAaqY,KAEzD,GAAa,YAATtT,EAAoB,OAGxB,MAAMmT,EAAY,wBAClB,IAAK,MAAMra,KAAQoU,QAAQD,QAAQqG,GAC/B7C,EAAOC,iBAAiBzV,EAAa,GAAGkY,KAAara,IAAQkT,GAAMsH,EAASxa,IAChF2X,EAAOC,iBAAiBzV,EAAakY,EAAWG,EAAQ,EAG/CE,GAAW,CAAC3Q,EAAQ/J,IAAS0W,OAAO3M,GAAQtF,MAAKyS,IAC1DmD,GAAUjY,IAAIpC,EAAM,IAAKkX,GAAM,IAGtByD,GAAY5J,GAAQ,IAAIrQ,SAAQ,CAACka,EAAQ1U,KAC9ChD,SAAS2X,cAAc,gCAAgC9J,OACvD6J,IAGA1X,SAAS4X,KAAKC,OACV9V,GACI/B,SAAS8X,cAAc,QACvB,CAAEC,IAAK,aAAclK,OAAM6J,SAAQ1U,YAGnD,IAGagV,GAAQnR,GAAU,UAAUyO,KAAK,IAAI1H,IAAI/G,GAAQoR,UAEjDpJ,GAASqJ,GAClB,oBAAoB5C,KAAK4C,EAAQC,aAAa,UCjIrCC,IAAqBnb,WAAWob,OAMhCxD,GAAY,EAAGyD,KAAIC,OAAMC,WAAWrY,EAAMZ,KACnD,MAAMkZ,EAAUD,EAAQ1a,QAAQqC,GAC1BuY,EAAUH,EAAKI,QAAQF,GAG7B,OAFIH,EAAGM,UAAWN,EAAGM,UAAUF,GAC1BE,GAAUN,EAAII,GACZJ,EAAGzD,UAAU4D,EAAS,IAAIhZ,WAAWF,GAAS,CACjDsZ,QAAQ,GACV,EAUAF,GAAWxY,IACb,MAAM2Y,EAAO3Y,EAAKiV,MAAM,KAExB,OADA0D,EAAK3J,MACE2J,EAAKjM,KAAK,IAAI,EAGZ+L,GAAY,CAACN,EAAInY,KAC1B,MAAM4Y,EAAU,GAChB,IAAK,MAAMC,KAAU7Y,EAAKiV,MAAM,KACb,MAAX4D,GAA6B,OAAXA,IACtBD,EAAQnZ,KAAKoZ,GACTA,GAAQV,EAAGW,MAAMF,EAAQlM,KAAK,MAC1C,EAGM/O,GAAU,CAACwa,EAAInY,KACjB,MAAM2Y,EAAO,GACb,IAAK,MAAME,KAAU7Y,EAAKiV,MAAM,KAC5B,OAAQ4D,GACJ,IAAK,GAEL,IAAK,IACD,MACJ,IAAK,KACDF,EAAK3J,MACL,MACJ,QACI2J,EAAKlZ,KAAKoZ,GAGtB,MAAO,CAACV,EAAGY,OAAOhH,OAAO4G,GAAMjM,KAAK,KAAK0I,QAAQ,OAAQ,IAAI,EA2B3D4D,GAAaC,IACf,MAAMC,EAAMD,EACPvU,KAAKyU,GAASA,EAAKjE,OAAOE,QAAQ,iBAAkB,MACpDpE,QAAQ/P,GAAY,KAANA,GAAkB,MAANA,IAC1ByL,KAAK,KAEV,OAAOuM,EAAM,GAAGrV,WAAW,KAAO,IAAIsV,IAAQA,CAAG,EAG/CE,GAAc,CAACtN,EAAKuN,IACtB1X,EAAMmU,GAAYhK,EAAKuN,IAAUC,cAExBC,GAAa,CAACjF,EAAQxV,EAAa0a,EAAcH,IAC1D5U,GArCwB,CAAC+U,IACzB,IAAK,MAAMC,MAAEA,EAAKC,QAAEA,EAAOC,KAAEA,EAAO,MAAQH,EAAc,CACtD,QAAcI,IAAVH,QAAmCG,IAAZF,EACvB,MAAM,IAAIzJ,MACN,yDAER,QAAc2J,IAAVH,QAAmCG,IAAZF,GAAyBC,EAAKE,SAAS,KAC9D,MAAM,IAAI5J,MACN,iDAAiD0J,wCAEjE,CACI,OAAOH,EAAaM,SAChB,EAAGH,OAAO,GAAII,YAAY,IAAKL,UAASD,YACpC,GAAIpQ,GAAQoQ,GACR,OAAOA,EAAM/U,KAAKsV,IAAU,CACxBlO,IAAKkN,GAAU,CAACW,EAAMK,IACtBha,KAAMgZ,GAAU,CAACe,EAAWC,QAEpC,MAAMC,EAAWP,GAAWC,EAAKtS,MAAM,EAAIsS,EAAKO,YAAY,MAC5D,MAAO,CAAC,CAAEpO,IAAK6N,EAAM3Z,KAAMgZ,GAAU,CAACe,EAAWE,KAAa,GAErE,EAiBGE,CAAoBX,GAAc9U,KAAI,EAAGoH,MAAK9L,UAC1CoZ,GAAYtN,EAAKuN,GACZjY,MAAMhC,GAAWkV,EAAOI,UAAU5V,EAAakB,EAAMZ,QAI5Dgb,GAAW,CAAC1T,EAAQ2T,IAASA,EAAKR,SAAS,KAC7B,GAAGQ,IAAO3T,EAAOuO,MAAM,KAAKjG,QAAUqL,EAExDC,GAAgB,CAACC,EAAK7V,IAAQ6V,EAAInF,QACtC,YACAlU,IACE,IAAKwD,EAAIG,IAAI3D,GACX,MAAM,IAAIsZ,YAAY,qBAAqBtZ,KAC7C,OAAOwD,EAAI9F,IAAIsC,EAAE,IA0BRuZ,GAAa,CAACnG,EAAQxV,EAAa4b,EAAcrB,IAC1D5U,GAvBwBgV,KAC1B,MAAM/U,EAAM,IAAIU,IACVuV,EAAU,IAAIlV,IACdmV,EAAa,GACnB,IAAK,MAAOlU,EAAQ2T,KAAS9V,GAAQkV,GACnC,GAAI,WAAWtE,KAAKzO,GAAS,CAC3B,GAAIhC,EAAIG,IAAI6B,GACV,MAAM,IAAI8T,YAAY,wBAAwB9T,KAChDhC,EAAI3F,IAAI2H,EAAQ4T,GAAcD,EAAM3V,GAC1C,KACS,CACH,MAAMoH,EAAMwO,GAAc5T,EAAQhC,GAC5B1E,EAAOoa,GAAStO,EAAKwO,GAAcD,GAAQ,KAAM3V,IACvD,GAAIiW,EAAQ9V,IAAI7E,KAAUA,EAAK6Z,SAAS,MACtC,MAAM,IAAIW,YAAY,2BAA2Bxa,KACnD2a,EAAQ9T,IAAI7G,GACZ4a,EAAWnb,KAAK,CAAEqM,MAAK9L,QAC7B,CAEE,OAAO4a,CAAU,EAKXC,CAAoBH,GAAchW,KAAI,EAAGoH,MAAK9L,UAC1CoZ,GAAYtN,EAAKuN,GACZjY,MAAMhC,GAAWkV,EAAOI,UACrB5V,EACAkB,EACAZ,EACA0M,QAKPgP,GAAiB,EAAGC,OAAMzN,UAAU+L,KAC7C,MAAM2B,EAAW,GACjB,GAAI1N,GAAU2K,GACV,IAAK,IAAKvR,EAAQ/J,KAAS4H,GAAQ+I,GAC/B5G,EAASoP,GAAYpP,EAAQ2S,GAC7B2B,EAASvb,KAAK4X,GAAS3Q,EAAQ/J,IAGvC,GAAIoe,IAAS9C,GACT,IAAK,IAAKvR,EAAQ/J,KAAS4H,GAAQwW,GAC/BrU,EAASoP,GAAYpP,EAAQ2S,GACzBxB,GAAMnR,GAAS4Q,GAAU5Q,GACxBsU,EAASvb,KAAK4X,GAAS3Q,EAAQ/J,IAG5C,OAAO8H,GAAIuW,EAAS,EAGXC,GAAiB/Y,GAAUsU,IACpC/S,cAAc,IAAI6S,YAAY,GAAGpU,aAAmB,CAAEsU,WAAU,ECtKvD0E,GAAS,IAAInd,QAIbod,GAAe1L,MAAO1J,EAAMqV,EAAUtc,EAAa4X,EAAQ2C,KAChE3C,EAAO+C,QACP2B,EAAS,uBACHX,GAAW1U,EAAMjH,EAAa4X,EAAO+C,MAAOJ,GAClD+B,EAAS,iBAET1E,EAAO/U,QACPyZ,EAAS,uBACH7B,GAAWxT,EAAMjH,EAAa4X,EAAO/U,MAAO0X,GAClD+B,EAAS,iBAET1E,EAAOK,aACPqE,EAAS,4BACHN,GAAepE,EAAOK,WAAYsC,GACxC+B,EAAS,qBACjB,EAGa7G,GAAmB,CAACzV,EAAanC,EAAMC,KACnC,eAATD,IACAC,EAAMye,gBAAkB5L,SAAU6L,WACxBJ,GAAOtc,IAAIE,EAAXoc,CAAwBI,GACvBA,EAAS5W,KAAI/H,GAAQmC,EAAYyc,SAAS5e,MAErDC,EAAM4e,QAAU/L,MAAO9S,IACnB,MAAM6e,EAAU,IAAIrW,EAAWxI,GAE/B,aADM6e,EAAQlW,OACPkW,CAAO,EAElB5e,EAAM6L,KAAOA,GAEjB3J,EAAY2c,iBAAiB9e,EAAMC,EAAM,EAGhC8e,GAAY,CAAC1b,EAAM8L,KAC5B,GAAI9L,EAAK6Z,SAAS,MAAO,CACrB,GAAI,gCAAgC1E,KAAKrJ,GACrC,OAAOlF,OAAOyO,GAClB,MAAM,IAAIpF,MAAM,uBAAuBnE,IAC/C,CACI,MAAO,EAAE,EAGAoI,GAAM,CAACpV,EAAaqV,KAASxV,KACtC,IACI,OAAOG,EAAY6c,UAAUhH,GAAOR,MAAUxV,EACtD,CACI,MAAOJ,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACnC,GAGaiW,GAAW/E,MAAO3Q,EAAaqV,KAASxV,KACjD,IACI,aAAaG,EAAY8c,eAAejH,GAAOR,MAAUxV,EACjE,CACI,MAAOJ,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACnC,GAGakW,GAAWhF,MAAO3Q,EAAaqV,EAAM3Q,KAG9C,MAAO7G,KAAS6H,GAAQ2P,EAAKc,MAAM,KACnC,IACI/W,EADAiE,EAASrD,EAAYwU,QAAQ1U,IAAIjC,GAErC,IAAK,MAAMgH,KAAOa,GAAOtG,EAASiE,GAAU,CAACA,EAAQA,EAAOwB,IAC5D,UACUxB,EAAOyC,KAAK1G,EAASsF,EACnC,CACI,MAAOjF,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACnC,GCjFA,IAAAsd,IAAe,IAAIC,aAAcC,OAAO,+0ICEjC,MAAMC,GAAOvM,MAAOwM,UACnB5I,OAAgC,uBACtChL,MAAM4T,GCHRxM,eAAeyM,GAAO/D,EAAIgE,GACtB,OAAO,IAAI9e,SAAQ,CAACM,EAASC,KACzBua,EAAG+D,OAAOC,GAAWC,IACbA,EAAKxe,EAAOwe,GACXze,GAAS,GAChB,GAEV,CAIO,SAAS0e,GAAmB/H,GAC/B,MAAM6D,EAAK7D,EAAO6D,GACZmE,EAAQhI,EAAO6D,GAAGoE,YAAYD,MAC9BlE,EAAO9D,EAAO8D,KAEdoE,EAAgB,CAGlBC,SAAU,MACVC,UAAW,MACXC,MAAO,SAAUA,GACb,IAAKA,EAAMC,KAAKC,iBACZ,MAAM,IAAI5M,MAAM,qCAIpB,OAAOqM,EAAMK,MAAMG,MAAM,KAAMhI,UAClC,EACDoH,OAAQzM,MAAOkN,EAAOI,EAAU7d,KAC5B,IACI,MAAM8d,EAAQR,EAAcS,YAAYN,GAClCO,QAAeV,EAAcW,aAAaR,GAC1CpC,EAAMwC,EAAWG,EAASF,EAC1BI,EAAML,EAAWC,EAAQE,QACzBV,EAAca,UAAUV,EAAOpC,EAAK6C,GAC1Cle,EAAS,KACZ,CAAC,MAAOoe,GACLpe,EAASoe,EACzB,GAGQL,YAAcN,IACV,IAAIpY,EAAUpH,OAAOoM,OAAO,MAE5B,SAASgU,EAAUtc,GACf,MAAa,MAANA,GAAmB,OAANA,CACpC,CAEY,SAASuc,EAAW5d,GAChB,OAAQqB,GACGmX,EAAKqF,MAAM7d,EAAMqB,EAE5C,CAEY,IAAIyc,EAAQvF,EAAGwF,QAAQhB,EAAMiB,YACxB5M,OAAOuM,GACP7Y,IAAI8Y,EAAWb,EAAMiB,aAE1B,KAAOF,EAAMra,QAAQ,CACjB,IAAIrD,EAAO0d,EAAM1O,MACb6O,EAAO1F,EAAG0F,KAAK7d,GAEfmY,EAAG2F,MAAMD,EAAKE,OACdL,EAAMje,KAAKqd,MACPY,EACAvF,EAAGwF,QAAQ3d,GAAMgR,OAAOuM,GAAW7Y,IAAI8Y,EAAWxd,KAI1DuE,EAAQvE,GAAQ,CAAEge,UAAWH,EAAKI,MAAOF,KAAMF,EAAKE,KACpE,CAEY,MAAO,CAAEla,KAAM,QAASU,QAASA,EAAS,EAG9C4Y,aAAc1N,MAAOkN,IAEjB,MAAMpY,EAAUpH,OAAOoM,OAAO,MAExB2U,QAAgBC,GAAaxB,EAAMC,KAAKC,kBAC9C,IAAK,MAAO7c,EAAMoe,KAAWF,EACZ,MAATle,IAEJuE,EAAQ6T,EAAKqF,MAAMd,EAAMiB,WAAY5d,IAAS,CAC1Cge,UACoB,SAAhBI,EAAOC,YACMD,EAAOE,WAAWC,iBACzB,IAAI9X,KACdsX,KACoB,SAAhBK,EAAOC,KACD7B,EAAcE,UACdF,EAAcC,WAIhC,MAAO,CAAE5Y,KAAM,SAAUU,UAAS2Z,UAAS,EAE/CM,eAAiBxe,IACb,MACMkW,EADSiC,EAAGsG,WAAWze,GACTkW,KACd2H,EAAO1F,EAAG0F,KAAK7d,GAErB,GAAImY,EAAG2F,MAAMD,EAAKE,MACd,MAAO,CAAEC,UAAWH,EAAKI,MAAOF,KAAMF,EAAKE,MACxC,GAAI5F,EAAGuG,OAAOb,EAAKE,MAEtB,OADA7H,EAAKyI,SAAWrC,EAAMsC,wBAAwB1I,GACvC,CACH8H,UAAWH,EAAKI,MAChBF,KAAMF,EAAKE,KACXY,SAAUzI,EAAKyI,UAGnB,MAAM,IAAI1O,MAAM,0BAChC,EAEQ4O,gBAAiB,CAAC7e,EAAM8H,KACpB,GAAIqQ,EAAG2F,MAAMhW,EAAY,MACrBqQ,EAAGM,UAAUzY,EAAM8H,EAAY,UAC5B,KAAIqQ,EAAGuG,OAAO5W,EAAY,MAG7B,MAAM,IAAImI,MAAM,2BAFhBkI,EAAGzD,UAAU1U,EAAM8H,EAAgB,SAAG,CAAE4Q,QAAQ,GAGhE,CAEYP,EAAG2G,MAAM9e,EAAM8H,EAAY,MAC3BqQ,EAAG4G,MAAM/e,EAAM8H,EAAiB,UAAGA,EAAiB,UAAE,EAE1DkX,iBAAmBhf,IACf,IAAI6d,EAAO1F,EAAG0F,KAAK7d,GAEfmY,EAAG2F,MAAMD,EAAKE,MACd5F,EAAG8G,MAAMjf,GACFmY,EAAGuG,OAAOb,EAAKE,OACtB5F,EAAG+G,OAAOlf,EAC1B,EAEQmf,gBAAiB1P,MAAO2O,IACpB,GAAoB,SAAhBA,EAAOC,KAAiB,CACxB,MAAMrE,QAAaoE,EAAOE,UAC1B,MAAO,CACHK,SAAU,IAAIrf,iBAAiB0a,EAAKV,eACpCyE,KAAMvB,EAAcE,UACpBsB,UAAWhE,EAAKuE,iBAEpC,CAAmB,GAAoB,cAAhBH,EAAOC,KACd,MAAO,CACHN,KAAMvB,EAAcC,SACpBuB,UAAW,IAAIvX,MAGnB,MAAM,IAAIwJ,MAAM,iBAAmBmO,EAAOC,KAC1D,EAEQe,iBAAkB3P,MAAOyO,EAASle,EAAM8H,KACpC,MAAMuX,EAAkBnB,EAAQtf,IAAIwZ,EAAKI,QAAQxY,IAC3Coe,EAASjG,EAAGuG,OAAO5W,EAAMiW,YACnBsB,EAAgBC,cAAclH,EAAKmH,SAASvf,GAAO,CACvDuJ,QAAQ,UAEJ8V,EAAgBG,mBAAmBpH,EAAKmH,SAASvf,GAAO,CAC5DuJ,QAAQ,IAEhB,GAAoB,SAAhB6U,EAAOC,KAAiB,CACxB,MAAMoB,QAAiBrB,EAAOsB,uBACxBD,EAASE,MAAM7X,EAAM6W,gBACrBc,EAASxb,OAC/B,CACYia,EAAQnf,IAAIiB,EAAMoe,EAAO,EAE7BwB,kBAAmBnQ,MAAOyO,EAASle,KAC/B,MAAMqf,EAAkBnB,EAAQtf,IAAIwZ,EAAKI,QAAQxY,UAC3Cqf,EAAgBQ,YAAYzH,EAAKmH,SAASvf,IAChDke,EAAQ5Z,OAAOtE,EAAK,EAExBqd,UAAW5N,MAAOkN,EAAOpC,EAAK6C,KAC1B,IAAI0C,EAAQ,EAEZ,MAAMvW,EAAS,GACfpM,OAAOqH,KAAK+V,EAAIhW,SAASI,SAAQ,SAAUhB,GACvC,MAAM2Z,EAAI/C,EAAIhW,QAAQZ,GAChBoc,EAAK3C,EAAI7Y,QAAQZ,KAElBoc,GACA5H,EAAGuG,OAAOpB,EAAES,OACTT,EAAa,UAAE0C,UAAYD,EAAc,UAAEC,aAE/CzW,EAAO9J,KAAKkE,GACZmc,IAEpB,IAGYvW,EAAO0W,OAEP,MAAMC,EAAS,GAWf,GAVA/iB,OAAOqH,KAAK4Y,EAAI7Y,SAASI,SAAQ,SAAUhB,GAClC4W,EAAIhW,QAAQZ,KACbuc,EAAOzgB,KAAKkE,GACZmc,IAEpB,IAGYI,EAAOD,OAAOE,WAETL,EACD,OAGJ,MAAM5B,EAAuB,WAAb3D,EAAI1W,KAAoB0W,EAAI2D,QAAUd,EAAIc,QAE1D,IAAK,MAAMle,KAAQuJ,EAAQ,CACvB,MAAM6W,EAAUhI,EAAKiI,UACjBrgB,EAAKoV,QAAQuH,EAAMiB,WAAY,MACjC0C,UAAU,GACZ,GAAiB,UAAblD,EAAIvZ,KAAkB,CACtB,MAAMua,EAASF,EAAQtf,IAAIwhB,GACrBtY,QAAc0U,EAAc2C,gBAAgBf,GAClD5B,EAAcqC,gBAAgB7e,EAAM8H,EACxD,KAAuB,CACH,MAAMA,EAAQ0U,EAAcgC,eAAexe,SACrCwc,EAAc4C,iBAAiBlB,EAASkC,EAAStY,EAC3E,CACA,CAEY,IAAK,MAAM9H,KAAQkgB,EACf,GAAiB,UAAb9C,EAAIvZ,KACJ2Y,EAAcwC,iBAAiBhf,OAC5B,CACH,MAAMogB,EAAUhI,EAAKiI,UACjBrgB,EAAKoV,QAAQuH,EAAMiB,WAAY,MACjC0C,UAAU,SACN9D,EAAcoD,kBAAkB1B,EAASkC,EACnE,CACA,GA0BI,OAtBA9L,EAAO6D,GAAGoE,YAAYgE,eAAiB/D,EAsBhC/M,eAA6BzP,EAAM6c,GACtC,GAA0C,8BAAtCA,EAAiB9Z,YAAYpG,KAC7B,MAAM,IAAIoL,UACR,0EAcN,OArCJ,SAA+B/H,GACvBmY,EAAGM,UAAWN,EAAGM,UAAUzY,GAC1ByY,GAAUN,EAAInY,GAEnB,MAAMkW,KAAEA,GAASiC,EAAGsG,WAAWze,EAAM,CACjCwgB,cAAc,IAGlB,GAAIrI,EAAGsI,aAAavK,GAChB,MAAM,IAAIjG,MAAM,SAASjQ,2CAE7B,IAAKmY,EAAG2F,MAAM5H,EAAK6H,MACf,MAAM,IAAI9N,MAAM,SAASjQ,uCAG7B,IAAK,MAAM4F,KAAKsQ,EAAKyI,SACjB,MAAM,IAAI1O,MAAM,cAAcjQ,kBAE1C,CAQQ0gB,CAAsB1gB,GAEtBmY,EAAGwE,MACCxE,EAAGoE,YAAYgE,eACf,CAAE1D,oBACF7c,SAIEkc,GAAO/D,GAAI,GAEV,CAEH+D,OAAQzM,eAAkByM,GAAO/D,GAAI,GAE5C,CACL,CAEA,MAAMgG,GAAe1O,MAAOkR,IACxB,MAAMzC,EAAU,SAEhBzO,eAAemR,EAAQC,GACnB,UAAW,MAAM/Y,KAAS+Y,EAAa5b,SACnCiZ,EAAQze,KAAKqI,GACM,cAAfA,EAAMuW,YACAuC,EAAQ9Y,EAG9B,CAEU8Y,CAAQD,GAEd,MAAMpgB,EAAS,IAAI6E,IACnB7E,EAAOxB,IAAI,IAAK4hB,GAChB,IAAK,MAAMvC,KAAUF,EAAS,CAC1B,MAAM4C,SAAsBH,EAAUhjB,QAAQygB,IAAS1R,KAAK,KAC5DnM,EAAOxB,IAAI+hB,EAAc1C,EACjC,CACI,OAAO7d,CAAM,ECpSXuY,GAAQ,CAACX,EAAInY,KACf,IACImY,EAAGW,MAAM9Y,EACjB,CAEI,MAAO4F,GAEX,GAGMwV,GAAWH,GAAe,OAEhC,IAAe8F,GAAA,CACfld,KAjBa,cAkBTyQ,OAAQ,CAAC0M,EAAU,WACf,8EAA8EA,oBAClF,YAAMniB,EAAOoiB,gBAAEA,GAAmBvK,EAAQ5K,EAAKuN,GAC3C,MAAM/a,OAAEA,EAAMG,OAAEA,EAAMG,IAAEA,GAAQZ,EAAM,CAClCM,OAAQD,EAASF,QAAQI,OACzBE,OAAQJ,EAASF,QAAQO,OAE7BoN,EAAMA,EAAIsJ,QAAQ,UAAW,SAC7BgG,GAAS,uBACT,MAAMtc,QAAoBF,EAAIqiB,EAAgB,CAAEC,YAAY,EAAO5iB,SAAQG,SAAQqN,SAC7EqV,EAAaC,GAAe5iB,KAAKd,KAAMoB,EAAaua,GAa1D,OAZA6B,GAAOnc,IAAID,EAAaqiB,SAClBhG,GAAazd,KAAM0d,GAAUtc,EAAa4X,EAAQ2C,GAExD3b,KAAKgX,UAAU5V,EAAa,WAAY+c,IACpCnF,EAAO4E,WACPF,GAAS,0BACH+F,EAAWzK,EAAO4E,SAAS5W,IAAIsR,GAAeqD,IACpD+B,GAAS,oBAEbA,GAAS,sBACJtc,EAAYuiB,gBACbviB,EAAYuiB,cAAgBhF,GAAmBvd,EAAYwiB,UACxDxiB,CACV,EACDyV,oBACJL,IAAIA,GACAM,YACAC,YACA9F,UAAW,CAAC7P,EAAalC,IAAUkC,EAAYyiB,QAAQC,KAAK5kB,GAC5D8X,UAAW,CAAC5V,EAAakB,EAAMZ,EAAQ0M,KACnC,MAAMqM,GAAEA,EAAImJ,SAASlJ,KAAEA,EAAIC,QAAEA,IAAcvZ,EACrC2iB,EAAK,CAAEtJ,KAAIC,OAAMC,WACjBqJ,EAAShG,GAAU1b,EAAM8L,GAC/B,GAAI4V,EAAQ,CACR,MAAMC,EAAa3hB,EAAKqH,MAAM,GAAG,GAEjC,OADmB,OAAfsa,GAAqBxJ,EAAGW,MAAM6I,GAC1BD,GACJ,IAAK,MACL,IAAK,MAAO,CACR,MAAME,EAAO,IAAIC,KAAK,CAACziB,GAAS,CAAEyE,KAAM,oBACxC,OF9DKwP,OAAgC,qBE8DxBjS,MAAKqO,OAASqS,aAAYC,mBAAkBC,gBACrD,MACMC,EAAY,IAAID,EADA,IAAIF,EAAWF,IAErC,IAAK,MAAM9Z,WAAema,EAAUC,aAAc,CAC9C,MAAMC,UAAEA,EAASlI,SAAEA,GAAanS,EAC1BnL,EAAOglB,EAAa1H,EAC1B,GAAIkI,EAAWrJ,GAAMX,EAAIxb,OACpB,CACDmc,GAAMX,EAAIC,EAAKI,QAAQ7b,IACvB,MAAMyC,QAAe0I,EAAMyF,QAAQ,IAAIwU,GACvC5J,EAAGzD,UAAU/X,EAAMyC,EAAQ,CACvBsZ,QAAQ,GAE5C,CACA,CACwBuJ,EAAUhe,OAAO,GAEzC,CACgB,IAAK,MACL,IAAK,SAAU,CACX,MAAMme,EAAM,aAqBZ,OApBA1N,GAAU+M,EAAIW,EAAKhjB,QACnBN,EAAY6c,UAAU,yIAE0CyG,4FAE7CT,msBAaFS,4BAGrC,EAEA,CACQ,OAAO1N,GAAU+M,EAAIzhB,EAAMZ,EAAO,GAI1CqQ,eAAe2R,GAAetiB,EAAaua,EAASiC,GAChD,IAAIO,EACJ,IAAK,MAAMwG,KAAc/G,EACrB,GAAI+G,EAAWxI,SAAS,QAAS,CAC7B,MAAM/N,EAAMgK,GAAYuM,EAAYhJ,GAC9Bja,QAAeuC,EAAMmK,GAAKwN,oBAC1B5b,KAAKgX,UAAU5V,EAAa,MAAOM,EAAQ0M,EAC7D,MAEiB+P,IAAKA,EAAM/c,EAAYyc,SAAS,QACrCM,EAAIyG,QAAQD,EAGxB,CC7HA,MACME,GAAc,CAAEC,eAAgBrlB,OAAO0T,cAEvCtI,UAAEA,IAAcE,KAItB,IAAIga,IAAmB,EACvB,MAAMC,GAAiB3P,GAAU,IAAIpU,KACjC,IAEI,OADA8jB,IAAmB,EACZ1P,KAAUpU,EACzB,CACY,QACJ8jB,IAAmB,CAC3B,GAGA,IAAIE,IAAa,EACjB,MAAMC,GAAgB,KAClB,GAAID,GAAY,OAChBA,IAAa,EAEb,MAAMrQ,EAAU,IAAIvU,QACdwU,EAAO3V,GAASA,EAAMimB,UACtBC,EAAYnkB,IACd,IAAK,IAAI6B,EAAI,EAAGA,EAAI7B,EAAK0E,OAAQ7C,IAAK,CAClC,MAAM5D,EAAQ+B,EAAK6B,GACnB,GACqB,mBAAV5D,GACP,SAAUA,EACZ,CAEE6lB,IAAmB,EAEnB,IAAI5S,EAAQyC,EAAQ1T,IAAIhC,IAAQiW,QAChC,IAAKhD,EACD,IAEIA,EAAQtG,GAAO3M,EAAMmmB,OAAQxQ,GAC7BD,EAAQvT,IAAInC,EAAO,IAAIqW,QAAQpD,GACvD,CACoB,MAAOtR,GACHJ,QAAQI,MAAMA,EACtC,CAEoBsR,IAAOlR,EAAK6B,GAAKqP,GACrB4S,IAAmB,CACnC,CACA,IAIU7d,KAAEA,GAASwP,SACX0I,EAAQlY,EAAKpG,KAAKoG,EAAMA,EAAKkY,OAEnC3f,OAAO0Y,iBAAiBzB,SAAStT,UAAW,CACxCgc,MAAO,CACH,KAAAlgB,CAAMsB,EAASS,GAEX,OADI8jB,IAAkBK,EAAUnkB,GACzBme,EAAMpf,KAAMQ,EAASS,EAC5C,GAEQiG,KAAM,CACF,KAAAhI,CAAMsB,KAAYS,GAEd,OADI8jB,IAAkBK,EAAUnkB,GACzBme,EAAMpf,KAAMQ,EAASS,EAC5C,IAEM,EAGAyc,GAAWH,GAAe,MAC1B+H,GAAY,IAAIjlB,QAEtB,IAAeklB,GAAA,CACfpf,KA5Ea,UA6ETyQ,OAAQ,CAAC0M,EAAU,WACf,qCAAqCA,qBACzC,YAAMniB,EAAOqkB,YAAEA,GAAexM,EAAQ5K,EAAKuN,GAElCpB,IAA0D,SAArCvB,EAAOyM,2BAC7BP,KACJxH,GAAS,mBACT,IAAIE,SAAEA,EAAQ8H,WAAEA,GAAe1M,EAC3B4E,IAAUA,EAAWA,EAAS5W,IAAIsR,GAAeqD,IACrD+B,GAAS,mBACT,MAAMiI,EAAWvX,EAAIzE,MAAM,EAAGyE,EAAIoO,YAAY,MAExCsB,EAAU,IAAIrW,EAAWke,GACzB9gB,EAAU,CAAE8gB,YACZC,EAAiC,UAA1B5M,EAAO6M,eAGpB,SAFM/H,EAAQlW,OAETge,GAEA,GAAIhI,EAAU,CACfA,EAAWA,EAAS2E,OAEpB,MAAMtc,EAAM4E,GAAU+S,GACtB,GAAIE,EAAQ3W,IAAIlB,GAAM,CAClB,MAAMie,EAAO,IAAIC,KACb,CAACrG,EAAQ5c,IAAI+E,IACb,CAAEE,KAAM,qBAGZtB,EAAQihB,YAAc/V,IAAIgW,gBAAgB7B,GAK1Crf,EAAQ+Y,SAAWA,EAAS5W,KAAI/H,GAAQA,EAAKsY,MAAM,UAAU,KAC7DqG,EAAW,IAC3B,CACA,OApBmBE,EAAQnX,QAqBnB+W,GAAS,kBACT,MAAM9c,OAAEA,EAAMG,OAAEA,EAAMG,IAAEA,GAAQZ,IAC1Bc,QAAoBF,EACtBskB,EAAY,CAAE5kB,SAAQG,YAAW8D,KAE/B4e,EAAaC,GAAe5iB,KAAKM,GASvC,OARIskB,GAAYJ,GAAUjkB,IAAID,EAAaskB,GAC3ClI,GAAOnc,IAAID,EAAaqiB,SAClBhG,GAAazd,KAAM0d,GAAUtc,EAAa4X,EAAQ2C,GAEpDiC,SAAgB6F,EAAW7F,EAAUE,EAAS8H,SAC5C9H,EAAQvX,QACV1B,EAAQihB,aAAa/V,IAAIiW,gBAAgBnhB,EAAQihB,aACrDpI,GAAS,kBACFtc,CACV,EACDyV,oBACAL,IAAKwO,GAAexO,IACpBM,SAAUkO,GAAelO,IACzBC,SAAUiO,GAAejO,IACzB9F,UAAW,CAAC7P,EAAalC,IAAU+R,GAAU/J,KAAK9F,EAAalC,GAC/D8X,UAAW,CAAC5V,EAAakB,EAAMZ,EAAQ0M,KACnC,MAAM4V,EAAShG,GAAU1b,EAAM8L,GAC/B,GAAI4V,EACA,OAAO5iB,EAAY6kB,cAAcvkB,EAAQsiB,EAAQ,CAC7CC,WAAY3hB,EAAKqH,MAAM,GAAK,KAGpC,MAAM8Q,GAAEA,EAAEC,KAAEA,EAAMkJ,SAASjJ,QAAEA,IAAcvZ,EAC3C,OAAO4V,GAAU,CAAEyD,KAAIC,OAAMC,WAAWrY,EAAMZ,EAAO,GAI7D,SAASuP,GAAU/R,GACf,MAAQgnB,KAAKrC,QAAEA,IAAc7jB,KAC7B,GAAId,GAA0B,iBAAVA,EAAoB,CACpC,GAAIA,aAAiB2kB,EAAS,OAAO3kB,EAAM4kB,KAAKe,IAGhD,GAAI3lB,aAAiBwI,IAAK,OAAO,IAAIA,IAAI,IAAIxI,EAAM2H,YACnD,GAAI8E,GAAQzM,GAAQ,OAAOA,EAAM8H,IAAIiK,GAAWjR,KACxD,CACI,OAAOd,CACX,CAGA6S,eAAe2R,GAAe9F,EAAUE,EAAS8H,GAAO,GAIpD,MAAM5kB,IAAEA,GAAQP,QACV0lB,EAAO,CAACrN,KAAWxM,KACrBtL,EAAI8X,KAAWxM,GACf7L,QAAQO,IAAMA,EACd0c,GAAS5E,GACTrY,QAAQO,IAAMmlB,CAAI,EAEtB1lB,QAAQO,IAAMmlB,QACRnmB,KAAKomB,YAAY,YACvB,MAAMC,EAAWrmB,KAAK6d,SAAS,YAI/B,GAHIyH,GAAUne,IAAInH,OAAOqmB,EAASC,eAAehB,GAAUpkB,IAAIlB,aACzDqmB,EAASzB,QAAQhH,EAAU,CAAE2I,YAAY,IAC/C9lB,QAAQO,IAAMA,EACV4kB,GAAS9H,aAAmBrW,EAAa,CACzC,MAAM+e,EAASH,EAASpe,SACxB6V,EAAQzc,IAAIwJ,GAAU+S,GAAW4I,EACzC,CACIH,EAASlB,SACb,CCzLA,MAAMhf,GAAO,iBACPsgB,GAAStgB,GAAKuR,QAAQ,OAAQ,KASpC,IAAegP,GAAA,CACfvgB,KAAIA,GACAwgB,cAAc,EACd/P,OAAQ,CAAC0M,EAAU,UACf,oDAAoDA,sBACxD,YAAMniB,EAAOylB,cAAEA,GAAiB5N,EAAQ5K,EAAKuN,GACzCvN,EAAMA,EAAIsJ,QAAQ,oBAAqB,cACvC,MAAMhW,QAAeuC,EAAMmK,GAAKwN,cAC1BhF,QAAeiQ,YAAYC,QAAQplB,IACjCqlB,GAAI3lB,SAAsBwlB,EAAchQ,GAIhD,OAHIoC,EAAO+C,aAAagB,GAAW/c,KAAMoB,EAAa4X,EAAO+C,MAAOJ,GAChE3C,EAAO/U,aAAa4X,GAAW7b,KAAMoB,EAAa4X,EAAO/U,MAAO0X,GAChE3C,EAAOK,kBAAkB+D,GAAepE,EAAOK,WAAYsC,GACxDva,CACV,EAED,gBAAAyV,CAAiBzV,EAAanC,EAAMC,GAChCD,EAAOA,EAAKyY,QAAQ,OAAQ,MAC5B,MAAMzL,EAAK,YAAYwa,MAAUxnB,IACjCG,WAAW6M,GAAM/M,EACjBc,KAAKwW,IAAIpV,EAAa,iBAAiBnC,gBAAmBgN,aACnD7M,WAAW6M,EACrB,EACDuK,IAAK,CAACpV,EAAaqV,KAASxV,IAASG,EAAY4lB,KAAK/P,GAAOR,MAAUxV,GACvE6V,SAAU,CAAC1V,EAAaqV,KAASxV,IAASG,EAAY6lB,UAAUhQ,GAAOR,MAAUxV,GACjF,cAAM8V,CAAS3V,EAAaqV,EAAM3Q,GAE9B,GAAI,qBAAqB2R,KAAKhB,GAAO,CACjC,MAAQkB,GAAI1Y,GAASiK,OACf+C,EAAK,YAAYwa,WACvBrnB,WAAW6M,GAAMnG,EACjB9F,KAAKwW,IACDpV,EACA,+BAA+BnC,iBAAoBgN,cAEhD7M,WAAW6M,EAC9B,KAAe,CAEH,MAAMoJ,EAASrV,KAAKwW,IAAIpV,EAAa,WAAWqV,YAC1CpB,EAAOnO,KAAKuP,EAAMrV,EAAY8lB,KAAKphB,GACrD,CACK,EACDmL,UAAW,CAAC/I,EAAGhJ,IAAUA,EACzB8X,UAAW,KACP,MAAM,IAAIzE,MAAM,iCAAiCpM,KAAO,GChDhE,IAAeghB,GAAA,CACfhhB,KARa,UASTyQ,OAAQ,CAAC0M,EAAU,WACf,wCAAwCA,SAC5C,YAAMniB,EAAOimB,WAAEA,EAAUC,aAAEA,GAAgBrO,EAAQ9Q,EAAGyT,GAClD,MAAM/a,OAAEA,EAAMG,OAAEA,EAAMG,IAAEA,GAAQZ,IAC1Bc,QAAoBF,GAAI,IAAIkmB,GAAaE,gBAQ/C,OAPAlmB,EAAYjC,OAAOooB,SAASF,EAAaG,MAAO7e,IAC5CvH,EAAYjC,OAAOsoB,SAAS9e,EAAO,QAAS5H,GAC5CK,EAAYjC,OAAOsoB,SAAS9e,EAAO,WAAY/H,EAAO,IAEtDoY,EAAO+C,aAAagB,GAAW/c,KAAMoB,EAAa4X,EAAO+C,MAAOJ,GAChE3C,EAAO/U,aAAa4X,GAAW7b,KAAMoB,EAAa4X,EAAO/U,MAAO0X,GAChE3C,EAAOK,kBAAkB+D,GAAepE,EAAOK,WAAYsC,GACxDva,CACV,EAEDyV,iBAAkB,CAACzV,EAAanC,EAAMC,KAClCkC,EAAYjC,OAAOkC,IAAIpC,EAAMC,EAAM,EAEvCsX,IAAK,CAACpV,EAAaqV,KAASxV,KACxB,IACI,OAAOG,EAAYsmB,aAAazQ,GAAOR,MAAUxV,EAC7D,CACQ,MAAOJ,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACvC,GAEIiW,SAAU/E,MAAO3Q,EAAaqV,KAASxV,KACnC,IACI,aAAaG,EAAYumB,SAAS1Q,GAAOR,MAAUxV,EAC/D,CACQ,MAAOJ,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACvC,GAEIkW,SAAUhF,MAAO3Q,EAAaqV,EAAM3Q,KAGhC,MAAO7G,KAAS6H,GAAQ2P,EAAKc,MAAM,KACnC,IACI/W,EADAiE,EAASrD,EAAYjC,OAAO+B,IAAIjC,GAEpC,IAAK,MAAMgH,KAAOa,GAAOtG,EAASiE,GAAU,CAACA,EAAQA,EAAOwB,IAC5D,UACUxB,EAAOyC,KAAK1G,EAASsF,EACvC,CACQ,MAAOjF,GACHT,EAAGc,IAAIE,GAAaR,OAAOC,EACvC,GAEIoQ,UAAW,CAAC/I,EAAGhJ,IAAUA,EACzB8X,UAAW,EAEH4Q,SACIhR,QAAU6D,QAGlBnY,EACAZ,IR/CqB,EAAC+Y,EAAInY,EAAMZ,KACpCqZ,GAAUN,EAAIK,GAAQxY,IACtBA,EAAOrC,GAAQwa,EAAInY,GACZmY,EAAGzD,UAAU1U,EAAM,IAAIV,WAAWF,GAAS,CAAEsZ,QAAQ,KQ6CvD6M,CAAcpN,EAAInY,EAAMZ,ICjEjC,MACMiC,GAAI,IAAItD,QAIRmW,GAAMzE,MAAO3Q,EAAaqV,KAC9B,MAAMqR,QAAEA,EAAO3C,QAAEA,EAAO/kB,GAAEA,GAAOuD,GAAEzC,IAAIE,IACjC2mB,OAAEA,EAAMllB,OAAEA,SAAiBilB,EAAQE,SAAS/Q,GAAOR,IACzD,IAAK,MAAMtQ,KAAEA,EAAIyG,KAAEA,KAAUmb,EAAQ3nB,EAAG+F,GAAMyG,GAI9C,OAAOf,GAAOhJ,EAAQsiB,EAAS,CAAEjR,OAAO,GAAQ,EAGlD,IAAe+T,GAAA,CACX9hB,KAhBS,OAiBTwgB,cAAc,EACd/P,OAAQ,CAAC0M,EAAU,UACf,qCAAqCA,kBACzC,YAAMniB,CAAOyV,EAAQoC,EAAQ9Q,EAAGyT,GAC5B,MAAMza,IAAEA,GAAQZ,IACVc,EAAc,IAAIwV,EAAOsR,WACzBhnB,EAAIE,EAAYb,OAAOmD,MAAK,IAAMtC,KACxC,MAAM0mB,QAAgB,IAAI1mB,EAAY+mB,QAUtC,OATAxkB,GAAEtC,IAAID,EAAa,CACjBwV,SACAkR,UACA3C,QAAS2C,EAAQ3C,QAAQrkB,KAAKgnB,GAC9B1nB,GAAIA,EAAGc,IAAIE,KAET4X,EAAO+C,aAAagB,GAAW/c,KAAMoB,EAAa4X,EAAO+C,MAAOJ,GAChE3C,EAAO/U,aAAa4X,GAAW7b,KAAMoB,EAAa4X,EAAO/U,MAAO0X,GAChE3C,EAAOK,kBAAkB+D,GAAepE,EAAOK,WAAYsC,GACxDva,CACV,EAED,gBAAAyV,CAAiB3O,EAAGjJ,GAChBwB,QAAQ4Q,KAAK,oCAAoCpS,2BAKpD,EACDuX,OACAM,SAAUN,GACV,cAAMO,CAAS3V,EAAaqV,EAAM3Q,SAKxB1E,EAAYgnB,UAAU,GAAG3R,WAAe,CAC5CrO,IAAK,CAAEtC,MAAO,CAAEK,KAAM,CAAEL,EAAMK,SAEnC,EACD8K,UAAW,CAAC/I,EAAGhJ,KACXuB,QAAQO,IAAI,eAAgB9B,GACrBA,GAEX8X,UAAW,QC3DR,MAAMvD,GAAW,IAAI/L,IAGf2gB,GAAU,IAAI3gB,IAGd4gB,GAAY,GAGZC,GAAW,GAGXnnB,GAAc,IAAI4C,MAAM,IAAI0D,IAAO,CAC5C,GAAAxG,CAAI8F,EAAKiF,GACL,IAAKjF,EAAIG,IAAI8E,GAAK,CACd,MAAO9F,KAASmG,GAAQL,EAAGsL,MAAM,KAC3BnW,EAAcqS,GAASvS,IAAIiF,GAC3BiI,EAAM,iCAAiCqJ,KAAKnL,GAC5CA,EAAK0C,KAAK,KACV5N,EAAYwV,UAAUtK,GAC5BtF,EAAI3F,IAAI4K,EAAI,CACRmC,MACAwI,OAAQjB,OAAgCvH,GACxCjN,OAAQC,EAAYD,OAAOL,KAAKM,IAEhD,CACQ,MAAMgN,IAAEA,EAAGwI,OAAEA,EAAMzV,OAAEA,GAAW6F,EAAI9F,IAAI+K,GACxC,MAAO,CAAC+M,EAAQ2C,IACZ/E,EAAOlT,MAAMkT,IACTyR,GAAQhnB,IAAI4K,EAAI+M,GACT7X,EAAOyV,EAAQoC,EAAQ5K,EAAKuN,KAE9C,IAICjN,GAAYtN,IACd,IAAK,MAAM+E,IAAQ,GAAGkO,OAAOjT,EAAY+E,MACrCsN,GAASpS,IAAI8E,EAAM/E,GACnBknB,GAAUvmB,KAAK,gBAAgBoE,OAC/BoiB,GAASxmB,KAAK,GAAGoE,KACzB,EAUA,IAAK,MAAM/E,IAAe,CAACuV,GAAO0M,GAAakC,GAASmB,GAAgBS,GAASc,IAC7EvZ,GAAStN,GCnDb,MAAMuJ,MAAEA,IAAUI,KAILyd,GAAsB,CAACxP,EAAQyP,EAAY,kBACpD,IAAItiB,SAAc6S,EAKlB,MAJa,WAAT7S,GAAqB,qBAAqBsR,KAAKuB,GAC/C7S,EAAO+C,OAAOyO,GAEdqB,EAASyP,EACN,CAACrQ,GAAYY,GAAS7S,EAAK,EAGzBuiB,GAAgB,CAAC1P,EAAQyP,EAAW5jB,EAAU,CAAA,KACvD,MAAO8jB,EAAUxiB,GAAQqiB,GAAoBxP,EAAQyP,GAarD,MAZa,SAATtiB,EACAtB,EAAUZ,EAAM0kB,GAAU3e,OACV,SAAT7D,EACPtB,EAAUZ,EAAM0kB,GAAUpK,OAAO7a,KAAK4a,IACtB,WAATnY,EACPtB,EAAU+jB,GAAY5P,GACN,WAAT7S,GAAqB6S,EAC5BnU,EAAUmU,EACM,QAAT7S,GAAqC,iBAAZtB,IAChCA,EAAU+jB,GAAY/jB,IAGnB,CAACA,EADRmU,EAAS2P,EACe,EAGtBC,GAAc5P,IAChB,IACI,OAAOrO,GAAMqO,EACrB,CAEI,MAAO9Q,GACH,OAAOoW,GAAKtF,EACpB,GAea6P,GAAa,CAAC5c,EAAI+M,EAAQyP,EAAW5jB,EAAU,CAAA,KACpDmU,KAGCnU,EAASmU,GAAU0P,GAAc1P,EAAQyP,EAAW5jB,IAGlD5E,GAAQ4E,GAASnB,MAAKmB,GAAWzD,GAAY6K,GAAIpH,EAASmU,MAQxD8P,GAAe,CAAC3iB,EAAMmd,EAAU,KACzC,GAAGnd,KAAQmd,IAAU5L,QAAQ,KAAM,IC1ExB,SAAAqR,GAAUvnB,EAAWxB,MAClC,OAAO8T,OAAOtS,GAAUkW,QACtB,sCACA,CAACxP,EAAG8gB,EAAS9T,EAAIjW,IACfA,IAASiW,EACP,GAAG8T,GAAW,cAAc/pB,KAC5BiJ,GAGR,CCPA,MAAM+gB,GAAY,YACZC,GAAW,WAEJzS,GAAO,CAChB,OAAOwS,KACP,OAAOA,UACP,OAAOC,KACP,OAAOA,WAGEC,GAAK,CACd,WACA,UACA,KAAKF,KACL,KAAKA,UACL,KAAKC,KACL,KAAKA,WASF,SAASE,GAAMC,EAAUjoB,GAC5B,MAAMoV,IAAEA,EAAGM,SAAEA,GAAarD,GAASvS,IAAIlB,KAAKmG,MAC5C,MAAO,IACAkjB,EACH7S,IAAKA,EAAI1V,KAAKd,KAAMoB,GACpB0V,SAAUA,EAAShW,KAAKd,KAAMoB,GAEtC,CAWO,MAAMkoB,GAAY,CAAC1S,EAAQyS,EAAUvU,EAAKkU,EAAS7P,EAAQC,KAC9D,GAAID,GAAUC,EAAO,CACjB,MAAMmQ,EAAUH,GAAMtoB,KAAK8V,EAAQyS,GAC7BpqB,EAAO+pB,EAAU,WAAa,MAC9B3T,EAASuB,EAAO3X,GACtB2X,EAAO3X,GAAQ+pB,EACXjX,eAAgB3Q,EAAaqV,KAASxV,GAC9BkY,SAAcA,EAAOjS,KAAKlH,KAAMupB,EAAQnoB,GAAc0T,GAC1D,MAAMjS,QAAewS,EAAOnO,KACxBlH,KACAoB,EACAqV,KACGxV,GAGP,OADImY,SAAaA,EAAMlS,KAAKlH,KAAMupB,EAAQnoB,GAAc0T,GACjDjS,CACV,EACD,SAAUzB,EAAaqV,KAASxV,GACxBkY,GAAQA,EAAOjS,KAAKlH,KAAMupB,EAAQnoB,GAAc0T,GACpD,MAAMjS,EAASwS,EAAOnO,KAAKlH,KAAMoB,EAAaqV,KAASxV,GAEvD,OADImY,GAAOA,EAAMlS,KAAKlH,KAAMupB,EAAQnoB,GAAc0T,GAC3CjS,CACvB,CAEA,GC9De,IAAA2mB,GAAA,MACX,WAAAnkB,CAAYjE,EAAaqoB,EAAQ,IAC7B,MAAMpM,KAAEA,EAAIzN,OAAEA,GAAW6Z,EACzBzpB,KAAKoB,YAAcA,EACnBpB,KAAK0pB,SAAWrM,GAAMqM,SAEtB,IAAK,MAAMzjB,KAAO0jB,GAAQhgB,MAAM,GAC5B3J,KAAKiG,GAAO2J,IAAS3J,GACzB,IAAK,MAAMA,KAAO2jB,GACd5pB,KAAKiG,GAAO2J,IAAS3J,EACjC,CACI,MAAAuE,GACI,MAAMif,EAAQ,CAAE,EAEhB,IAAK,MAAMxjB,KAAO0jB,GAAQhgB,MAAM,GACxB3J,KAAKiG,KAAMwjB,EAAMxjB,GAAO8iB,GAAe/oB,KAAKiG,KAGpD,IAAK,MAAMA,KAAO2jB,GACV5pB,KAAKiG,KAAMwjB,EAAMxjB,GAAOgR,GAAOjX,KAAKiG,OAE5C,OAAOwjB,CACf,GCXA,IAAeI,GAAA,IAAI5oB,IAOf,SAAiBmN,EAAKvJ,GAClB,GAAI5D,EAAK0E,OAAQ,CACb,MAAOQ,EAAMmd,GAAWriB,GACxB4D,EAAUX,GAAO,CAAE,EAAEW,GAAW,CAAEsB,OAAMmd,aAC3Bnd,OAAMtB,EAAQsB,KAAOA,EAC9C,CAKQ,MAAQ6S,GAAWwP,GAAoB3jB,EAAQmU,OAAQnU,EAAQ4jB,WAGzD7Y,EtB/BC,KAAI3O,IAAS,IAAIsM,GAAOwC,IAAIgW,gBAAgB,IAAI5B,KAAK,CAAC,i0wCAA0wxCzM,QAAQ3B,GAAGC,KAAQ,CAAC7P,KAAK,+BAAgClF,GsB+Bj3xC4oB,CAAQ,CAAElb,cADH9J,GAAS8J,eAAiB9J,GAASilB,kBAEnDrc,YAAEA,GAAgBmC,EAClBma,EAAS/pB,gBAAgBgqB,GAEzBpiB,EAAO1D,GACT0L,EAAOuC,MACP,CAAEwH,YAAUC,eAGVqQ,EAAWtqB,QAAQC,gBAEzB,IAAIsqB,EAAYjmB,EAAMmK,GACjBmQ,OACA7a,MAAK+S,IACF,MAAMgT,EAAQM,EAAS/pB,KAAKwK,cAAW,EACvCiD,EAAYvG,KAAK0I,EAAQ,CAAE/K,UAASmU,SAAQvC,OAAMgT,SAAQ,IAE7D/lB,MAAK,KAEFwmB,EAAY,CAAExmB,KAAMwR,GAAMA,IAAM,IAoCxC,OAjCAiD,GAAiBvI,EAAQ,CACrBhI,KAAM,CAAE1I,MAAO0I,GACfsH,MAAO,CAAEhQ,MAAO+qB,EAAS9pB,SACzBsN,YAAa,CACTvO,MAAO,CAAC0N,KAASN,IAAS4d,EAAUxmB,MAChC,IAAM+J,EAAYvG,KAAK0I,EAAQhD,KAASN,MAGhDnH,QAAS,CACL4c,UAAU,EACVoI,cAAc,EACdjrB,MAAOuB,QAAQI,SAIvB+O,EAAOnB,iBAAiB,WAAW3I,IAC/B,MAAM8G,KAAEA,GAAS9G,EACXskB,EAAUxd,aAAgB2F,OAC5B6X,GAAoB,oBAATxd,KACX9G,EAAMiH,2BACFqd,GACAH,EAAS/pB,OAAO0M,GAChBgD,EAAOzK,QAAQ0G,GAAO/F,EAAO,CACzBK,KAAM,CAAEjH,MAAO,SACf2B,MAAO,CAAE3B,MAAO0N,OAGnBqd,EAAShqB,QAAQ2P,GACtC,IAGYma,GAAQ/pB,KAAK0pB,WAAW1pB,KAAKoB,YAAawO,GAEvCA,CACV,EC9FE,MAAMya,GAAkB,kBCW/B,IAAAC,GAAejQ,IACb,MAAMwC,IAAEA,EAAGjN,OAAEA,GAAWyK,EAAQkQ,WAChC,GAAI3a,EAAQ,CACR,IAAI1Q,MAAEA,GAAU0Q,EAGhB,GAAI1Q,EAAO,MAAM,IAAI4d,YDfQ,4BCiB7B,GADA5d,EAAQ2d,GAAK3d,OACRA,EAAO,CAER,GAAI2d,EAAK,MAAM,IAAIC,YDpBG,4BCqBtB,GAAKzC,EAAQmQ,kBAER,CACD,MAAMC,UAAEA,EAASC,UAAEA,EAASvkB,KAAEA,GAASkU,EACjCpb,EAAOkH,GAAQukB,EAAUhT,QAAQ,WAAY,IACnDxY,EAAQ+Y,GAASwS,GACjBhqB,QAAQ4Q,KACJ,iCAAiCpS,4CACjCC,EAElB,MATcA,EAAQmb,EAAQsQ,YAepB,OAJY5a,IAAIgW,gBAAgB,IAAI5B,KAAK,CAAClN,GAAO/X,IAAS,CAAEiH,KAAM,eAK5E,CACM,OAAOjH,CACb,CAEE,GAAI2d,GAAwBxC,EAAQsQ,YAtCjCjT,QAAQ,oBAAqB,IAC7BA,QAAQ,qBAAsB,IAC9BF,OAqCD,MAAM,IAAIsF,YAAYuN,GAAgB,EC/B1C,MAMaO,GAAc,CAACC,EAAQC,KAChC,MAAM5oB,EAPM,CAAC2oB,IACb,IAAIE,EAASF,EACb,KAAOE,EAAOC,YAAYD,EAASA,EAAOC,WAC1C,OAAOD,CAAM,EAIAE,CAAQJ,GACrB,OAAO3oB,EAAKgpB,eAAeJ,IjDfrB,EAAC7oB,EAAKC,EAAOC,WAAaD,EAAK4X,cAAc7X,GiDePuG,CAAEsiB,EAAc5oB,EAAK,EAG/D+a,GAAU,IAAI5c,QACd8qB,GAAmB,CACrB,GAAAjqB,GACI,IAAIuD,EAASwY,GAAQ/b,IAAIlB,MAMzB,OALKyE,IACDA,EAAStC,SAAS8X,cAAc,GAAGja,KAAKmG,eACxC8W,GAAQ5b,IAAIrB,KAAMyE,GAClBic,GAAO1gB,OAEJyE,CACV,EACD,GAAApD,CAAIoD,GACsB,iBAAXA,EACPwY,GAAQ5b,IAAIrB,KAAM4qB,GAAY5qB,KAAMyE,KAEpCwY,GAAQ5b,IAAIrB,KAAMyE,GAClBic,GAAO1gB,MAEd,GAGCorB,GAAU,IAAI/qB,QAEPgrB,GAAe,IAAI3jB,IAwC1B4jB,GAAW,CAACxW,EAAKtQ,KACnB,MAAMtF,EAAQ4V,GAAK5V,MACnB,OAAOA,EAAQsF,EAAStF,EAAQ,EAAE,EAGzBqsB,GAAa,CAACplB,EAAM8F,EAAIhN,EAAMqkB,EAAStK,EAAQyP,EAAW+C,EAAUrlB,KAC7E,IAAKklB,GAAalkB,IAAI8E,GAAK,CACvB,MAAMmG,EAAU,CACZhR,YAAaynB,GAAW5pB,EAAM+Z,EAAQyP,GACtC9gB,MAAO1H,KACPwrB,QAASC,GAASvlB,EAAMmd,IAE5B+H,GAAahqB,IAAI4K,EAAImG,GAIhBiZ,GAAalkB,IAAIhB,IAAOklB,GAAahqB,IAAI8E,EAAMiM,GAC/CiZ,GAAalkB,IAAIqkB,IAAUH,GAAahqB,IAAImqB,EAASpZ,EAElE,CACI,OAAOiZ,GAAanqB,IAAI+K,EAAG,EAMlByU,GAAS3O,MAAO8Y,IAGzB,GAAIO,GAAQjkB,IAAI0jB,GAAS,CACrB,MAAMpmB,OAAEA,GAAWomB,EACfpmB,IAEIomB,EAAOc,QAAQ,QAASxpB,SAASypB,KAAK5R,OAAOvV,GAE5ComB,EAAOzR,MAAM3U,GAE9B,KAGS,CAGD,MACI8lB,YAAYvR,OACRA,EAAM5Q,IACNA,EACAnJ,KAAM4sB,EAAEpnB,OACRA,EAAM6e,QACNA,EACA,iBAAoBzU,GACvBgO,IACDA,EAAG1W,KACHA,GACA0kB,EAGE7B,GAAWhY,GAAO6Z,GAElBiB,EAAexI,GAASpkB,MACxBD,EAAO6pB,GAAa3iB,EAAM2lB,GAChC,IAAIC,EAAcT,GAAStS,EAAQ,KACnC,MAAM/M,EAAKqf,GAASljB,EAAK,KAAO,GAAGnJ,IAAO8sB,IAC1CA,EAAcA,EAAYpiB,MAAM,GAEhC,MAAMyE,EAAMkc,GAAUO,GACtB,GAAIzc,EAAK,CACL,MACMyb,EAAU,IADA6B,GAASvlB,EAAM2lB,GACf,CAAY1d,EAAK,IAC1BmK,GAASsS,EAAQ1kB,GACpBmd,QAASwI,EACT/Z,MAAOiX,EACPhQ,OAAQ+S,EACRpd,cAAeE,GAAI3P,QAEvBksB,GAAQ/pB,IACJ3B,GAAemrB,EAAQ,UAAW,CAAE3rB,MAAO2qB,IAC3C,CAAAA,QAAEA,IAEN,MAAMmC,EAAaH,GAAI3sB,MAEvB,YADI8sB,GAAYnkB,EAAQmkB,GAAY/rB,QAAQ4pB,EAAQ3a,OAEhE,CAGQ,MAAM+c,EAAcX,GAAS7mB,EAAQ,IAC/B2N,EAAUmZ,GAAWplB,EAAM8F,EAAIhN,EAAM6sB,EAAcC,GAEzDX,GAAQ/pB,IACJ3B,GAAemrB,EAAQ,SAAUM,IACjC/Y,GAGA6Z,GAAahP,GAAQ5b,IAAIwpB,EAAQD,GAAYC,EAAQoB,IAGzD,MAAMjjB,EAAS6T,EAAM5Y,EAAM4Y,GAAK0B,OAASsM,EAAOF,YAChDvY,EAAQzK,MAAQyK,EAAQzK,MAAMjE,MAAK,IAvI3BqO,OAAOma,EAAeljB,EAAQyiB,EAASzC,KACnD,MAAM7iB,KAAEA,GAAS+lB,EACXtV,EAASnD,GAASvS,IAAIiF,GAExByQ,EAAO+P,cACPlmB,QAAQ4Q,KAAK,OAAOlL,iCACxB,MAAO/E,EAAaiW,SAAiBtQ,GAAI,CACrCqkB,GAAQlqB,IAAIgrB,GAAe9qB,YAC3B4H,IAEJ,IACI0Q,GAAkBvT,EAAMyQ,EAAQxV,EAAamY,IAC7C3C,EAAOC,iBAAiBzV,EAAa,aAAc,CAC/CsD,SACA+C,aACAgkB,UACAS,gBACA7S,WAAYE,GACZ1R,QAASG,IAEbiG,GAASie,EAAe/lB,EAAM,SAG9BzG,GAAeyC,SAAU,gBAAiB,CACtCgoB,cAAc,EACdjpB,IAAK,IAAMgrB,IAEf,MAAMpd,EAAOb,GAASnN,KAAK,KAAMorB,EAAe/lB,EAAM,QACtD,IAAItD,EAAS+T,EAAOoS,EAAU,WAAa,OAAO5nB,EAAaiW,GAG/D,OAFI2R,IAASnmB,QAAeA,GAC5BiM,IACOjM,CACf,CAAc,eACCV,SAAS+pB,aACxB,GAsGYC,CAAQtB,EAAQ7hB,EAAQoJ,EAAQqZ,QAASzC,IAErD,GCpLa5gB,GAAM,IAAIpE,MAAM6H,GAAO,MAAO,CACvC3K,IAAK,CAACgH,EAAGjJ,IAAS,IAAIU,QAAQysB,gBAAgB1oB,MAC1C,IAAM2oB,GAAiBptB,OAMzBotB,GAAmBta,MAAO9L,IAC5B,GAAIolB,GAAalkB,IAAIlB,GAAM,CACvB,MAAM7E,YAAEA,EAAWuG,MAAEA,GAAU0jB,GAAanqB,IAAI+E,GAChD,aAAcc,GAAI,CAAC3F,EAAauG,KAAS,EACjD,CAEI,MAAM2kB,EAAYjB,GAAa7kB,KACzB,+BAA+B,IAAI6kB,GAAavkB,QAC3CE,KAAKrD,GAAM,IAAIA,OACfqL,KAAK,SACV,0CAEN,MAAM,IAAIuD,MAAM,oBAAoBtM,qBAAuBqmB,IAAY,EAG9DlY,GAAWrC,MAAOjM,IAC3B,MAAMK,KAAEA,EAAIyH,cAAEA,GAAkB9H,EAChC,GAAKyiB,GAAS5iB,OACd,IAAK,IAAI1G,KAAEA,EAAIC,MAAEA,EAAOqtB,aAAcC,KAAQnqB,EAC1C,QAAQkmB,GAASvhB,KAAKzD,GAAM,WAAWA,IAAI4C,OAAS6I,KAAK,WACzDpB,GACD,CACC3O,EAAOA,EAAK0K,MAAM,IAAKxD,EAAKR,OAAS,IACrC,MAAMvE,QAAoBirB,GACtBG,EAAGlS,aAAa,GAAGrb,UAAeA,GAEtBwU,GAASvS,IAAIjC,GACrB8X,SAAS3V,EAAalC,EAAO4G,EAC7C,GAOa2mB,GAAmBvqB,IAC5B,GAAKqmB,GAAS5iB,OACd,IAAK,IAAI1G,KAAEA,EAAMstB,aAAcC,KAAQnqB,EACnC,SAASkmB,GACJvhB,KAAKzD,GAAM,uBAAuBA,QAClCyL,KAAK,WACV9M,GACD,CACC,MAAMY,EAAI7D,EAAKud,YAAY,KACrBrW,EAAOlH,EAAK0K,MAAM7G,EAAI,GACf,QAATqD,IACAqmB,EAAG/d,iBAAiBtI,EAAMiO,IAEtB,aAAcoY,IAAOA,EAAGE,WACxBF,EAAGE,UAAW,EAEdtkB,GAAInJ,EAAK0K,MAAM,EAAG7G,IAAIY,MAAK,KACvB8oB,EAAGE,UAAW,CAAK,KAIvC,GCpEMjB,GAAU5B,KCaH8C,GAAmB,GAEnBC,GAAiB,IAAIllB,IAY5BmlB,GAAQ,IAAInlB,IACZolB,GAAW,IAAIplB,IAORqlB,GAAmBhb,MAAOyG,IACnC,IAAK,MAAMwU,KAAYL,GACnB,GAAInU,EAAKyU,QAAQD,GAAW,CACxB,MAAM7mB,EAAO0mB,GAAM3rB,IAAI8rB,GACjB5a,EAAUqB,GAASvS,IAAIiF,IACvBlG,QAAEA,GAAY6sB,GAAS5rB,IAAIiF,IAC3BtB,QAAEA,EAAOrF,MAAEA,GAAU4S,EAE3B,GAAI5S,EAAM2H,IAAIqR,GAAO,OACrBhZ,EAAM2J,IAAIqP,GAEV,IAAK,MAAOwU,EAAUxrB,KAAaorB,GAC3BpU,EAAKyU,QAAQD,UAAiBxrB,EAASgX,GAG/C,MACIpX,YAAaoqB,EAAO/C,UACpBA,EAASzP,OACTA,EAAMsK,QACNA,EAAOlb,IACPA,EAAGjD,QACHA,EAAOskB,MACPA,GACA5kB,EAEJ,IAAIhE,EACJ,IACI,MAAM+O,EAAS0a,GAAU9R,GACzB,GAAI5I,EAAQ,CACR,IAAIsd,EAAI5J,EACJlV,EAAMqa,EACN0E,EAAM3U,EAAK8B,aAAa,WAAatB,GAAU,CAAE,EACrD,IAAKkU,IAAMC,EAAK,CACZ,MAAOC,EAAGC,GAAK3E,GAAcyE,EAAK1E,GAClC0E,QAAYC,EACZhf,EAAMif,EACNH,EAAIC,EAAI7J,SAAW6J,EAAI/rB,YACnB8rB,GAAK,UAAUzV,KAAKyV,KACpBA,EAAI,IAAInd,IAAImd,EAAG9e,GAAK4B,KAChD,CACoB,MAAM6Z,EAAUyD,GAAGpmB,KAAK,IAAI8iB,GAAK,KAAMP,GAAQ7Z,EAAQ,IAChD2I,GAASC,EAAMrS,GAClBsiB,UAAWra,EACXkV,QAAS4J,EACT/mB,KAAMqlB,EACN+B,OAAQpnB,EACR6S,OAAQmU,EACRpb,OAAQf,GAAOwH,GACf7J,cAAe6J,EAAK8B,aAAa,oBAErC5a,GAAe8Y,EAAM,UAAW,CAAEtZ,MAAO2qB,IACzC5pB,EAAQ,CAAEkG,OAAM0jB,YAChB,MAAMmC,EAAaxT,EAAK8B,aAAa,QAErC,YADI0R,GAAYnkB,EAAQmkB,GAAY/rB,QAAQ4pB,EAAQ3a,OAExE,CACA,CAEY,MAAOse,GACH3sB,EAAQ2sB,CACxB,CAEY,MAAMvuB,EAAO6pB,GAAa0C,EAASlI,GAC7BrX,EAAK7D,GAAO,GAAGnJ,IAAO+Z,EAAS,IAAIA,IAAW,MAC5C5X,YAAaD,EAAQsqB,QAASle,GAAWge,GAC7CplB,EACA8F,EACAhN,EACAqkB,EACAtK,EACAyP,EACA+C,GAGEpqB,QAAoBD,EAEpByV,EAAS/K,GAAO4hB,GAAgBvsB,IAAIsqB,IAEpCkC,EAAO,IAAI1D,GAAK5oB,EAAaqoB,GAE7BgC,EAAU,YAAoBxqB,GAChC,OAAOsM,EAAO6R,MAAMsO,EAAMzsB,EAC7B,EAEKooB,EAAW,IACVtQ,GACCnC,EACAzQ,EACAwnB,gBAAgBtF,GAAQnnB,IAAIjC,IAC5BmC,GAEJqqB,WAGJ/R,GAAkB8R,EAAS5U,EAAQxV,EAAamY,IAChD3C,EAAOC,iBAAiBzV,EAAa,aAAc,CAC/CsD,SACA+C,aACAgkB,UACAzS,OAAQqQ,EAASrQ,OACjBkT,cAAe/lB,EAAKD,WAAW,KAAO,KAAOsS,EAC7Ca,WAAYE,GACZ1R,QAASG,IAIb,IAAK,MAAM4lB,IAAU,CAAC,MAAO,YAAa,CACtC,IAsBIC,EAAUC,EAtBV3U,EAAS,GACTC,EAAQ,GAEZ,IAAK,MAAMnT,KAAO2jB,GAAW,CACzB,MAAM1qB,EAAQuqB,GAAOpM,OAAOpX,GACxB/G,GAAS+G,EAAIkW,SAASyR,KAClB3nB,EAAIC,WAAW,cACfiT,EAASlC,GAAO/X,KAEhBka,EAAQnC,GAAO/X,KAE3C,EAEoBia,GAAUC,IACVF,GACItC,EACA,IAAIgX,EAAOjkB,MAAM,KACjBwP,EACAC,GAMR,IAAK,IAAItW,EAAI,EAAGA,EAAI6mB,GAAQhkB,OAAQ7C,IAAK,CACrC,MAAMmD,EAAM0jB,GAAQ7mB,GACd5D,EAAQuqB,GAAOpM,OAAOpX,GACxB/G,GAAS+G,EAAIkW,SAASyR,KAClB3nB,EAAIC,WAAW,YACf2nB,EAAW3uB,EAEX4uB,EAAU5uB,EAEtC,CACgBoqB,GAAU1S,EAAQyS,EAAU7Q,EAAMoV,EAAOzR,SAAS,SAAU0R,EAAUC,EACtF,CAEY1b,EAAQzK,MAAQyK,EAAQzK,MAAMjE,MAAK,KAC/BzD,EAAQopB,GACJxoB,GAAOsE,IAAUtE,EAAO2X,GACrBiR,GAAOpM,MAAM0Q,UAAU1E,EAAU7Q,KAExD,CACA,EAMM/E,GAAW,IAAI/L,IASrB,IAAIsmB,GAAkB,EAOf,MAsEMC,GAAe9nB,IACnB2mB,GAAS3lB,IAAIhB,IAAO2mB,GAASzrB,IAAI8E,EAAMxG,QAAQC,iBAC7CktB,GAAS5rB,IAAIiF,GAAMhG,WCnQ1BysB,eACIA,GAAcsB,OACdA,GAAMD,YACNA,GAAW7lB,IACXA,GAAG4hB,KACHA,GAAIyB,QACJA,IAEJ0C,IACAnvB,EACA,aACA,CACI4tB,eAAgBwB,GAChBF,OD8Kc,CAAC/nB,EAAMtB,KAEzB,IAAIwpB,EAAqB,MAARloB,EAEjB,GAAIkoB,EACAloB,EAAO,MAAM6nB,UACZ,GAAIP,GAAgBtmB,IAAIhB,IAASsN,GAAStM,IAAIhB,GAC/C,MAAM,IAAIoM,MAAM,iBAAiBpM,0BAErC,IAAKsnB,GAAgBtmB,IAAItC,GAASzD,aAC9B,MAAM,IAAImR,MAAM,2BAGpBkb,GAAgBpsB,IAAI8E,EAAMsnB,GAAgBvsB,IAAI2D,EAAQzD,cAGtD,MAAMknB,EAAY,CAAC,gBAAgBniB,OAKnC,GAFA8nB,GAAY9nB,GAERkoB,EAAY,CAEZ,MAAM5E,MAAEA,GAAU5kB,EACZkpB,EAAUtE,GAAOpM,MAAM0Q,QAC7BlpB,EAAU,IACHA,EACH4kB,MAAO,IACAA,EACHpM,KAAM,IACCoM,GAAOpM,KACV,OAAA0Q,CAAQ1E,EAAU7Q,GACdmU,GAAiB7qB,OAAO6qB,GAAiB2B,QAAQnoB,GAAO,GACxDsnB,GAAgB7mB,OAAOT,GACvBsN,GAAS7M,OAAOT,GAChB2mB,GAASlmB,OAAOT,GAChBqS,EAAKgK,SACLuL,IAAU1E,EAClC,KAIQlnB,SAAS4X,KAAKC,OACV9V,GAAO/B,SAAS8X,cAAc,UAAW,CAAE9T,SAEvD,MAEQmiB,EAAUvmB,KAAK,GAAGoE,YAClBoiB,GAASxmB,KAAK,GAAGoE,MAGrB,IAAK,MAAM6mB,KAAY1E,EAAWuE,GAAMxrB,IAAI2rB,EAAU7mB,GACtDwmB,GAAiB5qB,QAAQumB,GAGzB7U,GAASpS,IAAI8E,EAAM,CACftB,QAASX,GAAO,CAAEkE,IAAKjC,GAAQtB,GAC/BrF,MAAO,IAAIgN,QACX7E,MAAOhI,QAAQM,YAGdouB,GAAY5B,GAAgBtqB,UACjCH,EAAGsmB,EAAUtZ,KAAK,MAAM/H,QAAQ8lB,GAAiB,EC3O7CkB,YAAaM,GACbnmB,IAAKomB,GACLxE,KAAMyE,GACNhD,QAASiD,KAgBjB,IAAKP,GAAa,CACd,MAAMQ,EAAK,IAAIC,kBAAkBC,IAC7B,MAAM7B,EAAW1E,GAAUtZ,KAAK,KAChC,IAAK,MAAM7I,KAAEA,EAAI1B,OAAEA,EAAMqqB,cAAEA,EAAaC,WAAEA,KAAgBF,EAGtD,GAAa,eAAT1oB,EAmBJ,IAAK,MAAMqS,KAAQuW,EACO,IAAlBvW,EAAKwW,WACLvC,GAAgBjU,GACZwU,GAAYxU,EAAKyU,QAAQD,GAAWtM,GAAOlI,GAC1C0R,EAAU8C,EAAUxU,GAAM,QAvBvC,CACI,MAAM1V,EAAIgsB,EAActS,YAAY,KAAO,EAC3C,GAAI1Z,EAAG,CACH,MAAM0B,EAASsqB,EAAcnlB,MAAM,EAAG7G,GACtC,IAAK,MAAMS,KAAKglB,GACZ,GAAI/jB,IAAWjB,EAAG,CACd,MAAM4C,EAAO2oB,EAAcnlB,MAAM7G,GACjC,GAAa,QAATqD,EAAgB,CAChB,MAAMkP,EAAS5Q,EAAOwqB,aAAaH,GAC7B,MACA,SACNrqB,EAAO,GAAG4Q,kBAAuBlP,EAAMiO,GACvE,CAC4B,KAC5B,CAEA,CAEA,CASA,IAIU8V,EAAY,CAAC8C,EAAUxU,EAAM0W,KAC3BlC,GAAUhrB,EAAGgrB,EAAUxU,GAAMvR,QAAQyZ,KACzCsM,EAAWL,GAAiB3d,KAAK,QAEzBkgB,GAAcnC,GAAiBvU,GACnCxW,EAAGgrB,EAAUxU,GAAMvR,QAAQ8lB,IACvC,EAIUoC,EAAWjtB,IACbysB,EAAGQ,QAAQjtB,EAAM,CAAEktB,WAAW,EAAMC,SAAS,EAAM9E,YAAY,IACxDroB,IAGLotB,aAAEA,GAAiBC,QAAQnsB,UACjCc,GAAOqrB,QAAQnsB,UAAW,CACtB,YAAAksB,CAAa/uB,GACT,OAAO4uB,EAAQG,EAAapoB,KAAKlH,KAAMO,GAC1C,IAIL6rB,gBAAe,KACXK,GAAgB0C,EAAQhtB,WACxB+nB,EAAU5B,GAAUtZ,KAAK,KAAM7M,UAAU,EAAM,GAGvD,CCzHA,IAAeqtB,GAAA,IAAI9nB,IAAI,CACnB,CAAC,KAAM,WACP,CAAC,MAAO,iBCAZ,MAAM+nB,GAAY,GAElB,IAAK,MAAO3lB,KAAS0lB,GAAO,CACxB,MAAMlH,EAAY,CAAC,gBAAgBxe,MAAU,GAAGA,YAChD,IAAK,MAAMuQ,KAAWlY,SAASC,iBAAiBkmB,EAAUtZ,KAAK,MAAO,CAClE,MAAM7O,QAAEA,EAAOF,QAAEA,GAAYN,QAAQC,gBACrC6vB,GAAU1tB,KAAK5B,GACfka,EAAQ5L,iBAAiB,GAAG3E,SAAa7J,EAAS,CAAEyP,MAAM,GAClE,CACA,CAGA/P,QAAQoH,IAAI0oB,IAAW/rB,MAAK,KACxBqC,cAAc,IAAIO,MAAM,eAAe,ICd3C,IAAeopB,GAAA,CACXC,WAAY,IACRhwB,QAGCM,UAAAyD,MAAA,WAAA,OAAAksB,EAAA,IACL,uBAA0B,IACtBja,OAEI,sCAERka,OAAQ,IACJla,OAEI,wBAER9U,MAAO,IACH8U,OAEI,uBAER,YAAe,IACXA,OAEI,2BAER,UAAa,IACTA,OAEI,yBAER,cAAiB,IACbA,OAEI,8BC1BL,MAAMma,GAAY,CAErBC,iBAAkB,SAClBC,WAAY,SAMZC,YAAa,SAEbC,yBAA0B,SAC1BC,sBAAuB,SACvBC,sBAAuB,SACvBC,mBAAoB,SACpBC,wBAAyB,UAQtB,MAAMC,WAAkBhe,MAM3B,WAAAlN,CAAYmrB,EAAWpqB,EAAU,GAAIqqB,EAAc,QAC/CnrB,MAAM,IAAIkrB,OAAepqB,KACzBpG,KAAKwwB,UAAYA,EACjBxwB,KAAKywB,YAAcA,EACnBzwB,KAAKf,KAAO,WACpB,EAGO,MAAMyxB,WAAmBH,GAK5B,WAAAlrB,CAAYmrB,EAAWpqB,GACnBd,MAAMkrB,EAAWpqB,GACjBpG,KAAKf,KAAO,YACpB,EChDY,MAAC0xB,GAAWC,GAAaA,EAASrS,OAWvCxM,eAAe8e,GAAYziB,EAAKvJ,GACnC,IAAI+rB,EAIJ,IACIA,QAAiB3sB,MAAMmK,EAAKvJ,EAC/B,CAAC,MAAO6Z,GACL,MAAM7d,EAAQ6d,EACd,IAAIoS,EAcJ,MAZIA,EADA1iB,EAAIlI,WAAW,QAEX,qBAAqBkI,wBACjBvN,EAAMuF,gDAEL,0bAQP,IAAIsqB,GAAWZ,GAAUG,YAAaa,EACpD,CAGI,IAAKF,EAASG,GAAI,CACd,MAAMC,EAAW,qBAAqB5iB,uBAAyBwiB,EAASK,WAAWL,EAASM,mDAC5F,OAAQN,EAASK,QACb,KAAK,IACD,MAAM,IAAIP,GAAWZ,GAAUM,sBAAuBY,GAC1D,KAAK,IACD,MAAM,IAAIN,GACNZ,GAAUI,yBACVc,GAER,KAAK,IACD,MAAM,IAAIN,GAAWZ,GAAUK,sBAAuBa,GAC1D,KAAK,IACD,MAAM,IAAIN,GAAWZ,GAAUO,mBAAoBW,GACvD,KAAK,IACD,MAAM,IAAIN,GACNZ,GAAUQ,wBACVU,GAER,QACI,MAAM,IAAIN,GAAWZ,GAAUG,YAAae,GAE5D,CACI,OAAOJ,CACX,CCxDA,MAAMZ,WAAEA,GAAUD,iBAAEA,IAAqBD,GAe5BqB,GAAgBpf,MAAOiH,EAAQ7S,KACxC,IAAIoY,EAAOvF,GAAQxB,OAEfpJ,EAAM,GACNkQ,GAAO,EACPtU,EAAO,KAAKyN,KAAK8G,IAAS,KAAK9G,KAAK8G,GAExC,IAAKvU,GAAQ,qBAAqByN,KAAK8G,GAAO,CAC1C,MAAM6S,EAAMloB,OAAOyO,GACP,SAARyZ,GAA2B,SAATjrB,EAAiB6D,GAAO,EAC7B,SAARonB,GAA2B,SAATjrB,EAAiBmY,GAAO,EAvB5C,EAAClQ,EAAKijB,EAAW,MAC5B,IAAIjrB,EAAU,IAAI4pB,qBAA6B5hB,IAE/C,MADIijB,IAAUjrB,GAAW,cAAcirB,aACjC,IAAI9e,MAAMnM,EAAQ,EAqBfkrB,CAAO/S,EAAMpY,GAClBiI,EAAMmQ,EACNA,SAActa,GAAMmK,GAAK1K,KAAKitB,KAAUnZ,MAChD,CACI,MAAO,CAAExN,OAAMsU,KAAMA,IAAUtU,KAAUuU,EAAOA,OAAMnQ,MAAK,EAGzDmjB,GAAiBC,GAAW,IAAIjf,MAAM,IAAIwd,QAAsByB,KAEhEC,GAAe,CAACrjB,EAAKiK,EAAO7I,SAASQ,OAAS,IAAID,IAAI3B,EAAKiK,GAAMrI,KAEjE0hB,GAAc,CAACvrB,EAAMiI,GAAOhI,cAC9B,IAAI4E,EAAM,IAAIglB,gBAAwB7pB,IAEtC,OADIiI,IAAKpD,GAAO,MAAMoD,KACf,IAAI0O,YAAY,GAAG9R,MAAQ5E,IAAU,EAG1CiiB,GAAU,IAAI3gB,IAEpB,IAAK,MAAOoC,KAAS0lB,GAAO,CAExB,IAAImC,EAGAC,EAGA/wB,EAGA4nB,EAEAzP,EACA7S,EACA0rB,EACAC,EAAY9vB,EAAG,GAAG8H,YAClBioB,EAAc/vB,EACV,CACI,gBAAgB8H,4BAChB,GAAGA,kCACLkF,KAAK,MA+Bf,GA3BI8iB,EAAUnsB,OAAS,EACnB9E,EAAQ0wB,GAAc,YAAYznB,YAG9BgoB,EAAUnsB,QAAUosB,EAAYpsB,OAChC9E,EAAQ0wB,GACJ,aAAaznB,gCAEVgoB,EAAUnsB,SAChBksB,GAAaC,EACd9Y,EAAS6Y,EAAUvX,aAAa,QAAUuX,EAAUlH,YACpDxkB,EAAO0rB,EAAUvX,aAAa,SACvByX,EAAYpsB,UAClBksB,KAAcE,GAAeA,EAC9B/Y,EAAS6Y,EAAUvX,aAAa,UAG5ByX,EAAYC,MAAMxF,GAAOA,EAAGlS,aAAa,YAActB,MAEvDnY,EAAQ0wB,GACJ,8CAOX1wB,GAASmY,EACV,IACI,MAAMhP,KAAEA,EAAIsU,KAAEA,EAAIC,KAAEA,EAAInQ,IAAEA,SAAc+iB,GAAcnY,EAAQ7S,GAG9D,GAFIiI,IAAKqa,EAAYgJ,GAAarjB,IAClC4K,EAASuF,EACLvU,GAAiB,SAAT7D,EACR,IACIyrB,EAAS7mB,KAAKJ,MAAM4T,EACvB,CAAC,MAAOqB,GACL/e,EAAQ6wB,GAAY,OAAQtjB,EAAKwR,EACrD,MACmB,GAAItB,GAAiB,SAATnY,EACf,IACI,MAAMwE,MAAEA,SAAgBgL,OACM,sBAE9Bic,EAASjnB,EAAM4T,EAClB,CAAC,MAAOqB,GACL/e,EAAQ6wB,GAAY,OAAQtjB,EAAKwR,EACrD,CAES,CAAC,MAAOA,GACL/e,EAAQ+e,CACpB,CAKI+R,EAAU5f,UACN,MAAMkgB,EAAc,GACpB,IAAK,MAAOhsB,EAAK/G,KAAUO,OAAOoH,QAAQ6oB,IAClC7uB,EACY,UAARoF,GAIA/G,IAAQwE,MAAK,EAAGiM,YAAaA,EAAO9O,EAAMuF,WAEtCwrB,GAAQD,SAAS/nB,SAAS,IAAI3D,KAEvB,UAARA,GACPgsB,EAAYlwB,KAAK7C,IAAQwE,MAAK,EAAGwuB,cAAeA,OAFhDD,EAAYlwB,KAAK7C,IAAQwE,MAAK,EAAGyuB,QAAS5uB,KAAQA,KAK1D,aAAa5D,QAAQoH,IAAIkrB,EAAY,EAGzC5J,GAAQhnB,IAAIyI,EAAM,CAAEkP,OAAQ4Y,EAAQnJ,YAAWkJ,UAAS9wB,SAC5D,CCzJA,MAAMuxB,GAAQtsB,IACVA,EAAMkH,iBACNlH,EAAMiH,0BAA0B,EAKvBslB,GAAY,eACZC,GAAQ,kCAERC,GAAM,IAAI7tB,EAAO2tB,IAOjBG,GAA+BzgB,MAAOlN,IAC/C,KAAM,wBAAyBzF,YAC3B,OAAOO,QAAQO,OACX,IAAIqS,MAAM,yCAIlB,MAAMpS,QAAEA,EAAOF,QAAEA,EAAOC,OAAEA,GAAWP,QAAQC,gBAEvCoF,EAAM,CAAEiH,GAAI,WAAYoU,KAAM,eAAgBxb,GAChDA,EAAQ4tB,OAAMztB,EAAI0tB,QAAU7tB,EAAQ4tB,MAExC,MAAME,EAAY5gB,UACd,IAEI,MAAMzO,QAAgBsvB,oBAAoB5tB,GAE1C,GAA+C,kBAApC1B,EAAQuvB,kBAAkB7tB,GAEjC,OADA/E,EAAQqD,IACD,CAEvB,CAAU,OAAO8C,QAAEA,IACP3F,QAAQ4Q,KAAKjL,EACzB,CACQ,OAAO,CAAK,EAKhB,GAAI6J,UAAU6iB,gBAAgBC,eACdJ,KAAczyB,EAAO,IAAIqS,MAAM+f,SACxC,CACH,MAAMU,EAAS9uB,GAAO/B,SAAS8X,cAAc,UAAW,CACpDgZ,UAAW,cACXxI,UAAW,CACP,gDACA,sEACA,+CACA,2CACFzb,KAAK,OAGJ+hB,EAAImC,GAAUlxB,EAAG,SAAUgxB,GAElCjC,EAAGtiB,iBAAiB,SAASsD,MAAOjM,IAChCssB,GAAKtsB,SACK6sB,KAAaK,EAAOzsB,OAAO,IAGzC2sB,EAAOzkB,iBAAiB,SAASsD,MAAOjM,IACpCssB,GAAKtsB,GACL5F,EAAO,IAAIqS,MAAM+f,KACjBU,EAAOzsB,OAAO,IAGlBpE,SAASypB,KAAKuH,YAAYH,GAAQI,WAC1C,CAEI,OAAOjzB,CAAO,sGC7EHyH,GAAA,CAEXyrB,cAAe,KAAM,EAMrBC,MAAMC,GACK,IAAI5zB,SAAS6I,GAAM4I,WAAW5I,EAAa,IAAV+qB,KAS5CxhB,eAAoB,MAAChD,EAAKlK,EAAU,aACtB0tB,GAAIprB,IAAI4H,IACXyjB,GAA6B3tB,GAASnB,MACzCqO,MAAOzO,UACGivB,GAAIlxB,IAAI0N,EAAKzL,IACZ,KAEX,KAAM,KCxBlB,MAAM6V,GAAU0R,IACZnrB,GAAeyC,SAAU,gBAAiB,CACtCgoB,cAAc,EACdjpB,IAAK,IAAM2pB,GACb,EAGAzR,GAAQ,YACHjX,SAAS+pB,aAAa,EAIjC,IAAesH,GAAAzhB,MAAOsL,EAAM6J,EAAM7M,EAASqT,KACvC,MAAM1E,EAAU0E,EAAKvR,SAAS,UACbuR,EAAKxnB,WAAW,YAGrBiT,GAASC,IAAOiB,GAC5B,IAAK,MAAMnF,KAAMmI,EAAKqQ,GACd1E,QAAe9T,EAAGgS,EAAM7M,GACvBnF,EAAGgS,EAAM7M,EACtB,ECxBA,MAAMpP,GAAM,KAAM,EACZpK,GAAQuF,IACZ,MAAM,IAAIiE,UAAUjE,EAAQ,EAGxBqtB,GAAY,CAACttB,EAAMiG,KACvB,MAAMsnB,EAAS,GACf,GAAIvtB,EACF,IAAK,MAAMlB,KAAKkB,EAAKoR,MAAM,YACf,WAANtS,EACFyuB,EAAO3xB,MAAKmrB,GAAW,OAANA,UAAqBA,IAAMjoB,IAC/B,SAANA,EACPyuB,EAAO3xB,MAAKmrB,GAAW,OAANA,IAEjBwG,EAAO3xB,MAAKmrB,UAAYA,IAAMjoB,IAGpC,GAAImH,EACF,IAAK,MAAMunB,IAAK,GAAGtf,OAAOjI,GACxBsnB,EAAO3xB,MAAKqrB,GAAKA,aAAauG,IAElC,OAAQD,EAAO/tB,QACb,KAAK,EAAG,OAAOsF,GACf,KAAK,EAAG,OAAOyoB,EAAO,GACtB,QAAS,OAAOxG,GAAKwG,EAAO1B,MAAK9b,GAAKA,EAAEgX,KAC5C,EAGM0G,GAAU,CAACztB,EAAMiG,EAAOuU,EAAMxb,EAAUtE,KAAU3B,IACtD,MAAMkH,EAAU,CAAC,kBAAkBlH,KAASyhB,gBACxCxa,IACFC,EAAQrE,KAAKoE,GACTiG,GAAOhG,EAAQrE,KAAK,SAEtBqK,IACFhG,EAAQrE,KAAK,kBACbqE,EAAQrE,KAAK,GAAGsS,OAAOjI,GAAOpF,KAAI,EAAE/H,UAAUA,IAAM+P,KAAK,SAE3D7J,EAAQiB,EAAQ4I,KAAK,IAAK9P,EAAM,EAqBrB20B,GATK9rB,IAAOlD,IACvB,MAAOmb,EAAO8T,GAVE,EAACjvB,EAAS8b,EAAO,WACjC,MAAMxa,EAAOtB,GAASkvB,OAChB3nB,EAAQvH,GAASmvB,WACvB,MAAO,CACLP,GAAUttB,EAAMiG,GAChBwnB,GAAQztB,EAAMiG,EAAOuU,EAAM9b,GAASM,SACrC,EAIqB8uB,CAAUpvB,GAChC,OAAO,cAAuBkD,EAC5B,GAAAoB,CAAIjK,GACF,OAAO8gB,EAAM9gB,GAASoG,MAAM6D,IAAIjK,GAAS40B,EAAK50B,EACpD,EACG,EAGqBg1B,CAAUnsB,KC5BlC,MAAMlB,QAAEA,IAAYpH,OAEd00B,GAAS,CACX,mBACA,oCACA,gBAGErsB,GAAS,IA7Bf,cAAqB8D,MACjBzC,IAAO,EACPirB,GACAC,GACA,WAAAhvB,CAAYgvB,KAAUD,GAClB9uB,QACAtF,MAAKq0B,EAASA,EACdr0B,MAAKo0B,EAASA,CACtB,CACI,IAAAryB,IAAQwF,GAEJ,OADIvH,MAAKmJ,GAAM7D,MAAMvD,QAAQwF,GACtBvH,MAAKq0B,EAAOtyB,QAAQwF,EACnC,CACI,IAAAjF,CAAKA,GACD,IAAK,MAAMgyB,KAASt0B,MAAKo0B,EAErB,GAAKp0B,MAAKmJ,EAAO7G,EAAK4D,WAAWouB,GAAS,KAEtD,GAW0BH,GAAQ,KAE5BlS,GAAQ,CAAC5J,EAAMkc,KACjB,IAAK,MAAOtuB,EAAK/G,KAAU2H,GAAQ0tB,GAG/B,GAFAzsB,GAAOxF,KAAK,GAAG+V,KAAQpS,KACvB6B,GAAO/F,KAAK,kBAAkBsW,KAAQpS,OACjB,iBAAV/G,EAAoB,CAC3B,MAAMuX,EAAO1L,KAAKF,UAAU3L,GAC5B4I,GAAO/F,KAAK,oBAAoB0U,sBAC5C,MAEY3O,GAAO/F,KAAK,2BAA2BsW,KAAQpS,QAC/C6B,GAAO/F,KAAK,gDACZkgB,GAAM,GAAG5J,KAAQpS,IAAO/G,EAEpC,EAGA+iB,GAAM,ICxDS,CACbuS,SAAY,CACV,cAAe,gdACf,aAAc,+7FACd,YAAa,oxEACb,WAAY,q9CACZ,SAAU,0VACV,aAAc,+mEACd,QAAS,05BACT,cAAe,0iDACf,WAAY,88BACZ,aAAc,mxCACd,UAAW,4tBACX,SAAU,8vcACV,eAAgB,+xCAChB,aAAc,2vBD6ClBL,GAAOpyB,KAAK,gCAEZoyB,GAAOpyB,QACA,CAAC,QAAS,QAAS,MAAO,aAAaiF,KAAK8N,GAAQ,OAAOA,OAElEqf,GAAOpyB,KAAK,MAEA,MAAC0yB,GAASN,GAAOnlB,KAAK,MACrB0lB,GAAW5sB,GAAOkH,KAAK,ME/DvBqO,GAAQpe,GAASwqB,GAAMpM,KAAKpe,GAC5B2Q,GAAU3Q,GAASwqB,GAAM7Z,OAAO3Q,GAEvCwX,GAAO,CAACgT,EAAOtO,EAAQlV,EAAK0uB,KAC9BlL,EAAMxjB,GAAO,KACT,MAAM4C,EAAM8rB,EAAM,CAACA,GAAO,GAE1B,OADA9rB,EAAI9G,QAAQoZ,EAAOlV,IACZ4C,EAAI7B,IAAIiQ,IAAQjI,KAAK,KAAK,CACpC,EAGQ4lB,GAAU,CAACzZ,EAAQhV,KAC5B,MAAM0uB,EAAiB,QAAT1uB,EAAiBsuB,GAAO/c,QAAQgd,GAAU,IAAMD,GACxDhL,EAAQ,CAAE,EAKhB,OAJAhT,GAAKgT,EAAOtO,EAAQ,gBAAiB0Z,GACrCpe,GAAKgT,EAAOtO,EAAQ,qBAAsB0Z,GAC1Cpe,GAAKgT,EAAOtO,EAAQ,gBACpB1E,GAAKgT,EAAOtO,EAAQ,qBACbsO,CAAK,EAGHqL,GAAiB,CAACzsB,EAAMpJ,KACjC,MAAM81B,EAAM,IAAInlB,GAAO3Q,IACvB,GAAI81B,EAAIpvB,OAAQ,CACZ,MAAM0M,EAAK0W,GACP1gB,EAAK,IAAIpJ,OACJA,EAAKkd,SAAS,SACTpK,MAAOmV,EAAM2C,KAAYkL,KACrB,IAAK,MAAM1iB,KAAM0iB,QAAW1iB,EAAG6U,EAAM2C,EAAQ,EAEjD,CAAC3C,EAAM2C,KAAYkL,KACf,IAAK,MAAM1iB,KAAM0iB,EAAK1iB,EAAG6U,EAAM2C,EAAQ,IAGnDhqB,EAAIk1B,EAAI/tB,IAAI+hB,IAAgB/Z,KAAK,MACvC,OAAO0H,SAAS,iBAAiBrE,cAAexS,MAAzC6W,EACf,GAGMse,GAAcnB,GAAS,CAAEE,OAAQ,aACjCkB,GAAYpB,GAAS,CAAEE,OAAQ,WAExBmB,GAAe,iXAafzL,GAAQ,CACjBpM,KAAM,CAEFqM,SAAU,IAAIsL,GAEdjH,QAAS,IAAIiH,GAEbG,YAAa,IAAIH,GAEjBI,iBAAkB,IAAIJ,GAEtBK,WAAY,IAAIL,GAEhBM,gBAAiB,IAAIN,GAErBO,cAAe,IAAIN,GAAU,CAACC,KAE9BM,mBAAoB,IAAIP,GAExBQ,aAAc,IAAIR,GAElBS,kBAAmB,IAAIT,IAE3BrlB,OAAQ,CAEJme,QAAS,IAAIiH,GAEbG,YAAa,IAAIH,GAEjBI,iBAAkB,IAAIJ,GAAY,CAC9B,EAAG5zB,kBACCA,EAAY2c,iBAAiB,YAAa,CAGtCgG,GAAI,CACAuO,MAAO,kCACPD,UAAW,gBAEfjxB,eACF,IAIVi0B,WAAY,IAAIL,GAEhBM,gBAAiB,IAAIN,GAErBO,cAAe,IAAIN,GAEnBO,mBAAoB,IAAIP,GAExBQ,aAAc,IAAIR,GAElBS,kBAAmB,IAAIT,KCjH/B,IAAetF,GAAA,CACX,QAAIgG,GACA,OAAOhgB,OAAiC,2BAC3C,EACD,SAAIpG,GACA,OAAOoG,OACuB,iCAEjC,EACD,UAAIwe,GACA,OAAOxe,OACuB,uCAEjC,EACD,YAAIigB,GACA,OAAOjgB,OACuB,qCAC7BjS,MAAA,SAAAmyB,GAAA,OAAAA,EAAAC,CAAA,GACJ,EACD,QAAInoB,GACA,OAAOgI,OACuB,iCAC7BjS,MAAA,SAAAmyB,GAAA,OAAAA,EAAA5f,CAAA,GACJ,EACD,YAAI8f,GACA,OAAOpgB,OACuB,oCAEjC;;ACcO,MAACka,GAAUhrB,GACnB8Q,OAAiC,wBAAuBjS,MAAMkT,GAC1DA,EAAOub,QAAQttB,KAIjBmxB,GAAW,EAAGtd,aAA0B,WAAZA,GAI3Bud,GAAUC,IAAY,IAAI1G,GAAM3oB,WAAWG,KAC9C,EAAE8C,EAAM1I,KAOJ2Q,eAA8BuK,EAAMzX,SAC1BwjB,GAAQnnB,IAAI4I,GAAM6nB,QACxB,MAAM9H,EAAU4B,GAAQvkB,KACpB,IAAI8iB,GAAK,KAAMmM,GAAOj1B,IAAI4I,IAC1BwS,EACA,IACOzX,EACHsB,KAAM/E,IAId,OADA8C,GAAO2lB,EAAQjiB,KAAMA,IACdiiB,EAAQ3a,KAClB,MAMD+mB,SAAUG,GACVF,SAAUG,GACV5M,MAAO6M,GACPtd,OAAQud,GACRtI,YAAauI,IAEjBrI,IACAnvB,EAAa,iBAAkB,CAC/Bi3B,YACAC,YACAzM,SACAzQ,OAAQ,CAAE,EACViV,iBAaSwI,GAAuBzd,GAChCA,GAAQ5X,aAAeqwB,GAAazY,EAAO5X,aAEzC+0B,GAAS,IAAIzuB,IAEnB,IAAK,MAAOoC,EAAM1I,KAAgBouB,GAAO,CAErC,GAAIrB,GAAa,MAEjB,MAAMuI,EAAe,CAACrc,EAAS2O,EAASnmB,KAChCmmB,EAASnmB,EAAOa,MAAK,IAAMuK,GAASoM,EAASvQ,EAAM,UAClDmE,GAASoM,EAASvQ,EAAM,OAAO,GAGlCkP,OAAEA,EAAMyP,UAAEA,EAASkJ,QAAEA,EAAO9wB,MAAEA,GAAUwnB,GAAQnnB,IAAI4I,GAG1D,IAAImC,EAAK,EACT,MAAM0qB,EAAQ,CAACnyB,EAASsF,IAAS,GAAGtF,KAAUyH,MAOxC2qB,EAAc7kB,MAAO0G,EAAKrY,EAAIy2B,KAChC,GAAIpe,EAAIwW,aAAa,OACjB,IACI,aAAahrB,GAAMwU,EAAI6B,aAAa,QAAQ5W,KAAKitB,GACpD,CAAC,MAAO9vB,GACLT,EAAGQ,OAAOC,EAC1B,CAGQ,GAAIg2B,EAAQ,OAAO5f,GAAOwB,EAAIkS,aAE9B,MAAMlU,EAAOQ,GAAOgB,GAASQ,EAAIgS,YAKjC,OAJAhqB,QAAQ4Q,KACJ,iCAAiCvH,4CACjC2M,GAEGA,CAAI,EAIf,IAGIqgB,EAHAC,GAAoB,EAKxB,MAAMC,EAAiB,EAAGvL,UAASrqB,cAAahB,SAExC22B,IACJA,GAAoB,EAWpB31B,EAAY2c,iBAAiB,YAAa,CACtCkY,SARJ,YAAqBh1B,GACjB,MAAM2O,EAAS6b,KAAWxqB,GAE1B,OADA2O,EAAOzK,QAAU,EAAGtE,WAAYT,EAAGQ,OAAOC,GACnC+O,CACnB,EAKYmU,MACA3iB,cACA61B,UAAW,IAAIC,IAASv3B,QAAQoH,IAAImwB,EAAKlwB,KAAKoH,GAAQuH,OAAOvH,MAC7D,UAAI3J,GACA,OAAOuxB,GAASc,GACVA,EAAeryB,OAAOwH,GACtB6qB,EAAe7qB,EACxB,IACH,EAKDpL,GAID8wB,IAAUjuB,MAAK,KAEX,MAAMyzB,EAAS,IAAIzvB,IAGb+hB,EAAQ,CACVpM,KAAM,IACCuX,GAAQvX,GAAMvT,GACjB,aAAMikB,CAAQ7G,EAAM7M,GAChB2c,EAAe9P,GAIf,IAAK,MAAM1lB,KAAY6b,GAAK,iBAClB7b,EAAS0lB,EAAM7M,GAIzB,GAAI8c,EAAOhwB,IAAIkT,GAAU,CACrB,IAAIjU,QAAEA,GAAY+wB,EAAOj2B,IAAImZ,GAC7B8c,EAAOvwB,OAAOyT,GACd,MAAM+c,EAAQhxB,IAAYikB,GAI1B,OAHAjkB,EAAU,IAAI0pB,GAAUC,qBAAqB3pB,SAC7CA,GAAWiU,EAAQgd,UAAUD,GAAOE,eACpCpQ,EAAK9mB,GAAGQ,OAAOwF,EAE3C,CAEwB,GAAI4vB,GAAS3b,GAAU,CACnB,MAAM2O,GAAWhY,GAAOqJ,GAClB5V,EAAS4V,EAAQC,aAAa,UAC9Bid,EAAO9yB,EACPmmB,GAAYvQ,EAAS5V,GACrBtC,SAAS8X,cAAc,aAE7B,IAAKxV,EAAQ,CACT,MAAMsV,KAAEA,EAAI6R,KAAEA,GAASzpB,SACnB4X,EAAKyd,SAASnd,GAAUuR,EAAK5R,OAAOud,GACnCld,EAAQjB,MAAMme,EACnD,CACiCA,EAAKtrB,KAAIsrB,EAAKtrB,GAAK0qB,KAIxBj3B,GAAe2a,EAAS,SAAU,CAAEnb,MAAOq4B,IAG3CtpB,GAASoM,EAASvQ,EAAM,SACxB4sB,EACIrc,EACA2O,EACA9B,EAAK,OAAM8B,EAAU,QAAU,WACrB4N,EAAYvc,EAAS6M,EAAK9mB,IAAI,IAGxE,MAE4Bia,EAAQod,MAAMx3B,QAAQinB,GAE1BzmB,QAAQoT,MAAM,iCACjB,EACD,QAAA6V,CAASxhB,EAAG2hB,GACR3lB,GAAO2lB,EAAQjiB,KAAMA,IACrB,IAAK,MAAMpG,KAAY6b,GAAK,YACxB7b,EAAS0G,EAAG2hB,EACnB,EACD,WAAAsL,CAAYjO,EAAM7M,GACdyc,EAAiBzc,EACjBmZ,GACInW,GACA6J,EACA7M,EACA,cAEP,EACD+a,iBAAgB,CAAClO,EAAM7M,KACnByc,EAAiBzc,EACVmZ,GACHnW,GACA6J,EACA7M,EACA,qBAGR,UAAAgb,CAAWnO,EAAM7M,GACbmZ,GACInW,GACA6J,EACA7M,EACA,aAEP,EACDib,gBAAe,CAACpO,EAAM7M,IACXmZ,GACHnW,GACA6J,EACA7M,EACA,oBAIZzK,OAAQ,IACDglB,GAAQhlB,GAAQ9F,GAGnB,WAAIikB,GACA,OAAO+G,GAAe90B,KAAM,UAC/B,EACD,eAAIm1B,GACA,OAAOL,GAAe90B,KAAM,cAC/B,EACD,oBAAIo1B,GACA,OAAON,GAAe90B,KAAM,mBAC/B,EACD,cAAIq1B,GACA,OAAOP,GAAe90B,KAAM,aAC/B,EACD,mBAAIs1B,GACA,OAAOR,GAAe90B,KAAM,kBAC/B,IAITm2B,GAAO90B,IAAIyI,EAAM2f,GAEjByE,GAAOpkB,EAAM,CACTkP,SACAyP,YACArnB,cACAqoB,QACArhB,IAAK,GAAG0B,WACRwZ,QAASmT,GAAoBzd,GAC7B,OAAA7T,CAAQtE,EAAOwZ,GACX8c,EAAO91B,IAAIgZ,EAASxZ,EACvB,IAGL62B,eAAexJ,OACX,GAAGpkB,WACH,cAAc6tB,YACV,WAAAtyB,GACInB,GAAOoB,QAAS,CACZmyB,MAAO93B,QAAQC,gBACfg4B,QAAS,GACTC,UAAU,GAEtC,CACoB,MAAI5rB,GACA,OAAO3G,MAAM2G,KAAO3G,MAAM2G,GAAK0qB,IACvD,CACoB,MAAI1qB,CAAG/M,GACHoG,MAAM2G,GAAK/M,CACnC,CACoB,uBAAM44B,GACF,IAAK93B,KAAK63B,SAAU,CAChB73B,KAAK63B,UAAW,EAChB,MAAM7O,GAAWhY,GAAOhR,OAClBI,GAAEA,EAAEoW,IAAEA,EAAGM,SAAEA,SAAmB9W,KAAKy3B,MACpCt3B,QACLH,KAAK43B,cAAgBhB,EACjB52B,KACAI,GACCJ,KAAKwqB,mBAEVxqB,KAAK+3B,kBACL/3B,KAAKg4B,MAAMC,QAAU,QACrBhqB,GAASjO,KAAM8J,EAAM,SACrB4sB,EACI12B,KACAgpB,GACCA,EAAUlS,EAAWN,GAAKxW,KAAK43B,SAEhE,CACA,GAEa,IAKTrB,GAAezsB,GAAQ6jB,gBAAgB3U,EAC3C","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,66]}